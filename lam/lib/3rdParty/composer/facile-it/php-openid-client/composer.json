{
    "name": "facile-it/php-openid-client",
    "description": "OpenID (OIDC) Client",
    "type": "library",
    "license": "MIT",
    "authors": [
        {
            "name": "Thomas Vargiu",
            "email": "thomas.vargiu@facile.it"
        }
    ],
    "minimum-stability": "stable",
    "config": {
        "sort-packages": true
    },
    "keywords": [
        "openid",
        "openid connect",
        "oidc",
        "oauth2",
        "token",
        "authentication",
        "identity"
    ],
    "require": {
        "php": "^7.2 || ^8.0",
        "ext-json": "*",
        "facile-it/php-jose-verifier": "^0.3.0",
        "php-http/discovery": "^1.6",
        "psr/http-client": "^1.0",
        "psr/http-client-implementation": "^1.0",
        "psr/http-factory": "^1.0",
        "psr/http-factory-implementation": "^1.0",
        "psr/http-message": "^1.0",
        "psr/http-message-implementation": "^1.0",
        "psr/http-server-middleware": "^1.0",
        "web-token/jwt-checker": "^2.0",
        "web-token/jwt-core": "^2.0",
        "web-token/jwt-easy": "^2.1",
        "web-token/jwt-encryption": "^2.0",
        "web-token/jwt-key-mgmt": "^2.0.7",
        "web-token/jwt-signature": "^2.0",
        "web-token/jwt-signature-algorithm-rsa": "^2.0"
    },
    "autoload": {
        "files": [
            "src/functions/base64url_decode.php",
            "src/functions/base64url_encode.php",
            "src/functions/check_server_response.php",
            "src/functions/derived_key.php",
            "src/functions/get_endpoint_uri.php",
            "src/functions/jose_secret_key.php",
            "src/functions/parse_callback_params.php",
            "src/functions/parse_metadata_response.php"
        ],
        "psr-4": {
            "Facile\\OpenIDClient\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Facile\\OpenIDClientTest\\": "tests/",
            "Facile\\OpenIDClient\\ConformanceTest\\": "conformance/src/"
        }
    },
    "require-dev": {
        "dflydev/fig-cookies": "^2.0",
        "facile-it/facile-coding-standard": "^0.4.1",
        "friendsofphp/php-cs-fixer": "^2.15",
        "laminas/laminas-component-installer": "^2.1",
        "laminas/laminas-config-aggregator": "^1.1",
        "laminas/laminas-di": "^3.1",
        "laminas/laminas-diactoros": "^2.1",
        "laminas/laminas-servicemanager": "^3.4",
        "php-http/cache-plugin": "^1.6",
        "php-http/curl-client": "^2.0",
        "php-http/guzzle7-adapter": "^0.1.0",
        "phpspec/prophecy": "^1.10.3",
        "phpspec/prophecy-phpunit": "^1.1 || ^2.0",
        "phpunit/phpunit": "^8.5.14 || ^9.3",
        "symfony/console": "^4.3 || ^5.0",
        "vimeo/psalm": "^4.7.2",
        "web-token/jwt-encryption-algorithm-aescbc": "^2.0",
        "web-token/jwt-encryption-algorithm-aesgcm": "^2.0",
        "web-token/jwt-encryption-algorithm-aesgcmkw": "^2.0",
        "web-token/jwt-encryption-algorithm-aeskw": "^2.0",
        "web-token/jwt-encryption-algorithm-dir": "^2.0",
        "web-token/jwt-encryption-algorithm-ecdh-es": "^2.0",
        "web-token/jwt-encryption-algorithm-experimental": "^2.0",
        "web-token/jwt-encryption-algorithm-pbes2": "^2.0",
        "web-token/jwt-encryption-algorithm-rsa": "^2.0",
        "web-token/jwt-signature-algorithm-ecdsa": "^2.0",
        "web-token/jwt-signature-algorithm-eddsa": "^2.0",
        "web-token/jwt-signature-algorithm-experimental": "^2.0",
        "web-token/jwt-signature-algorithm-hmac": "^2.0",
        "web-token/jwt-signature-algorithm-none": "^2.0"
    },
    "suggest": {
        "facile-it/php-oauth2-http-client": "To use a PSR HTTP client to interact with OAuth2/OpenID protected APIs",
        "web-token/jwt-signature-algorithm-hmac": "To use the client_secret_jwt auth method and symmetric key signature",
        "dflydev/fig-cookies": "To use the SessionCookieMiddleware"
    },
    "scripts": {
        "cs-check": "php-cs-fixer fix --dry-run --diff --allow-risky=yes",
        "cs-fix": "php-cs-fixer fix --diff --allow-risky=yes",
        "psalm": "psalm",
        "test": "phpunit",
        "test-coverage": "phpunit --coverage-text",
        "check": [
            "@cs-check",
            "@psalm",
            "@test"
        ]
    }
}
