/*!
 * jodit - Jodit is awesome and usefully wysiwyg editor with filebrowser
 * Author: Chupurnov <chupurnov@gmail.com> (https://xdsoft.net/jodit/)
 * Version: v4.0.6
 * Url: https://xdsoft.net/jodit/
 * License(s): MIT
 */
	
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("{}"));
	else if(typeof define === 'function' && define.amd)
		define(["{}"], factory);
	else {
		var a = typeof exports === 'object' ? factory(require("{}")) : factory(root["{}"]);
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function(__WEBPACK_EXTERNAL_MODULE__45143__) {
return /******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 75887:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ZP: function() { return /* binding */ autobind; }
/* harmony export */ });
/* unused harmony exports boundMethod, boundClass */
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) { return typeof obj; };
}
else {
    _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
} return _typeof(obj); }
/**
 * Return a descriptor removing the value and returning a getter
 * The getter will return a .bind version of the function
 * and memoize the result against a symbol on the instance
 */
function boundMethod(target, key, descriptor) {
    var fn = descriptor.value;
    if (typeof fn !== 'function') {
        throw new TypeError("@boundMethod decorator can only be applied to methods not: ".concat(_typeof(fn)));
    } // In IE11 calling Object.defineProperty has a side-effect of evaluating the
    // getter for the property which is being replaced. This causes infinite
    // recursion and an "Out of stack space" error.
    var definingProperty = false;
    return {
        configurable: true,
        get: function get() {
            // eslint-disable-next-line no-prototype-builtins
            if (definingProperty || this === target.prototype || this.hasOwnProperty(key) || typeof fn !== 'function') {
                return fn;
            }
            var boundFn = fn.bind(this);
            definingProperty = true;
            Object.defineProperty(this, key, {
                configurable: true,
                get: function get() {
                    return boundFn;
                },
                set: function set(value) {
                    fn = value;
                    delete this[key];
                }
            });
            definingProperty = false;
            return boundFn;
        },
        set: function set(value) {
            fn = value;
        }
    };
}
/**
 * Use boundMethod to bind all methods on the target.prototype
 */
function boundClass(target) {
    // (Using reflect to get all keys including symbols)
    var keys; // Use Reflect if exists
    if (typeof Reflect !== 'undefined' && typeof Reflect.ownKeys === 'function') {
        keys = Reflect.ownKeys(target.prototype);
    }
    else {
        keys = Object.getOwnPropertyNames(target.prototype); // Use symbols if support is provided
        if (typeof Object.getOwnPropertySymbols === 'function') {
            keys = keys.concat(Object.getOwnPropertySymbols(target.prototype));
        }
    }
    keys.forEach(function (key) {
        // Ignore special case target method
        if (key === 'constructor') {
            return;
        }
        var descriptor = Object.getOwnPropertyDescriptor(target.prototype, key); // Only methods need binding
        if (typeof descriptor.value === 'function') {
            Object.defineProperty(target.prototype, key, boundMethod(target, key, descriptor));
        }
    });
    return target;
}
function autobind() {
    if (arguments.length === 1) {
        return boundClass.apply(void 0, arguments);
    }
    return boundMethod.apply(void 0, arguments);
}


/***/ }),

/***/ 37446:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   D: function() { return /* binding */ Config; }
/* harmony export */ });
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62924);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/**
 * Default Editor's Configuration
 */
class Config {
    constructor() {
        /**
         * Use cache for heavy methods
         */
        this.cache = true;
        /**
         * Timeout of all asynchronous methods
         */
        this.defaultTimeout = 100;
        this.namespace = '';
        /**
         * Editor loads completely without plugins. Useful when debugging your own plugin.
         */
        this.safeMode = false;
        /**
         * Editor's width
         *
         * @example
         * ```javascript
         * Jodit.make('.editor', {
         *    width: '100%',
         * })
         * ```
         * @example
         * ```javascript
         * Jodit.make('.editor', {
         *    width: 600, // equivalent for '600px'
         * })
         * ```
         * @example
         * ```javascript
         * Jodit.make('.editor', {
         *    width: 'auto', // autosize
         * })
         * ```
         */
        this.width = 'auto';
        /**
         * Editor's height
         *
         * @example
         * ```javascript
         * Jodit.make('.editor', {
         *    height: '100%',
         * })
         * ```
         * @example
         * ```javascript
         * Jodit.make('.editor', {
         *    height: 600, // equivalent for '600px'
         * })
         * ```
         * @example
         * ```javascript
         * Jodit.make('.editor', {
         *    height: 'auto', // default - autosize
         * })
         * ```
         */
        this.height = 'auto';
        /**
         * List of plugins that will be initialized in safe mode.
         *
         * ```js
         * Jodit.make('#editor', {
         * 	safeMode: true,
         * 	safePluginsList: ['about'],
         * 	extraPlugins: ['yourPluginDev']
         * });
         * ```
         */
        this.safePluginsList = [
            'about',
            'enter',
            'backspace',
            'size',
            'bold',
            'hotkeys'
        ];
        /**
         * Reserved for the paid version of the editor
         */
        this.license = '';
        /**
         * The name of the preset that will be used to initialize the editor.
         * The list of available presets can be found here Jodit.defaultOptions.presets
         * ```javascript
         * Jodit.make('.editor', {
         * 	preset: 'inline'
         * });
         * ```
         */
        this.preset = 'custom';
        this.presets = {
            inline: {
                inline: true,
                toolbar: false,
                toolbarInline: true,
                toolbarInlineForSelection: true,
                showXPathInStatusbar: false,
                showCharsCounter: false,
                showWordsCounter: false,
                showPlaceholder: false
            }
        };
        this.ownerDocument = (typeof document !== 'undefined'
            ? document
            : null);
        /**
         * Allows you to specify the window in which the editor will be created. Default - window
         * This is necessary if you are creating the editor inside an iframe but the code is running in the parent window
         */
        this.ownerWindow = (typeof window !== 'undefined'
            ? window
            : null);
        /**
         * Shadow root if Jodit was created in it
         */
        this.shadowRoot = null;
        /**
         * z-index For editor
         */
        this.zIndex = 0;
        /**
         * Change the read-only state of the editor
         */
        this.readonly = false;
        /**
         * Change the disabled state of the editor
         */
        this.disabled = false;
        /**
         * In readOnly mode, some buttons can still be useful, for example the button to view source code or print
         */
        this.activeButtonsInReadOnly = [
            'source',
            'fullsize',
            'print',
            'about',
            'dots',
            'selectall'
        ];
        /**
         * When the editor is in read-only mode, some commands can still be executed:
         * ```javascript
         * const editor = Jodit.make('.editor', {
         * 	 allowCommandsInReadOnly: ['selectall', 'preview', 'print']
         * 	 readonly: true
         * });
         * editor.execCommand('selectall');// will be selected all content
         * editor.execCommand('delete');// but content will not be deleted
         * ```
         */
        this.allowCommandsInReadOnly = ['selectall', 'preview', 'print'];
        /**
         * Size of icons in the toolbar (can be "small", "middle", "large")
         *
         * @example
         * ```javascript
         * const editor = Jodit.make(".dark_editor", {
         *      toolbarButtonSize: "small"
         * });
         * ```
         */
        this.toolbarButtonSize = 'middle';
        /**
         * Allow navigation in the toolbar of the editor by Tab key
         */
        this.allowTabNavigation = false;
        /**
         * Inline editing mode
         */
        this.inline = false;
        /**
         * Theme (can be "dark")
         * @example
         * ```javascript
         * const editor = Jodit.make(".dark_editor", {
         *      theme: "dark"
         * });
         * ```
         */
        this.theme = 'default';
        /**
         * if set true then the current mode is saved in a cookie , and is restored after a reload of the page
         */
        this.saveModeInStorage = false;
        /**
         * Class name that can be appended to the editable area
         *
         * @see [[Config.iframeCSSLinks]]
         * @see [[Config.iframeStyle]]
         *
         * @example
         * ```javascript
         * Jodit.make('#editor', {
         *    editorClassName: 'some_my_class'
         * });
         * ```
         * ```html
         * <style>
         * .some_my_class p{
         *    line-height: 16px;
         * }
         * </style>
         * ```
         */
        this.editorClassName = false;
        /**
         * Class name that can be appended to the main editor container
         * @example
         * ```javascript
         * const jodit = Jodit.make('#editor', {
         *    className: 'some_my_class'
         * });
         *
         * console.log(jodit.container.classList.contains('some_my_class')); // true
         * ```
         * ```html
         * <style>
         * .some_my_class {
         *    max-width: 600px;
         *    margin: 0 auto;
         * }
         * </style>
         * ```
         */
        this.className = false;
        /**
         * The internal styles of the editable area. They are intended to change
         * not the appearance of the editor, but to change the appearance of the content.
         * @example
         * ```javascript
         * Jodit.make('#editor', {
         * 		style: {
         * 		 font: '12px Arial',
         * 		 color: '#0c0c0c'
         * 		}
         * });
         * ```
         */
        this.style = false;
        /**
         *
         * @example
         * ```javascript
         * Jodit.make('#editor', {
         * 		editorStyle: {
         * 		 font: '12px Arial',
         * 		 color: '#0c0c0c'
         * 		}
         * });
         * ```
         */
        this.containerStyle = false;
        /**
         * Dictionary of variable values in css, a complete list can be found here
         * https://github.com/xdan/jodit/blob/main/src/styles/variables.less#L25
         *
         * @example
         * ```js
         * const editor = Jodit.make('#editor', {
         *   styleValues: {
         *		'color-text': 'red',
         *		colorBorder: 'black',
         *		'color-panel': 'blue'
         *   }
         * });
         * ```
         */
        this.styleValues = {};
        /**
         * After all changes in editors for textarea will call change trigger
         *
         * @example
         * ```javascript
         * const editor = Jodit.make('#editor');
         * document.getElementById('editor').addEventListener('change', function () {
         *      console.log(this.value);
         * })
         * ```
         */
        this.triggerChangeEvent = true;
        /**
         * The writing direction of the language which is used to create editor content. Allowed values are: ''
         * (an empty string) – Indicates that content direction will be the same as either the editor UI direction or
         * the page element direction. 'ltr' – Indicates a Left-To-Right text direction (like in English).
         * 'rtl' – Indicates a Right-To-Left text direction (like in Arabic).
         *
         * @example
         * ```javascript
         * Jodit.make('.editor', {
         *    direction: 'rtl'
         * })
         * ```
         */
        this.direction = '';
        /**
         * Language by default. if `auto` language set by document.documentElement.lang ||
         * (navigator.language && navigator.language.substr(0, 2)) ||
         * (navigator.browserLanguage && navigator.browserLanguage.substr(0, 2)) || 'en'
         *
         * @example
         * ```html
         * <!-- include in you page lang file -->
         * <script src="jodit/lang/de.js"></script>
         * <script>
         * var editor = Jodit.make('.editor', {
         *    language: 'de'
         * });
         * </script>
         * ```
         */
        this.language = 'auto';
        /**
         * if true all Lang.i18n(key) return `{key}`
         *
         * @example
         * ```html
         * <script>
         * var editor = Jodit.make('.editor', {
         *    debugLanguage: true
         * });
         *
         * console.log(editor.i18n("Test")); // {Test}
         * </script>
         * ```
         */
        this.debugLanguage = false;
        /**
         * Collection of language pack data `{en: {'Type something': 'Type something', ...}}`
         *
         * @example
         * ```javascript
         * const editor = Jodit.make('#editor', {
         *     language: 'ru',
         *     i18n: {
         *         ru: {
         *            'Type something': 'Начните что-либо вводить'
         *         }
         *     }
         * });
         * console.log(editor.i18n('Type something')) //Начните что-либо вводить
         * ```
         */
        this.i18n = false;
        /**
         * The tabindex global attribute is an integer indicating if the element can take
         * input focus (is focusable), if it should participate to sequential keyboard navigation,
         * and if so, at what position. It can take several values
         */
        this.tabIndex = -1;
        /**
         * Boolean, whether the toolbar should be shown.
         * Alternatively, a valid css-selector-string to use an element as toolbar container.
         */
        this.toolbar = true;
        /**
         * Boolean, whether the statusbar should be shown.
         */
        this.statusbar = true;
        /**
         * Show tooltip after mouse enter on the button
         */
        this.showTooltip = true;
        /**
         * Delay before show tooltip
         */
        this.showTooltipDelay = 200;
        /**
         * Instead of create custop tooltip - use native title tooltips
         */
        this.useNativeTooltip = false;
        /**
         * Default insert method
         * @default insert_as_html
         */
        this.defaultActionOnPaste = jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.INSERT_AS_HTML;
        // TODO
        // autosave: false, // false or url
        // autosaveCallback: false, // function
        // interval: 60, // seconds
        // TODO
        /**
         * Element that will be created when you press Enter
         */
        this.enter = jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.PARAGRAPH;
        /**
         * When this option is enabled, the editor's content will be placed in an iframe and isolated from the rest of the page.
         *
         * @example
         * ```javascript
         * Jodit.make('#editor', {
         *    iframe: true,
         *    iframeStyle: 'html{margin: 0px;}body{padding:10px;background:transparent;color:#000;position:relative;z-index:2;\
         *    user-select:auto;margin:0px;overflow:hidden;}body:after{content:"";clear:both;display:block}';
         * });
         * ```
         */
        this.iframe = false;
        /**
         * Allow editing the entire HTML document(html, head)
         * \> Works together with the iframe option.
         * @example
         * ```js
         * const editor = Jodit.make('#editor', {
         *   iframe: true,
         *   editHTMLDocumentMode: true
         * });
         * editor.value = '<!DOCTYPE html><html lang="en" style="overflow-y:hidden">' +
         * 	'<head><title>Jodit Editor</title></head>' +
         * 	'<body spellcheck="false"><p>Some text</p><p> a </p></body>' +
         * 	'</html>';
         * ```
         */
        this.editHTMLDocumentMode = false;
        /**
         * Use when you need insert new block element
         * use enter option if not set
         */
        this.enterBlock = this.enter !== 'br' ? this.enter : jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.PARAGRAPH;
        /**
         * Jodit.MODE_WYSIWYG The HTML editor allows you to write like MSWord,
         * Jodit.MODE_SOURCE syntax highlighting source editor
         * @example
         * ```javascript
         * var editor = Jodit.make('#editor', {
         *     defaultMode: Jodit.MODE_SPLIT
         * });
         * console.log(editor.getRealMode())
         * ```
         */
        this.defaultMode = jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.MODE_WYSIWYG;
        /**
         * Use split mode
         */
        this.useSplitMode = false;
        /**
         * The colors in HEX representation to select a color for the background and for the text in colorpicker
         * @example
         * ```javascript
         *  Jodit.make('#editor', {
         *     colors: ['#ff0000', '#00ff00', '#0000ff']
         * })
         * ```
         */
        this.colors = {
            greyscale: [
                '#000000',
                '#434343',
                '#666666',
                '#999999',
                '#B7B7B7',
                '#CCCCCC',
                '#D9D9D9',
                '#EFEFEF',
                '#F3F3F3',
                '#FFFFFF'
            ],
            palette: [
                '#980000',
                '#FF0000',
                '#FF9900',
                '#FFFF00',
                '#00F0F0',
                '#00FFFF',
                '#4A86E8',
                '#0000FF',
                '#9900FF',
                '#FF00FF'
            ],
            full: [
                '#E6B8AF',
                '#F4CCCC',
                '#FCE5CD',
                '#FFF2CC',
                '#D9EAD3',
                '#D0E0E3',
                '#C9DAF8',
                '#CFE2F3',
                '#D9D2E9',
                '#EAD1DC',
                '#DD7E6B',
                '#EA9999',
                '#F9CB9C',
                '#FFE599',
                '#B6D7A8',
                '#A2C4C9',
                '#A4C2F4',
                '#9FC5E8',
                '#B4A7D6',
                '#D5A6BD',
                '#CC4125',
                '#E06666',
                '#F6B26B',
                '#FFD966',
                '#93C47D',
                '#76A5AF',
                '#6D9EEB',
                '#6FA8DC',
                '#8E7CC3',
                '#C27BA0',
                '#A61C00',
                '#CC0000',
                '#E69138',
                '#F1C232',
                '#6AA84F',
                '#45818E',
                '#3C78D8',
                '#3D85C6',
                '#674EA7',
                '#A64D79',
                '#85200C',
                '#990000',
                '#B45F06',
                '#BF9000',
                '#38761D',
                '#134F5C',
                '#1155CC',
                '#0B5394',
                '#351C75',
                '#733554',
                '#5B0F00',
                '#660000',
                '#783F04',
                '#7F6000',
                '#274E13',
                '#0C343D',
                '#1C4587',
                '#073763',
                '#20124D',
                '#4C1130'
            ]
        };
        /**
         * The default tab color picker
         * @example
         * ```javascript
         * Jodit.make('#editor2', {
         *     colorPickerDefaultTab: 'color'
         * })
         * ```
         */
        this.colorPickerDefaultTab = 'background';
        /**
         * Image size defaults to a larger image
         */
        this.imageDefaultWidth = 300;
        /**
         * Do not display these buttons that are on the list
         * @example
         * ```javascript
         * Jodit.make('#editor2', {
         *     removeButtons: ['hr', 'source']
         * });
         * ```
         */
        this.removeButtons = [];
        /**
         * Do not init these plugins
         * @example
         * ```typescript
         * var editor = Jodit.make('.editor', {
         *    disablePlugins: 'table,iframe'
         * });
         * //or
         * var editor = Jodit.make('.editor', {
         *    disablePlugins: ['table', 'iframe']
         * });
         * ```
         */
        this.disablePlugins = [];
        /**
         * Init and download extra plugins
         * @example
         * ```typescript
         * var editor = Jodit.make('.editor', {
         *    extraPlugins: ['emoji']
         * });
         * ```
         * It will try load %SCRIPT_PATH%/plugins/emoji/emoji.js and after load will try init it
         */
        this.extraPlugins = [];
        /**
         * These buttons list will be added to option.buttons
         */
        this.extraButtons = [];
        /**
         * By default, you can only install an icon from the Jodit suite.
         * You can add your icon to the set using the `Jodit.modules.Icon.set (name, svg Code)` method.
         * But for a declarative declaration, you can use this option.
         *
         * @example
         * ```js
         * Jodit.modules.Icon.set('someIcon', '<svg><path.../></svg>');
         * const editor = Jodit.make({
         *   extraButtons: [{
         *     name: 'someButton',
         *     icon: 'someIcon'
         *   }]
         * });
         *
         * @example
         * const editor = Jodit.make({
         *   extraIcons: {
         *     someIcon: '<svg><path.../></svg>'
         *   },
         *   extraButtons: [{
         *     name: 'someButton',
         *     icon: 'someIcon'
         *   }]
         * });
         * ```
         * @example
         * ```js
         * const editor = Jodit.make({
         *   extraButtons: [{
         *     name: 'someButton',
         *     icon: '<svg><path.../></svg>'
         *   }]
         * });
         * ```
         */
        this.extraIcons = {};
        /**
         * Default attributes for created inside editor elements
         * @example
         * ```js
         * const editor2 = Jodit.make('#editor', {
         * 	createAttributes: {
         * 		div: {
         * 			class: 'test'
         * 		},
         * 		ul: function (ul) {
         * 			ul.classList.add('ui-test');
         * 		}
         * 	}
         * });
         *
         * const div2 = editor2.createInside.div();
         * expect(div2.className).equals('test');
         *
         * const ul = editor2.createInside.element('ul');
         * expect(ul.className).equals('ui-test');
         * ```
         * Or JSX in React
         * @example
         * ```jsx
         * import React, {useState, useRef} from 'react';
         * import JoditEditor from "jodit-react";
         *
         * const config = {
         * 	createAttributes: {
         * 		div: {
         * 			class: 'align-center'
         * 		}
         * 	}
         * };
         *
         * <JoditEditor config={config}/>
         * ```
         */
        this.createAttributes = {
            table: {
                style: 'border-collapse:collapse;width: 100%;'
            }
        };
        /**
         * The width of the editor, accepted as the biggest. Used to the responsive version of the editor
         */
        this.sizeLG = 900;
        /**
         * The width of the editor, accepted as the medium. Used to the responsive version of the editor
         */
        this.sizeMD = 700;
        /**
         * The width of the editor, accepted as the small. Used to the responsive version of the editor
         */
        this.sizeSM = 400;
        /**
         * The list of buttons that appear in the editor's toolbar on large places (≥ options.sizeLG).
         * Note - this is not the width of the device, the width of the editor
         * @example
         * ```javascript
         * Jodit.make('#editor', {
         *     buttons: ['bold', 'italic', 'source'],
         *     buttonsMD: ['bold', 'italic'],
         *     buttonsXS: ['bold', 'fullsize'],
         * });
         * ```
         * @example
         * ```javascript
         * Jodit.make('#editor2', {
         *     buttons: [{
         *         name: 'empty',
         *         icon: 'source',
         *         exec: function (editor) {
         *             const dialog = new Jodit.modules.Dialog({}),
         *                 text = editor.c.element('textarea');
         *
         *             dialog.setHeader('Source code');
         *             dialog.setContent(text);
         *             dialog.setSize(400, 300);
         *
         *             Jodit.modules.Helpers.css(elm, {
         *                 width: '100%',
         *                 height: '100%'
         *             })
    
         *             dialog.open();
         *         }
         *     }]
         * });
         * ```
         * @example
         * ```javascript
         * Jodit.make('#editor2', {
         *     buttons: Jodit.defaultOptions.buttons.concat([{
         *        name: 'listsss',
         *        iconURL: 'stuf/dummy.png',
         *        list: {
         *            h1: 'insert Header 1',
         *            h2: 'insert Header 2',
         *            clear: 'Empty editor',
         *        },
         *        exec: ({originalEvent, control, btn}) => {
         *             var key = control.args[0],
         *                value = control.args[1];
         *             if (key === 'clear') {
         *                 this.val('');
         *                 return;
         *             }
         *             this.s.insertNode(this.c.element(key, ''));
         *             this.message.info('Was inserted ' + value);
         *        },
         *        template: function (key, value) {
         *            return '<div>' + value + '</div>';
         *        }
         *  });
         * ```
         */
        this.buttons = [
            {
                group: 'font-style',
                buttons: []
            },
            {
                group: 'list',
                buttons: []
            },
            {
                group: 'font',
                buttons: []
            },
            '---',
            {
                group: 'script',
                buttons: []
            },
            {
                group: 'media',
                buttons: []
            },
            '\n',
            {
                group: 'state',
                buttons: []
            },
            {
                group: 'clipboard',
                buttons: []
            },
            {
                group: 'insert',
                buttons: []
            },
            {
                group: 'indent',
                buttons: []
            },
            {
                group: 'color',
                buttons: []
            },
            {
                group: 'form',
                buttons: []
            },
            '---',
            {
                group: 'history',
                buttons: []
            },
            {
                group: 'search',
                buttons: []
            },
            {
                group: 'source',
                buttons: []
            },
            {
                group: 'other',
                buttons: []
            },
            {
                group: 'info',
                buttons: []
            }
        ];
        /**
         * Some events are called when the editor is initialized, for example, the `afterInit` event.
         * So this code won't work:
         * ```javascript
         * const editor = Jodit.make('#editor');
         * editor.events.on('afterInit', () => console.log('afterInit'));
         * ```
         * You need to do this:
         * ```javascript
         * Jodit.make('#editor', {
         * 		events: {
         * 	  	afterInit: () => console.log('afterInit')
         * 		}
         * });
         * ```
         * The option can use any Jodit events, for example:
         * ```javascript
         * const editor = Jodit.make('#editor', {
         * 		events: {
         * 			hello: (name) => console.log('Hello', name)
         * 		}
         * });
         * editor.e.fire('hello', 'Mike');
         * ```
         */
        this.events = {};
        /**
         * Buttons in toolbat without SVG - only texts
         */
        this.textIcons = false;
        /**
         * shows a INPUT[type=color] to open the browser color picker, on the right bottom of widget color picker
         */
        this.showBrowserColorPicker = true;
    }
    static get defaultOptions() {
        if (!Config.__defaultOptions) {
            Config.__defaultOptions = new Config();
        }
        return Config.__defaultOptions;
    }
}
Config.prototype.controls = {};



/***/ }),

/***/ 84951:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   e: function() { return /* binding */ Async; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_async__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(78037);
/* harmony import */ var jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(69099);
/* harmony import */ var jodit_core_helpers_checker_is_plain_object__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(45564);
/* harmony import */ var jodit_core_helpers_checker_is_promise__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(59862);
/* harmony import */ var jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(2926);
/* harmony import */ var jodit_core_helpers_checker_is_number__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(32952);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52378);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var jodit_core_helpers_checker_is_void__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(41240);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62924);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */









class Async {
    constructor() {
        var _a, _b, _c, _d, _e;
        this.timers = new Map();
        this.__callbacks = new Map();
        this.__queueMicrotaskNative = (_a = queueMicrotask === null || queueMicrotask === void 0 ? void 0 : queueMicrotask.bind(window)) !== null && _a !== void 0 ? _a : Promise.resolve().then.bind(Promise.resolve());
        this.promisesRejections = new Set();
        this.requestsIdle = new Set();
        this.requestsRaf = new Set();
        this.requestIdleCallbackNative = (_c = (_b = window['requestIdleCallback']) === null || _b === void 0 ? void 0 : _b.bind(window)) !== null && _c !== void 0 ? _c : ((callback, options) => {
            var _a;
            const start = Date.now();
            return this.setTimeout(() => {
                callback({
                    didTimeout: false,
                    timeRemaining: () => Math.max(0, 50 - (Date.now() - start))
                });
            }, (_a = options === null || options === void 0 ? void 0 : options.timeout) !== null && _a !== void 0 ? _a : 1);
        });
        this.cancelIdleCallbackNative = (_e = (_d = window['cancelIdleCallback']) === null || _d === void 0 ? void 0 : _d.bind(window)) !== null && _e !== void 0 ? _e : ((request) => {
            this.clearTimeout(request);
        });
        this.isDestructed = false;
    }
    delay(timeout) {
        return this.promise(resolve => this.setTimeout(resolve, timeout));
    }
    setTimeout(callback, timeout, ...args) {
        if (this.isDestructed) {
            return 0;
        }
        let options = {};
        if ((0,jodit_core_helpers_checker_is_void__WEBPACK_IMPORTED_MODULE_2__/* .isVoid */ .n)(timeout)) {
            timeout = 0;
        }
        if (!(0,jodit_core_helpers_checker_is_number__WEBPACK_IMPORTED_MODULE_3__/* .isNumber */ .h)(timeout)) {
            options = timeout;
            timeout = options.timeout || 0;
        }
        if (options.label) {
            this.clearLabel(options.label);
        }
        const timer = (0,jodit_core_helpers_async__WEBPACK_IMPORTED_MODULE_4__/* .setTimeout */ .i)(callback, timeout, ...args), key = options.label || timer;
        this.timers.set(key, timer);
        this.__callbacks.set(key, callback);
        return timer;
    }
    updateTimeout(label, timeout) {
        void 0;
        if (!label || !this.timers.has(label)) {
            return null;
        }
        const callback = this.__callbacks.get(label);
        void 0;
        return this.setTimeout(callback, { label, timeout });
    }
    clearLabel(label) {
        if (label && this.timers.has(label)) {
            (0,jodit_core_helpers_async__WEBPACK_IMPORTED_MODULE_4__/* .clearTimeout */ .g)(this.timers.get(label));
            this.timers.delete(label);
            this.__callbacks.delete(label);
        }
    }
    clearTimeout(timerOrLabel) {
        if ((0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_5__/* .isString */ .H)(timerOrLabel)) {
            return this.clearLabel(timerOrLabel);
        }
        (0,jodit_core_helpers_async__WEBPACK_IMPORTED_MODULE_4__/* .clearTimeout */ .g)(timerOrLabel);
        this.timers.delete(timerOrLabel);
        this.__callbacks.delete(timerOrLabel);
    }
    /**
     * Debouncing enforces that a function not be called again until a certain amount of time has passed without
     * it being called. As in "execute this function only if 100 milliseconds have passed without it being called."
     *
     * @example
     * ```javascript
     * var jodit = Jodit.make('.editor');
     * jodit.e.on('mousemove', jodit.async.debounce(() => {
     * 	// Do expensive things
     * }, 100));
     * ```
     */
    debounce(fn, timeout, firstCallImmediately = false) {
        let timer = 0, fired = false;
        const promises = [];
        const callFn = (...args) => {
            if (!fired) {
                timer = 0;
                const res = fn(...args);
                fired = true;
                if (promises.length) {
                    const runPromises = () => {
                        promises.forEach(res => res());
                        promises.length = 0;
                    };
                    (0,jodit_core_helpers_checker_is_promise__WEBPACK_IMPORTED_MODULE_6__/* .isPromise */ .t)(res) ? res.finally(runPromises) : runPromises();
                }
            }
        };
        const onFire = (...args) => {
            fired = false;
            if (!timeout) {
                callFn(...args);
            }
            else {
                if (!timer && firstCallImmediately) {
                    callFn(...args);
                }
                (0,jodit_core_helpers_async__WEBPACK_IMPORTED_MODULE_4__/* .clearTimeout */ .g)(timer);
                timer = this.setTimeout(() => callFn(...args), (0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_7__/* .isFunction */ .m)(timeout) ? timeout() : timeout);
                this.timers.set(fn, timer);
            }
        };
        return (0,jodit_core_helpers_checker_is_plain_object__WEBPACK_IMPORTED_MODULE_8__/* .isPlainObject */ .P)(timeout) && timeout.promisify
            ? (...args) => {
                const promise = this.promise(res => {
                    promises.push(res);
                });
                onFire(...args);
                return promise;
            }
            : onFire;
    }
    microDebounce(fn, firstCallImmediately = false) {
        let scheduled = false;
        let needCall = true;
        let savedArgs;
        return ((...args) => {
            savedArgs = args;
            if (scheduled) {
                needCall = true;
                return;
            }
            needCall = true;
            if (firstCallImmediately) {
                needCall = false;
                fn(...savedArgs);
            }
            scheduled = true;
            this.__queueMicrotaskNative(() => {
                scheduled = false;
                if (this.isDestructed) {
                    return;
                }
                needCall && fn(...savedArgs);
            });
        });
    }
    /**
     * Throttling enforces a maximum number of times a function can be called over time.
     * As in "execute this function at most once every 100 milliseconds."
     *
     * @example
     * ```javascript
     * var jodit = Jodit.make('.editor');
     * jodit.e.on(document.body, 'scroll', jodit.async.throttle(function() {
     * 	// Do expensive things
     * }, 100));
     * ```
     */
    throttle(fn, timeout, ignore = false) {
        let timer = null, needInvoke, callee, lastArgs;
        return (...args) => {
            needInvoke = true;
            lastArgs = args;
            if (!timeout) {
                fn(...lastArgs);
                return;
            }
            if (!timer) {
                callee = () => {
                    if (needInvoke) {
                        fn(...lastArgs);
                        needInvoke = false;
                        timer = this.setTimeout(callee, (0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_7__/* .isFunction */ .m)(timeout) ? timeout() : timeout);
                        this.timers.set(callee, timer);
                    }
                    else {
                        timer = null;
                    }
                };
                callee();
            }
        };
    }
    promise(executor) {
        let rejectCallback = () => { };
        const promise = new Promise((resolve, reject) => {
            this.promisesRejections.add(reject);
            rejectCallback = () => reject(Error('Reject promise'));
            return executor(resolve, reject);
        });
        if (!promise.finally && typeof process !== 'undefined' && !jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.IS_ES_NEXT) {
            promise.finally = (onfinally) => {
                promise.then(onfinally).catch(onfinally);
                return promise;
            };
        }
        promise
            .finally(() => {
            this.promisesRejections.delete(rejectCallback);
        })
            .catch(() => null);
        promise.rejectCallback = rejectCallback;
        return promise;
    }
    /**
     * Get Promise status
     */
    promiseState(p) {
        if (p.status) {
            return p.status;
        }
        // Hi IE11
        if (!Promise.race) {
            return new Promise(resolve => {
                p.then(v => {
                    resolve('fulfilled');
                    return v;
                }, e => {
                    resolve('rejected');
                    throw e;
                });
                this.setTimeout(() => {
                    resolve('pending');
                }, 100);
            });
        }
        const t = {};
        return Promise.race([p, t]).then(v => (v === t ? 'pending' : 'fulfilled'), () => 'rejected');
    }
    requestIdleCallback(callback, options) {
        const request = this.requestIdleCallbackNative(callback, options);
        this.requestsIdle.add(request);
        return request;
    }
    requestIdlePromise(options) {
        return this.promise(res => {
            const request = this.requestIdleCallback(() => res(request), options);
        });
    }
    cancelIdleCallback(request) {
        this.requestsIdle.delete(request);
        return this.cancelIdleCallbackNative(request);
    }
    requestAnimationFrame(callback) {
        const request = requestAnimationFrame(callback);
        this.requestsRaf.add(request);
        return request;
    }
    cancelAnimationFrame(request) {
        this.requestsRaf.delete(request);
        cancelAnimationFrame(request);
    }
    clear() {
        this.requestsIdle.forEach(key => this.cancelIdleCallback(key));
        this.requestsRaf.forEach(key => this.cancelAnimationFrame(key));
        this.timers.forEach(key => (0,jodit_core_helpers_async__WEBPACK_IMPORTED_MODULE_4__/* .clearTimeout */ .g)(this.timers.get(key)));
        this.timers.clear();
        this.promisesRejections.forEach(reject => reject());
        this.promisesRejections.clear();
    }
    destruct() {
        this.clear();
        this.isDestructed = true;
    }
}


/***/ }),

/***/ 76731:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   e: function() { return /* reexport safe */ _async__WEBPACK_IMPORTED_MODULE_0__.e; }
/* harmony export */ });
/* harmony import */ var _async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(84951);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module async
 */



/***/ }),

/***/ 91003:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   w: function() { return /* binding */ Component; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(79102);
/* harmony import */ var jodit_core_component_statuses__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(74028);
/* harmony import */ var jodit_core_async__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(76731);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




const StatusListHandlers = new Map();
/**
 * The base class of all Jodit UI components. Provides work with a life cycle.
 */
class Component {
    get componentName() {
        if (!this.__componentName) {
            this.__componentName =
                'jodit-' +
                    (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.kebabCase)(((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.isFunction)(this.className) ? this.className() : '') ||
                        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.getClassName)(this));
        }
        return this.__componentName;
    }
    getFullElName(elementName, mod, modValue) {
        const result = [this.componentName];
        if (elementName) {
            elementName = elementName.replace(/[^a-z0-9-]/gi, '-');
            result.push(`__${elementName}`);
        }
        if (mod) {
            result.push('_', mod);
            result.push('_', (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.isVoid)(modValue) ? 'true' : modValue.toString());
        }
        return result.join('');
    }
    /**
     * The document in which jodit was created
     */
    get ownerDocument() {
        return this.ow.document;
    }
    /**
     * Shortcut for `this.ownerDocument`
     */
    get od() {
        return this.ownerDocument;
    }
    get ow() {
        return this.ownerWindow;
    }
    /**
     * Safe get any field
     * @example
     * ```js
     * private a = {
     * 	b: {
     * 		c: {
     * 			e: {
     * 				g: {
     * 					color: 'red'
     * 				}
     * 			}
     * 		}
     * 	}
     * }
     *
     * this.get('a.b.c.e.g.color'); // Safe access to color
     * // instead using optionsl chaining
     * this?.a?.b?.c?.e?.g?.color
     * ```
     *
     * @param chain - the path to be traversed in the obj object
     * @param obj - the object in which the value is searched
     */
    get(chain, obj) {
        return (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.get)(chain, obj || this);
    }
    /**
     * Component is ready for work
     */
    get isReady() {
        return this.componentStatus === jodit_core_component_statuses__WEBPACK_IMPORTED_MODULE_2__/* .STATUSES */ .n.ready;
    }
    /**
     * Component was destructed
     */
    get isDestructed() {
        return this.componentStatus === jodit_core_component_statuses__WEBPACK_IMPORTED_MODULE_2__/* .STATUSES */ .n.destructed;
    }
    /**
     * The component is currently undergoing destructuring or has already been destroyed.
     * Those. you should not hang new events on him now or do anything else with him.
     */
    get isInDestruct() {
        return (jodit_core_component_statuses__WEBPACK_IMPORTED_MODULE_2__/* .STATUSES */ .n.beforeDestruct === this.componentStatus ||
            jodit_core_component_statuses__WEBPACK_IMPORTED_MODULE_2__/* .STATUSES */ .n.destructed === this.componentStatus);
    }
    /**
     * Bind destructor to some View
     */
    bindDestruct(component) {
        component.hookStatus(jodit_core_component_statuses__WEBPACK_IMPORTED_MODULE_2__/* .STATUSES */ .n.beforeDestruct, () => !this.isInDestruct && this.destruct());
        return this;
    }
    constructor() {
        this.async = new jodit_core_async__WEBPACK_IMPORTED_MODULE_3__/* .Async */ .e();
        /**
         * The window in which jodit was created
         */
        this.ownerWindow = window;
        this.__componentStatus = jodit_core_component_statuses__WEBPACK_IMPORTED_MODULE_2__/* .STATUSES */ .n.beforeInit;
        this.uid = 'jodit-uid-' + (0,jodit_core_global__WEBPACK_IMPORTED_MODULE_1__/* .uniqueUid */ .fe)();
    }
    /**
     * Destruct component method
     */
    destruct() {
        this.setStatus(jodit_core_component_statuses__WEBPACK_IMPORTED_MODULE_2__/* .STATUSES */ .n.destructed);
        if (this.async) {
            this.async.destruct();
            // @ts-ignore
            this.async = undefined;
        }
        if (StatusListHandlers.get(this)) {
            StatusListHandlers.delete(this);
        }
        // @ts-ignore
        this.ownerWindow = undefined;
    }
    /**
     * Current component status
     */
    get componentStatus() {
        return this.__componentStatus;
    }
    /**
     * Setter for current component status
     */
    set componentStatus(componentStatus) {
        this.setStatus(componentStatus);
    }
    /**
     * Set component status
     * @param componentStatus - component status
     * @see ComponentStatus
     */
    setStatus(componentStatus) {
        return this.setStatusComponent(componentStatus, this);
    }
    /**
     * Set status recursively on all parents
     */
    setStatusComponent(componentStatus, component) {
        if (componentStatus === this.__componentStatus) {
            return;
        }
        if (component === this) {
            this.__componentStatus = componentStatus;
        }
        const proto = Object.getPrototypeOf(this);
        if (proto && (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.isFunction)(proto.setStatusComponent)) {
            proto.setStatusComponent(componentStatus, component);
        }
        const statuses = StatusListHandlers.get(this), list = statuses === null || statuses === void 0 ? void 0 : statuses[componentStatus];
        if (list && list.length) {
            list.forEach(cb => cb(component));
        }
    }
    /**
     * Adds a handler for changing the component's status
     *
     * @param status - the status at which the callback is triggered
     * @param callback - a function that will be called when the status is `status`
     */
    hookStatus(status, callback) {
        let list = StatusListHandlers.get(this);
        if (!list) {
            list = {};
            StatusListHandlers.set(this, list);
        }
        if (!list[status]) {
            list[status] = [];
        }
        list[status].push(callback);
    }
    static isInstanceOf(c, constructorFunc) {
        return c instanceof constructorFunc;
    }
}
Component.STATUSES = jodit_core_component_statuses__WEBPACK_IMPORTED_MODULE_2__/* .STATUSES */ .n;


/***/ }),

/***/ 2581:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Hr: function() { return /* reexport safe */ _view_component__WEBPACK_IMPORTED_MODULE_2__.H; },
/* harmony export */   n$: function() { return /* reexport safe */ _statuses__WEBPACK_IMPORTED_MODULE_0__.n; },
/* harmony export */   wA: function() { return /* reexport safe */ _component__WEBPACK_IMPORTED_MODULE_1__.w; }
/* harmony export */ });
/* harmony import */ var _statuses__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74028);
/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(91003);
/* harmony import */ var _view_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(47604);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module component
 */





/***/ }),

/***/ 74028:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   n: function() { return /* binding */ STATUSES; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module component
 */
const STATUSES = {
    beforeInit: 'beforeInit',
    ready: 'ready',
    beforeDestruct: 'beforeDestruct',
    destructed: 'destructed'
};


/***/ }),

/***/ 47604:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   H: function() { return /* binding */ ViewComponent; }
/* harmony export */ });
/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(91003);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

class ViewComponent extends _component__WEBPACK_IMPORTED_MODULE_0__/* .Component */ .w {
    /**
     * Shortcut for `this.jodit`
     */
    get j() {
        return this.jodit;
    }
    get defaultTimeout() {
        return this.j.defaultTimeout;
    }
    i18n(text, ...params) {
        return this.j.i18n(text, ...params);
    }
    /**
     * Attach component to View
     */
    setParentView(jodit) {
        this.jodit = jodit;
        jodit.components.add(this);
        return this;
    }
    constructor(jodit) {
        super();
        this.setParentView(jodit);
    }
    /** @override */
    destruct() {
        this.j.components.delete(this);
        return super.destruct();
    }
}


/***/ }),

/***/ 62924:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ACCURACY: function() { return /* binding */ ACCURACY; },
/* harmony export */   APP_VERSION: function() { return /* binding */ APP_VERSION; },
/* harmony export */   BASE_PATH: function() { return /* binding */ BASE_PATH; },
/* harmony export */   BR: function() { return /* binding */ BR; },
/* harmony export */   CLIPBOARD_ID: function() { return /* binding */ CLIPBOARD_ID; },
/* harmony export */   COMMAND_KEYS: function() { return /* binding */ COMMAND_KEYS; },
/* harmony export */   EMULATE_DBLCLICK_TIMEOUT: function() { return /* binding */ EMULATE_DBLCLICK_TIMEOUT; },
/* harmony export */   ES: function() { return /* binding */ ES; },
/* harmony export */   FAT_MODE: function() { return /* binding */ FAT_MODE; },
/* harmony export */   HOMEPAGE: function() { return /* binding */ HOMEPAGE; },
/* harmony export */   INSEPARABLE_TAGS: function() { return /* binding */ INSEPARABLE_TAGS; },
/* harmony export */   INSERT_AS_HTML: function() { return /* binding */ INSERT_AS_HTML; },
/* harmony export */   INSERT_AS_TEXT: function() { return /* binding */ INSERT_AS_TEXT; },
/* harmony export */   INSERT_CLEAR_HTML: function() { return /* binding */ INSERT_CLEAR_HTML; },
/* harmony export */   INSERT_ONLY_TEXT: function() { return /* binding */ INSERT_ONLY_TEXT; },
/* harmony export */   INVISIBLE_SPACE: function() { return /* binding */ INVISIBLE_SPACE; },
/* harmony export */   INVISIBLE_SPACE_REG_EXP: function() { return /* binding */ INVISIBLE_SPACE_REG_EXP; },
/* harmony export */   INVISIBLE_SPACE_REG_EXP_END: function() { return /* binding */ INVISIBLE_SPACE_REG_EXP_END; },
/* harmony export */   INVISIBLE_SPACE_REG_EXP_START: function() { return /* binding */ INVISIBLE_SPACE_REG_EXP_START; },
/* harmony export */   IS_BLOCK: function() { return /* binding */ IS_BLOCK; },
/* harmony export */   IS_ES_MODERN: function() { return /* binding */ IS_ES_MODERN; },
/* harmony export */   IS_ES_NEXT: function() { return /* binding */ IS_ES_NEXT; },
/* harmony export */   IS_IE: function() { return /* binding */ IS_IE; },
/* harmony export */   IS_INLINE: function() { return /* binding */ IS_INLINE; },
/* harmony export */   IS_MAC: function() { return /* binding */ IS_MAC; },
/* harmony export */   IS_PROD: function() { return /* binding */ IS_PROD; },
/* harmony export */   IS_TEST: function() { return /* binding */ IS_TEST; },
/* harmony export */   KEY_ALIASES: function() { return /* binding */ KEY_ALIASES; },
/* harmony export */   KEY_ALT: function() { return /* binding */ KEY_ALT; },
/* harmony export */   KEY_BACKSPACE: function() { return /* binding */ KEY_BACKSPACE; },
/* harmony export */   KEY_DELETE: function() { return /* binding */ KEY_DELETE; },
/* harmony export */   KEY_DOWN: function() { return /* binding */ KEY_DOWN; },
/* harmony export */   KEY_ENTER: function() { return /* binding */ KEY_ENTER; },
/* harmony export */   KEY_ESC: function() { return /* binding */ KEY_ESC; },
/* harmony export */   KEY_F3: function() { return /* binding */ KEY_F3; },
/* harmony export */   KEY_LEFT: function() { return /* binding */ KEY_LEFT; },
/* harmony export */   KEY_META: function() { return /* binding */ KEY_META; },
/* harmony export */   KEY_RIGHT: function() { return /* binding */ KEY_RIGHT; },
/* harmony export */   KEY_SPACE: function() { return /* binding */ KEY_SPACE; },
/* harmony export */   KEY_TAB: function() { return /* binding */ KEY_TAB; },
/* harmony export */   KEY_UP: function() { return /* binding */ KEY_UP; },
/* harmony export */   LIST_TAGS: function() { return /* binding */ LIST_TAGS; },
/* harmony export */   MARKER_CLASS: function() { return /* binding */ MARKER_CLASS; },
/* harmony export */   MODE_SOURCE: function() { return /* binding */ MODE_SOURCE; },
/* harmony export */   MODE_SPLIT: function() { return /* binding */ MODE_SPLIT; },
/* harmony export */   MODE_WYSIWYG: function() { return /* binding */ MODE_WYSIWYG; },
/* harmony export */   NBSP_SPACE: function() { return /* binding */ NBSP_SPACE; },
/* harmony export */   NEARBY: function() { return /* binding */ NEARBY; },
/* harmony export */   NO_EMPTY_TAGS: function() { return /* binding */ NO_EMPTY_TAGS; },
/* harmony export */   PARAGRAPH: function() { return /* binding */ PARAGRAPH; },
/* harmony export */   PASSIVE_EVENTS: function() { return /* binding */ PASSIVE_EVENTS; },
/* harmony export */   SAFE_COUNT_CHANGE_CALL: function() { return /* binding */ SAFE_COUNT_CHANGE_CALL; },
/* harmony export */   SET_TEST: function() { return /* binding */ SET_TEST; },
/* harmony export */   SOURCE_CONSUMER: function() { return /* binding */ SOURCE_CONSUMER; },
/* harmony export */   SPACE_REG_EXP: function() { return /* binding */ SPACE_REG_EXP; },
/* harmony export */   SPACE_REG_EXP_END: function() { return /* binding */ SPACE_REG_EXP_END; },
/* harmony export */   SPACE_REG_EXP_START: function() { return /* binding */ SPACE_REG_EXP_START; },
/* harmony export */   TEMP_ATTR: function() { return /* binding */ TEMP_ATTR; },
/* harmony export */   TEXT_HTML: function() { return /* binding */ TEXT_HTML; },
/* harmony export */   TEXT_PLAIN: function() { return /* binding */ TEXT_PLAIN; },
/* harmony export */   TEXT_RTF: function() { return /* binding */ TEXT_RTF; },
/* harmony export */   lang: function() { return /* binding */ lang; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
const APP_VERSION = "4.0.6";
// prettier-ignore
const ES = "es2015";
const IS_ES_MODERN = true;
const IS_ES_NEXT = false;
const IS_PROD = true;
let IS_TEST = false;
const FAT_MODE = false;
const HOMEPAGE = "https://xdsoft.net/jodit/";
const SET_TEST = () => (IS_TEST = true);
const INVISIBLE_SPACE = '\uFEFF';
const NBSP_SPACE = '\u00A0';
const INVISIBLE_SPACE_REG_EXP = () => /[\uFEFF]/g;
const INVISIBLE_SPACE_REG_EXP_END = () => /[\uFEFF]+$/g;
const INVISIBLE_SPACE_REG_EXP_START = () => /^[\uFEFF]+/g;
const SPACE_REG_EXP = () => /[\s\n\t\r\uFEFF\u200b]+/g;
const SPACE_REG_EXP_START = () => /^[\s\n\t\r\uFEFF\u200b]+/g;
const SPACE_REG_EXP_END = () => /[\s\n\t\r\uFEFF\u200b]+$/g;
const IS_BLOCK = /^(ADDRESS|ARTICLE|ASIDE|BLOCKQUOTE|CANVAS|DD|DFN|DIV|DL|DT|FIELDSET|FIGCAPTION|FIGURE|FOOTER|FORM|H[1-6]|HEADER|HGROUP|HR|LI|MAIN|NAV|NOSCRIPT|OUTPUT|P|PRE|RUBY|SCRIPT|STYLE|OBJECT|OL|SECTION|IFRAME|JODIT|JODIT-MEDIA|UL|TR|TD|TH|TBODY|THEAD|TFOOT|TABLE|BODY|HTML|VIDEO)$/i;
const IS_INLINE = /^(STRONG|SPAN|I|EM|B|SUP|SUB|A|U)$/i;
const LIST_TAGS = new Set(['ul', 'ol']);
const __UNSEPARABLE_TAGS = [
    'img',
    'video',
    'svg',
    'iframe',
    'script',
    'input',
    'textarea',
    'link',
    'jodit',
    'jodit-media'
];
const INSEPARABLE_TAGS = new Set([
    ...__UNSEPARABLE_TAGS,
    'br',
    'hr'
]);
const NO_EMPTY_TAGS = new Set(__UNSEPARABLE_TAGS);
const KEY_META = 'Meta';
const KEY_BACKSPACE = 'Backspace';
const KEY_TAB = 'Tab';
const KEY_ENTER = 'Enter';
const KEY_ESC = 'Escape';
const KEY_ALT = 'Alt';
const KEY_LEFT = 'ArrowLeft';
const KEY_UP = 'ArrowUp';
const KEY_RIGHT = 'ArrowRight';
const KEY_DOWN = 'ArrowDown';
const KEY_SPACE = 'Space';
const KEY_DELETE = 'Delete';
const KEY_F3 = 'F3';
const NEARBY = 5;
const ACCURACY = 10;
const COMMAND_KEYS = [
    KEY_META,
    KEY_BACKSPACE,
    KEY_DELETE,
    KEY_UP,
    KEY_DOWN,
    KEY_RIGHT,
    KEY_LEFT,
    KEY_ENTER,
    KEY_ESC,
    KEY_F3,
    KEY_TAB
];
const BR = 'br';
const PARAGRAPH = 'p';
/**
 * WYSIWYG editor mode
 */
const MODE_WYSIWYG = 1;
/**
 * html editor mode
 */
const MODE_SOURCE = 2;
/**
 * Source code editor and HTML editor both like
 * @see http://getuikit.com/docs/htmleditor.html|this
 */
const MODE_SPLIT = 3;
/**
 * Is Internet Explorer
 */
const IS_IE = typeof navigator !== 'undefined' &&
    (navigator.userAgent.indexOf('MSIE') !== -1 ||
        /rv:11.0/i.test(navigator.userAgent));
/**
 * For IE11 it will be 'text'. Need for dataTransfer.setData
 */
const TEXT_PLAIN = IS_IE ? 'text' : 'text/plain';
const TEXT_HTML = IS_IE ? 'html' : 'text/html';
const TEXT_RTF = IS_IE ? 'rtf' : 'text/rtf';
const MARKER_CLASS = 'jodit-selection_marker';
const EMULATE_DBLCLICK_TIMEOUT = 300;
/**
 * Paste the copied text as HTML, all content will be pasted exactly as it was on the clipboard.
 * So how would you copy its code directly into the source document.
 * ```
 * <h1 style="color:red">test</h1>
 * ```
 * Will be inserted into the document as
 * ```
 * <h1 style="color:red">test</h1>
 * ```
 */
const INSERT_AS_HTML = 'insert_as_html';
/**
 * Same as [[INSERT_AS_HTML]], but content will be stripped of extra styles and empty tags
 * ```html
 * <h1 style="color:red">test</h1>
 * ```
 * Will be inserted into the document as
 * ```html
 * <h1>test</h1>
 * ```
 */
const INSERT_CLEAR_HTML = 'insert_clear_html';
/**
 * The contents of the clipboard will be pasted into the document as plain text, i.e. all tags will be displayed as text.
 * ```html
 * <h1>test</h1>
 * ```
 * Will be inserted into the document as
 * ```html
 * &gt;&lt;h1&gt;test&lt;/h1&gt;
 * ```
 */
const INSERT_AS_TEXT = 'insert_as_text';
/**
 * All tags will be stripped:
 * ```html
 * <h1>test</h1>
 * ```
 * Will be inserted into the document as
 * ```html
 * test
 * ```
 */
const INSERT_ONLY_TEXT = 'insert_only_text';
const SAFE_COUNT_CHANGE_CALL = 10;
const IS_MAC = typeof window !== 'undefined' &&
    /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);
const KEY_ALIASES = {
    add: '+',
    break: 'pause',
    cmd: 'meta',
    command: 'meta',
    ctl: 'control',
    ctrl: 'control',
    del: 'delete',
    down: 'arrowdown',
    esc: 'escape',
    ins: 'insert',
    left: 'arrowleft',
    mod: IS_MAC ? 'meta' : 'control',
    opt: 'alt',
    option: 'alt',
    return: 'enter',
    right: 'arrowright',
    space: ' ',
    spacebar: ' ',
    up: 'arrowup',
    win: 'meta',
    windows: 'meta'
};
const BASE_PATH = (() => {
    if (typeof document === 'undefined') {
        return '';
    }
    const script = document.currentScript, removeScriptName = (s) => {
        const parts = s.split('/');
        if (/\.js/.test(parts[parts.length - 1])) {
            return parts.slice(0, parts.length - 1).join('/') + '/';
        }
        return s;
    };
    if (script) {
        return removeScriptName(script.src);
    }
    const scripts = document.querySelectorAll('script[src]');
    if (scripts && scripts.length) {
        return removeScriptName(scripts[scripts.length - 1].src);
    }
    return window.location.href;
})();
const TEMP_ATTR = 'data-jodit-temp';
const lang = {};
const CLIPBOARD_ID = 'clipboard';
const SOURCE_CONSUMER = 'source-consumer';
const PASSIVE_EVENTS = new Set([
    'touchstart',
    'touchend',
    'scroll',
    'mousewheel',
    'mousemove',
    'touchmove'
]);


/***/ }),

/***/ 29536:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Q: function() { return /* binding */ Create; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(52378);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(62924);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




class Create {
    get doc() {
        // @ts-ignore - TODO it's a function
        return (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.isFunction)(this.document) ? this.document() : this.document;
    }
    constructor(document, createAttributes) {
        this.document = document;
        this.createAttributes = createAttributes;
    }
    element(tagName, childrenOrAttributes, children) {
        const elm = this.doc.createElement(tagName.toLowerCase());
        this.applyCreateAttributes(elm);
        if (childrenOrAttributes) {
            if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(childrenOrAttributes)) {
                (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.attr)(elm, childrenOrAttributes);
            }
            else {
                children = childrenOrAttributes;
            }
        }
        if (children) {
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.asArray)(children).forEach((child) => elm.appendChild((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.isString)(child) ? this.fromHTML(child) : child));
        }
        return elm;
    }
    div(className, childrenOrAttributes, children) {
        const div = this.element('div', childrenOrAttributes, children);
        if (className) {
            div.className = className;
        }
        return div;
    }
    sandbox() {
        var _a;
        const iframe = this.element('iframe', { sandbox: 'allow-same-origin' });
        this.doc.body.appendChild(iframe);
        const doc = (_a = iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.document;
        void 0;
        if (!doc) {
            throw Error('Iframe error');
        }
        doc.open();
        doc.write('<!DOCTYPE html><html><head></head><body></body></html>');
        doc.close();
        return [doc.body, iframe];
    }
    span(className, childrenOrAttributes, children) {
        const span = this.element('span', childrenOrAttributes, children);
        if (className) {
            span.className = className;
        }
        return span;
    }
    a(className, childrenOrAttributes, children) {
        const a = this.element('a', childrenOrAttributes, children);
        if (className) {
            a.className = className;
        }
        return a;
    }
    /**
     * Create text node
     */
    text(value) {
        return this.doc.createTextNode(value);
    }
    /**
     * Create invisible text node
     */
    fake() {
        return this.text(jodit_core_constants__WEBPACK_IMPORTED_MODULE_3__.INVISIBLE_SPACE);
    }
    /**
     * Create HTML Document fragment element
     */
    fragment() {
        return this.doc.createDocumentFragment();
    }
    /**
     * Create DOM element from HTML text
     *
     * @param refsToggleElement - State dictionary in which you can set the visibility of some of the elements
     * ```js
     * const editor = Jodit.make('#editor');
     * editor.createInside.fromHTML(`<div>
     *   <input name="name" ref="name"/>
     *   <input name="email" ref="email"/>
     * </div>`, {
     *   name: true,
     *   email: false
     * });
     * ```
     */
    fromHTML(html, refsToggleElement) {
        const div = this.div();
        div.innerHTML = html.toString();
        const child = div.firstChild !== div.lastChild || !div.firstChild
            ? div
            : div.firstChild;
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.safeRemove(child);
        if (refsToggleElement) {
            const refElements = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.refs)(child);
            Object.keys(refsToggleElement).forEach(key => {
                const elm = refElements[key];
                if (elm && refsToggleElement[key] === false) {
                    jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.hide(elm);
                }
            });
        }
        return child;
    }
    /**
     * Apply to element `createAttributes` options
     */
    applyCreateAttributes(elm) {
        if (this.createAttributes) {
            const ca = this.createAttributes;
            if (ca && ca[elm.tagName.toLowerCase()]) {
                const attrsOpt = ca[elm.tagName.toLowerCase()];
                if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.isFunction)(attrsOpt)) {
                    attrsOpt(elm);
                }
                else if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(attrsOpt)) {
                    (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.attr)(elm, attrsOpt);
                }
            }
        }
    }
}


/***/ }),

/***/ 2652:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Q: function() { return /* reexport safe */ _create__WEBPACK_IMPORTED_MODULE_0__.Q; }
/* harmony export */ });
/* harmony import */ var _create__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(29536);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module create
 */



/***/ }),

/***/ 63301:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   F: function() { return /* binding */ cache; },
/* harmony export */   R: function() { return /* binding */ cacheHTML; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(78157);
/* harmony import */ var jodit_core_helpers_utils_error_error__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(60701);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_component_statuses__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(74028);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




function cache(target, name, descriptor) {
    const getter = descriptor.get;
    if (!getter) {
        throw (0,jodit_core_helpers_utils_error_error__WEBPACK_IMPORTED_MODULE_3__/* .error */ .vU)('Getter property descriptor expected');
    }
    descriptor.get = function () {
        const value = getter.call(this);
        if (value && value.noCache === true) {
            return value;
        }
        Object.defineProperty(this, name, {
            configurable: descriptor.configurable,
            enumerable: descriptor.enumerable,
            writable: false,
            value
        });
        return value;
    };
}
function cacheHTML(target, name, descriptor) {
    const fn = descriptor.value;
    if (!(0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isFunction */ .mf)(fn)) {
        throw (0,jodit_core_helpers_utils_error_error__WEBPACK_IMPORTED_MODULE_3__/* .error */ .vU)('Handler must be a Function');
    }
    let useCache = true;
    const cached = new WeakMap();
    descriptor.value = function (...attrs) {
        var _a;
        if (useCache && cached.has(this.constructor)) {
            return (_a = cached.get(this.constructor)) === null || _a === void 0 ? void 0 : _a.cloneNode(true);
        }
        const value = fn.apply(this, attrs);
        if (useCache && jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isElement(value)) {
            cached.set(this.constructor, value);
        }
        return useCache ? value.cloneNode(true) : value;
    };
    target.hookStatus(jodit_core_component_statuses__WEBPACK_IMPORTED_MODULE_2__/* .STATUSES */ .n.ready, (component) => {
        const view = (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isViewObject */ .f2)(component)
            ? component
            : component.jodit;
        useCache = Boolean(view.options.cache);
    });
}


/***/ }),

/***/ 75042:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   w: function() { return /* binding */ component; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * Decorate components and set status isReady after constructor
 * @param constructorFunction - Component constructor class
 */
function component(constructorFunction) {
    class newConstructorFunction extends constructorFunction {
        constructor(...args) {
            super(...args);
            const isRootConstructor = this.constructor === newConstructorFunction;
            // We can add a decorator to multiple classes in a chain.
            // Status should be set only as root
            if (isRootConstructor) {
                // In some es/minimizer builds, JS instantiates the original class rather than the new constructor
                if (!(this instanceof newConstructorFunction)) {
                    Object.setPrototypeOf(this, newConstructorFunction.prototype);
                }
                this.setStatus('ready');
            }
        }
    }
    return newConstructorFunction;
}


/***/ }),

/***/ 62294:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   D: function() { return /* binding */ debounce; },
/* harmony export */   P: function() { return /* binding */ throttle; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(78157);
/* harmony import */ var jodit_core_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2581);
/* harmony import */ var jodit_core_helpers_utils_error__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(60701);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(52378);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_2__);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




function debounce(timeout, firstCallImmediately = false, method = 'debounce') {
    return (target, propertyKey) => {
        const fn = target[propertyKey];
        if (!(0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isFunction */ .mf)(fn)) {
            throw (0,jodit_core_helpers_utils_error__WEBPACK_IMPORTED_MODULE_3__/* .error */ .vU)('Handler must be a Function');
        }
        target.hookStatus(jodit_core_component__WEBPACK_IMPORTED_MODULE_1__/* .STATUSES */ .n$.ready, (component) => {
            const { async } = component;
            void 0;
            const propTimeout = (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isFunction */ .mf)(timeout)
                ? timeout(component)
                : timeout;
            const realTimout = (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isNumber */ .hj)(propTimeout) || (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isPlainObject */ .PO)(propTimeout)
                ? propTimeout
                : component.defaultTimeout;
            Object.defineProperty(component, propertyKey, {
                configurable: true,
                value: async[method](component[propertyKey].bind(component), realTimout, firstCallImmediately)
            });
        });
        return {
            configurable: true,
            get() {
                return fn.bind(this);
            }
        };
    };
}
/**
 * Wrap function in throttle wrapper
 */
function throttle(timeout, firstCallImmediately = false) {
    return debounce(timeout, firstCallImmediately, 'throttle');
}


/***/ }),

/***/ 17174:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   s: function() { return /* binding */ derive; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(69099);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * [[include:core/decorators/derive/README.md]]
 * @packageDocumentation
 * @module decorators/derive
 */

function derive(...traits) {
    return (target) => {
        const origin = target.prototype;
        for (let i = 0; i < traits.length; i++) {
            const trait = traits[i];
            const keys = Object.getOwnPropertyNames(trait.prototype);
            for (let j = 0; j < keys.length; j++) {
                const key = keys[j], method = Object.getOwnPropertyDescriptor(trait.prototype, key);
                const canDerive = method != null &&
                    (0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_0__/* .isFunction */ .m)(method.value) &&
                    !(0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_0__/* .isFunction */ .m)(origin[key]);
                if (canDerive) {
                    Object.defineProperty(origin, key, {
                        enumerable: true,
                        configurable: true,
                        writable: true,
                        value: function (...args) {
                            return method.value.call(this, ...args);
                        }
                    });
                }
            }
        }
    };
}


/***/ }),

/***/ 41592:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   z: function() { return /* binding */ hook; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(69099);
/* harmony import */ var jodit_core_helpers_utils_error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60701);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/**
 * Call on some component status
 */
function hook(status) {
    return (target, propertyKey) => {
        if (!(0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_0__/* .isFunction */ .m)(target[propertyKey])) {
            throw (0,jodit_core_helpers_utils_error__WEBPACK_IMPORTED_MODULE_1__/* .error */ .vU)('Handler must be a Function');
        }
        target.hookStatus(status, (component) => {
            component[propertyKey].call(component);
        });
    };
}


/***/ }),

/***/ 3944:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   N: function() { return /* binding */ idle; }
/* harmony export */ });
/* harmony import */ var jodit_core_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2581);
/* harmony import */ var jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(69099);
/* harmony import */ var jodit_core_helpers_utils_error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60701);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



function idle() {
    return (target, propertyKey) => {
        if (!(0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_1__/* .isFunction */ .m)(target[propertyKey])) {
            throw (0,jodit_core_helpers_utils_error__WEBPACK_IMPORTED_MODULE_2__/* .error */ .vU)('Handler must be a Function');
        }
        target.hookStatus(jodit_core_component__WEBPACK_IMPORTED_MODULE_0__/* .STATUSES */ .n$.ready, (component) => {
            const { async } = component;
            const originalMethod = component[propertyKey];
            component[propertyKey] = (...args) => async.requestIdleCallback(originalMethod.bind(component, ...args));
        });
    };
}


/***/ }),

/***/ 13666:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   autobind: function() { return /* reexport safe */ autobind_decorator__WEBPACK_IMPORTED_MODULE_10__.ZP; },
/* harmony export */   cache: function() { return /* reexport safe */ _cache_cache__WEBPACK_IMPORTED_MODULE_0__.F; },
/* harmony export */   cacheHTML: function() { return /* reexport safe */ _cache_cache__WEBPACK_IMPORTED_MODULE_0__.R; },
/* harmony export */   component: function() { return /* reexport safe */ _component_component__WEBPACK_IMPORTED_MODULE_1__.w; },
/* harmony export */   debounce: function() { return /* reexport safe */ _debounce_debounce__WEBPACK_IMPORTED_MODULE_2__.D; },
/* harmony export */   derive: function() { return /* reexport safe */ _derive_derive__WEBPACK_IMPORTED_MODULE_9__.s; },
/* harmony export */   getPropertyDescriptor: function() { return /* reexport safe */ _watch_watch__WEBPACK_IMPORTED_MODULE_8__.w7; },
/* harmony export */   hook: function() { return /* reexport safe */ _hook_hook__WEBPACK_IMPORTED_MODULE_4__.z; },
/* harmony export */   idle: function() { return /* reexport safe */ _idle_idle__WEBPACK_IMPORTED_MODULE_3__.N; },
/* harmony export */   nonenumerable: function() { return /* reexport safe */ _nonenumerable_nonenumerable__WEBPACK_IMPORTED_MODULE_5__.h; },
/* harmony export */   persistent: function() { return /* reexport safe */ _persistent_persistent__WEBPACK_IMPORTED_MODULE_6__.a; },
/* harmony export */   throttle: function() { return /* reexport safe */ _debounce_debounce__WEBPACK_IMPORTED_MODULE_2__.P; },
/* harmony export */   wait: function() { return /* reexport safe */ _wait_wait__WEBPACK_IMPORTED_MODULE_7__.D; },
/* harmony export */   watch: function() { return /* reexport safe */ _watch_watch__WEBPACK_IMPORTED_MODULE_8__.YP; }
/* harmony export */ });
/* harmony import */ var _cache_cache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(63301);
/* harmony import */ var _component_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(75042);
/* harmony import */ var _debounce_debounce__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62294);
/* harmony import */ var _idle_idle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(3944);
/* harmony import */ var _hook_hook__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(41592);
/* harmony import */ var _nonenumerable_nonenumerable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(22718);
/* harmony import */ var _persistent_persistent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(14217);
/* harmony import */ var _wait_wait__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(89087);
/* harmony import */ var _watch_watch__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(69082);
/* harmony import */ var _derive_derive__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(17174);
/* harmony import */ var autobind_decorator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(75887);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * [[include:core/decorators/README.md]]
 * @packageDocumentation
 * @module decorators
 */













/***/ }),

/***/ 22718:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   h: function() { return /* binding */ nonenumerable; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * [[include:core/decorators/nonenumerable/README.md]]
 * @packageDocumentation
 * @module decorators/nonenumerable
 */
const nonenumerable = (target, propertyKey) => {
    const descriptor = Object.getOwnPropertyDescriptor(target, propertyKey) || {};
    if (descriptor.enumerable !== false) {
        Object.defineProperty(target, propertyKey, {
            enumerable: false,
            set(value) {
                Object.defineProperty(this, propertyKey, {
                    enumerable: false,
                    writable: true,
                    value
                });
            }
        });
    }
};


/***/ }),

/***/ 14217:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: function() { return /* binding */ persistent; }
/* harmony export */ });
/* harmony import */ var jodit_core_component_statuses__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74028);
/* harmony import */ var jodit_core_helpers_checker_is_view_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(31470);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


function persistent(target, propertyKey) {
    target.hookStatus(jodit_core_component_statuses__WEBPACK_IMPORTED_MODULE_0__/* .STATUSES */ .n.ready, (component) => {
        const jodit = (0,jodit_core_helpers_checker_is_view_object__WEBPACK_IMPORTED_MODULE_1__/* .isViewObject */ .f)(component)
            ? component
            : component.jodit, storageKey = `${jodit.options.namespace}${component.componentName}_prop_${propertyKey}`, initialValue = component[propertyKey];
        Object.defineProperty(component, propertyKey, {
            get() {
                var _a;
                return (_a = jodit.storage.get(storageKey)) !== null && _a !== void 0 ? _a : initialValue;
            },
            set(value) {
                jodit.storage.set(storageKey, value);
            }
        });
    });
}


/***/ }),

/***/ 89087:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   D: function() { return /* binding */ wait; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(69099);
/* harmony import */ var jodit_core_helpers_utils_error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60701);
/* harmony import */ var jodit_core_component_statuses__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74028);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



function wait(condition) {
    return (target, propertyKey) => {
        const fn = target[propertyKey];
        if (!(0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_1__/* .isFunction */ .m)(fn)) {
            throw (0,jodit_core_helpers_utils_error__WEBPACK_IMPORTED_MODULE_2__/* .error */ .vU)('Handler must be a Function');
        }
        target.hookStatus(jodit_core_component_statuses__WEBPACK_IMPORTED_MODULE_0__/* .STATUSES */ .n.ready, (component) => {
            const { async } = component;
            const realMethod = component[propertyKey];
            let timeout = 0;
            Object.defineProperty(component, propertyKey, {
                configurable: true,
                value: function callProxy(...args) {
                    async.clearTimeout(timeout);
                    if (condition(component)) {
                        realMethod.apply(component, args);
                    }
                    else {
                        timeout = async.setTimeout(() => callProxy(...args), 10);
                    }
                }
            });
        });
    };
}


/***/ }),

/***/ 69082:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   YP: function() { return /* binding */ watch; },
/* harmony export */   w7: function() { return /* binding */ getPropertyDescriptor; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(69099);
/* harmony import */ var jodit_core_helpers_checker_is_plain_object__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(45564);
/* harmony import */ var jodit_core_helpers_checker_is_view_object__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(31470);
/* harmony import */ var jodit_core_event_emitter_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16313);
/* harmony import */ var jodit_core_component_statuses__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(74028);
/* harmony import */ var jodit_core_helpers_array_split_array__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(83893);
/* harmony import */ var jodit_core_helpers_utils_error__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(60701);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */







function getPropertyDescriptor(obj, prop) {
    let desc;
    do {
        desc = Object.getOwnPropertyDescriptor(obj, prop);
        obj = Object.getPrototypeOf(obj);
    } while (!desc && obj);
    return desc;
}
/**
 * Watch decorator. Added observer for some change in field value
 */
function watch(observeFields, opts) {
    return (target, propertyKey) => {
        var _a;
        if (!(0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_2__/* .isFunction */ .m)(target[propertyKey])) {
            throw (0,jodit_core_helpers_utils_error__WEBPACK_IMPORTED_MODULE_3__/* .error */ .vU)('Handler must be a Function');
        }
        const immediately = (_a = opts === null || opts === void 0 ? void 0 : opts.immediately) !== null && _a !== void 0 ? _a : true;
        const context = opts === null || opts === void 0 ? void 0 : opts.context;
        const process = (component) => {
            const view = (0,jodit_core_helpers_checker_is_view_object__WEBPACK_IMPORTED_MODULE_4__/* .isViewObject */ .f)(component)
                ? component
                : component.jodit;
            let callback = (key, ...args) => {
                if (component.isInDestruct) {
                    return;
                }
                return component[propertyKey](key, ...args);
            };
            if (!immediately) {
                callback = component.async.microDebounce(callback, true);
            }
            (0,jodit_core_helpers_array_split_array__WEBPACK_IMPORTED_MODULE_5__/* .splitArray */ .C)(observeFields).forEach(field => {
                if (/:/.test(field)) {
                    const [objectPath, eventName] = field.split(':');
                    let ctx = context;
                    if (objectPath.length) {
                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                        ctx = component.get(objectPath);
                    }
                    if ((0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_2__/* .isFunction */ .m)(ctx)) {
                        ctx = ctx(component);
                    }
                    view.events.on(ctx || component, eventName, callback);
                    if (!ctx) {
                        view.events.on(eventName, callback);
                    }
                    component.hookStatus('beforeDestruct', () => {
                        view.events
                            .off(ctx || component, eventName, callback)
                            .off(eventName, callback);
                    });
                    return;
                }
                const parts = field.split('.'), [key] = parts, teil = parts.slice(1);
                let value = component[key];
                if ((0,jodit_core_helpers_checker_is_plain_object__WEBPACK_IMPORTED_MODULE_6__/* .isPlainObject */ .P)(value)) {
                    const observableValue = (0,jodit_core_event_emitter_observable__WEBPACK_IMPORTED_MODULE_0__/* .observable */ .L)(value);
                    observableValue.on(`change.${teil.join('.')}`, callback);
                }
                const descriptor = getPropertyDescriptor(target, key);
                Object.defineProperty(component, key, {
                    configurable: true,
                    set(v) {
                        const oldValue = value;
                        if (oldValue === v) {
                            return;
                        }
                        value = v;
                        if (descriptor && descriptor.set) {
                            descriptor.set.call(component, v);
                        }
                        if ((0,jodit_core_helpers_checker_is_plain_object__WEBPACK_IMPORTED_MODULE_6__/* .isPlainObject */ .P)(value)) {
                            value = (0,jodit_core_event_emitter_observable__WEBPACK_IMPORTED_MODULE_0__/* .observable */ .L)(value);
                            value.on(`change.${teil.join('.')}`, callback);
                        }
                        callback(key, oldValue, value);
                    },
                    get() {
                        if (descriptor && descriptor.get) {
                            return descriptor.get.call(component);
                        }
                        return value;
                    }
                });
            });
        };
        if ((0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_2__/* .isFunction */ .m)(target.hookStatus)) {
            target.hookStatus(jodit_core_component_statuses__WEBPACK_IMPORTED_MODULE_1__/* .STATUSES */ .n.ready, process);
        }
        else {
            process(target);
        }
    };
}
/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (watch)));


/***/ }),

/***/ 9162:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   i: function() { return /* binding */ Dom; }
/* harmony export */ });
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78157);
/* harmony import */ var jodit_core_helpers_array_to_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(24174);
/* harmony import */ var jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(76562);
/* harmony import */ var jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(86284);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */






/**
 * Module for working with DOM
 */
class Dom {
    constructor() {
        throw new Error('Dom is static module');
    }
    /**
     * Remove all content from element
     */
    static detach(node) {
        while (node && node.firstChild) {
            node.removeChild(node.firstChild);
        }
    }
    /**
     * Wrap all inline siblings
     */
    static wrapInline(current, tag, editor) {
        let tmp, first = current, last = current;
        editor.s.save();
        let needFindNext = false;
        do {
            needFindNext = false;
            tmp = first.previousSibling;
            if (tmp && !Dom.isBlock(tmp)) {
                needFindNext = true;
                first = tmp;
            }
        } while (needFindNext);
        do {
            needFindNext = false;
            tmp = last.nextSibling;
            if (tmp && !Dom.isBlock(tmp)) {
                needFindNext = true;
                last = tmp;
            }
        } while (needFindNext);
        const wrapper = (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isString */ .HD)(tag) ? editor.createInside.element(tag) : tag;
        if (first.parentNode) {
            first.parentNode.insertBefore(wrapper, first);
        }
        let next = first;
        while (next) {
            next = first.nextSibling;
            wrapper.appendChild(first);
            if (first === last || !next) {
                break;
            }
            first = next;
        }
        editor.s.restore();
        return wrapper;
    }
    /**
     * Wrap node inside another node
     */
    static wrap(current, tag, create) {
        const wrapper = (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isString */ .HD)(tag) ? create.element(tag) : tag;
        if (Dom.isNode(current)) {
            if (!current.parentNode) {
                throw (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_4__.error)('Element should be in DOM');
            }
            current.parentNode.insertBefore(wrapper, current);
            wrapper.appendChild(current);
        }
        else {
            const fragment = current.extractContents();
            current.insertNode(wrapper);
            wrapper.appendChild(fragment);
        }
        return wrapper;
    }
    /**
     * Remove parent of node and insert this node instead that parent
     */
    static unwrap(node) {
        const parent = node.parentNode;
        if (parent) {
            while (node.firstChild) {
                parent.insertBefore(node.firstChild, node);
            }
            Dom.safeRemove(node);
        }
    }
    /**
     * Call functions for all nodes between `start` and `end`
     */
    static between(start, end, callback) {
        let next = start;
        while (next && next !== end) {
            if (start !== next && callback(next)) {
                break;
            }
            let step = next.firstChild || next.nextSibling;
            if (!step) {
                while (next && !next.nextSibling) {
                    next = next.parentNode;
                }
                step = next === null || next === void 0 ? void 0 : next.nextSibling;
            }
            next = step;
        }
    }
    static replace(elm, newTagName, create, withAttributes = false, notMoveContent = false) {
        if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isHTML */ .FP)(newTagName)) {
            newTagName = create.fromHTML(newTagName);
        }
        const tag = (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isString */ .HD)(newTagName)
            ? create.element(newTagName)
            : newTagName;
        if (!notMoveContent) {
            while (elm.firstChild) {
                tag.appendChild(elm.firstChild);
            }
        }
        if (withAttributes && Dom.isElement(elm) && Dom.isElement(tag)) {
            (0,jodit_core_helpers_array_to_array__WEBPACK_IMPORTED_MODULE_2__/* .toArray */ .q)(elm.attributes).forEach(attr => {
                tag.setAttribute(attr.name, attr.value);
            });
        }
        if (elm.parentNode) {
            elm.parentNode.replaceChild(tag, elm);
        }
        return tag;
    }
    /**
     * Checks whether the Node text and blank (in this case it may contain invisible auxiliary characters ,
     * it is also empty )
     *
     * @param node - The element of wood to be checked
     */
    static isEmptyTextNode(node) {
        return (Dom.isText(node) &&
            (!node.nodeValue ||
                node.nodeValue
                    .replace(jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.INVISIBLE_SPACE_REG_EXP(), '')
                    .trim().length === 0));
    }
    static isEmptyContent(node) {
        return Dom.each(node, (elm) => Dom.isEmptyTextNode(elm));
    }
    /**
     * The node is editable
     */
    static isContentEditable(node, root) {
        return (Dom.isNode(node) &&
            !Dom.closest(node, elm => Dom.isElement(elm) &&
                elm.getAttribute('contenteditable') === 'false', root));
    }
    static isEmpty(node, condNoEmptyElement = jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.NO_EMPTY_TAGS) {
        if (!node) {
            return true;
        }
        let cond;
        if (!(0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isFunction */ .mf)(condNoEmptyElement)) {
            cond = (elm) => condNoEmptyElement.has(elm.nodeName.toLowerCase());
        }
        else {
            cond = condNoEmptyElement;
        }
        const emptyText = (node) => node.nodeValue == null || (0,jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_3__/* .trim */ .fy)(node.nodeValue).length === 0;
        if (Dom.isText(node)) {
            return emptyText(node);
        }
        return (!(Dom.isElement(node) && cond(node)) &&
            Dom.each(node, (elm) => {
                if ((Dom.isText(elm) && !emptyText(elm)) ||
                    (Dom.isElement(elm) && cond(elm))) {
                    return false;
                }
            }));
    }
    /**
     * Returns true if it is a DOM node
     */
    static isNode(object) {
        // Duck-typing
        return Boolean(object &&
            (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isString */ .HD)(object.nodeName) &&
            typeof object.nodeType === 'number' &&
            object.childNodes &&
            (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isFunction */ .mf)(object.appendChild));
    }
    /**
     *  Check if element is table cell
     */
    static isCell(elm) {
        return (Dom.isNode(elm) && (elm.nodeName === 'TD' || elm.nodeName === 'TH'));
    }
    /**
     * Check if element is a list	element UL or OL
     */
    static isList(elm) {
        return Dom.isTag(elm, jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.LIST_TAGS);
    }
    /**
     * Check if element is a part of list	element LI
     */
    static isLeaf(elm) {
        return Dom.isTag(elm, 'li');
    }
    /**
     * Check is element is Image element
     */
    static isImage(elm) {
        return (Dom.isNode(elm) && /^(img|svg|picture|canvas)$/i.test(elm.nodeName));
    }
    /**
     * Check the `node` is a block element
     * @param node - Object to check
     */
    static isBlock(node) {
        return (!(0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isVoid */ .nj)(node) &&
            typeof node === 'object' &&
            Dom.isNode(node) &&
            jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.IS_BLOCK.test(node.nodeName));
    }
    /**
     * Check if element is text node
     */
    static isText(node) {
        return Boolean(node && node.nodeType === Node.TEXT_NODE);
    }
    /**
     * Check if element is comment node
     */
    static isComment(node) {
        return Boolean(node && node.nodeType === Node.COMMENT_NODE);
    }
    /**
     * Check if element is element node
     */
    static isElement(node) {
        var _a;
        if (!Dom.isNode(node)) {
            return false;
        }
        const win = (_a = node.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView;
        return Boolean(win && node.nodeType === Node.ELEMENT_NODE);
    }
    /**
     * Check if element is document fragment
     */
    static isFragment(node) {
        var _a;
        if (!Dom.isNode(node)) {
            return false;
        }
        const win = (_a = node.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView;
        return Boolean(win && node.nodeType === Node.DOCUMENT_FRAGMENT_NODE);
    }
    /**
     * Check if element is HTMLElement node
     */
    static isHTMLElement(node) {
        var _a;
        if (!Dom.isNode(node)) {
            return false;
        }
        const win = (_a = node.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView;
        return Boolean(win && node instanceof win.HTMLElement);
    }
    /**
     * Check element is inline block
     */
    static isInlineBlock(node) {
        return (Dom.isElement(node) &&
            !/^(BR|HR)$/i.test(node.tagName) &&
            ['inline', 'inline-block'].indexOf((0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_4__.css)(node, 'display').toString()) !== -1);
    }
    /**
     * It's block and it can be split
     */
    static canSplitBlock(node) {
        return (!(0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isVoid */ .nj)(node) &&
            Dom.isHTMLElement(node) &&
            Dom.isBlock(node) &&
            !/^(TD|TH|CAPTION|FORM)$/.test(node.nodeName) &&
            node.style !== undefined &&
            !/^(fixed|absolute)/i.test(node.style.position));
    }
    /**
     * Get last matched node inside root
     */
    static last(root, condition) {
        let last = root === null || root === void 0 ? void 0 : root.lastChild;
        if (!last) {
            return null;
        }
        do {
            if (condition(last)) {
                return last;
            }
            let next = last.lastChild;
            if (!next) {
                next = last.previousSibling;
            }
            if (!next && last.parentNode !== root) {
                do {
                    last = last.parentNode;
                } while (last &&
                    !(last === null || last === void 0 ? void 0 : last.previousSibling) &&
                    last.parentNode !== root);
                next = last === null || last === void 0 ? void 0 : last.previousSibling;
            }
            last = next;
        } while (last);
        return null;
    }
    /**
     * Find previous node
     */
    static prev(node, condition, root, withChild = true) {
        return Dom.find(node, condition, root, false, withChild);
    }
    /**
     * Find next node what `condition(next) === true`
     */
    static next(node, condition, root, withChild = true) {
        return Dom.find(node, condition, root, true, withChild);
    }
    static prevWithClass(node, className) {
        return Dom.prev(node, node => {
            return (Dom.isElement(node) && node.classList.contains(className));
        }, node.parentNode);
    }
    static nextWithClass(node, className) {
        return Dom.next(node, elm => Dom.isElement(elm) && elm.classList.contains(className), node.parentNode);
    }
    /**
     * Find next/prev node what `condition(next) === true`
     */
    static find(node, condition, root, leftToRight = true, withChild = true) {
        const gen = this.nextGen(node, root, leftToRight, withChild);
        let item = gen.next();
        while (!item.done) {
            if (condition(item.value)) {
                return item.value;
            }
            item = gen.next();
        }
        return null;
    }
    /**
     * Find next/prev node what `condition(next) === true`
     */
    static *nextGen(start, root, leftToRight = true, withChild = true) {
        const stack = [];
        let currentNode = start;
        do {
            let next = leftToRight
                ? currentNode.nextSibling
                : currentNode.previousSibling;
            while (next) {
                stack.unshift(next);
                next = leftToRight ? next.nextSibling : next.previousSibling;
            }
            yield* this.runInStack(start, stack, leftToRight, withChild);
            currentNode = currentNode.parentNode;
        } while (currentNode && currentNode !== root);
        return null;
    }
    /**
     * It goes through all the internal elements of the node, causing a callback function
     *
     * @param elm - the element whose children and descendants you want to iterate over
     * @param callback - It called for each item found
     * @example
     * ```javascript
     * Jodit.modules.Dom.each(editor.s.current(), function (node) {
     *  if (node.nodeType === Node.TEXT_NODE) {
     *      node.nodeValue = node.nodeValue.replace(Jodit.INVISIBLE_SPACE_REG_EX, '') // remove all of the text element codes invisible character
     *  }
     * });
     * ```
     */
    static each(elm, callback, leftToRight = true) {
        const gen = this.eachGen(elm, leftToRight);
        let item = gen.next();
        while (!item.done) {
            if (callback(item.value) === false) {
                return false;
            }
            item = gen.next();
        }
        return true;
    }
    static eachGen(root, leftToRight = true) {
        return this.runInStack(root, [root], leftToRight);
    }
    static *runInStack(start, stack, leftToRight, withChild = true) {
        while (stack.length) {
            const item = stack.pop();
            if (withChild) {
                let child = leftToRight ? item.lastChild : item.firstChild;
                while (child) {
                    stack.push(child);
                    child = leftToRight
                        ? child.previousSibling
                        : child.nextSibling;
                }
            }
            if (start !== item) {
                yield item;
            }
        }
    }
    /**
     * Find next/prev node what `condition(next) === true`
     */
    static findWithCurrent(node, condition, root, sibling = 'nextSibling', child = 'firstChild') {
        let next = node;
        do {
            if (condition(next)) {
                return next || null;
            }
            if (child && next && next[child]) {
                const nextOne = Dom.findWithCurrent(next[child], condition, next, sibling, child);
                if (nextOne) {
                    return nextOne;
                }
            }
            while (next && !next[sibling] && next !== root) {
                next = next.parentNode;
            }
            if (next && next[sibling] && next !== root) {
                next = next[sibling];
            }
        } while (next && next !== root);
        return null;
    }
    /**
     * Get not empty sibling
     */
    static findSibling(node, left = true, cond = (n) => !Dom.isEmptyTextNode(n)) {
        let sibling = Dom.sibling(node, left);
        while (sibling && !cond(sibling)) {
            sibling = Dom.sibling(sibling, left);
        }
        return sibling && cond(sibling) ? sibling : null;
    }
    /**
     * Returns the nearest non-empty sibling
     */
    static findNotEmptySibling(node, left) {
        return Dom.findSibling(node, left, n => {
            var _a;
            return (!Dom.isEmptyTextNode(n) &&
                Boolean(!Dom.isText(n) || (((_a = n.nodeValue) === null || _a === void 0 ? void 0 : _a.length) && (0,jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_3__/* .trim */ .fy)(n.nodeValue))));
        });
    }
    /**
     * Returns the nearest non-empty neighbor
     */
    static findNotEmptyNeighbor(node, left, root) {
        return (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_4__.call)(left ? Dom.prev : Dom.next, node, n => Boolean(n &&
            (!(Dom.isText(n) || Dom.isComment(n)) ||
                (0,jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_3__/* .trim */ .fy)((n === null || n === void 0 ? void 0 : n.nodeValue) || '').length)), root);
    }
    static sibling(node, left) {
        return left ? node.previousSibling : node.nextSibling;
    }
    /**
     * It goes through all the elements in ascending order, and checks to see if they meet the predetermined condition
     */
    static up(node, condition, root, checkRoot = false) {
        let start = node;
        if (!start) {
            return null;
        }
        do {
            if (condition(start)) {
                return start;
            }
            if (start === root || !start.parentNode) {
                break;
            }
            start = start.parentNode;
        } while (start && start !== root);
        if (start === root && checkRoot && condition(start)) {
            return start;
        }
        return null;
    }
    static closest(node, tagsOrCondition, root) {
        let condition;
        const lc = (s) => s.toLowerCase();
        if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isFunction */ .mf)(tagsOrCondition)) {
            condition = tagsOrCondition;
        }
        else if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isArray */ .kJ)(tagsOrCondition) || (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isSet */ .DM)(tagsOrCondition)) {
            const set = (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isSet */ .DM)(tagsOrCondition)
                ? tagsOrCondition
                : new Set(tagsOrCondition.map(lc));
            condition = (tag) => Boolean(tag && set.has(lc(tag.nodeName)));
        }
        else {
            condition = (tag) => Boolean(tag && lc(tagsOrCondition) === lc(tag.nodeName));
        }
        return Dom.up(node, condition, root);
    }
    /**
     * Furthest parent node matching condition
     */
    static furthest(node, condition, root) {
        let matchedParent = null, current = node === null || node === void 0 ? void 0 : node.parentElement;
        while (current && current !== root) {
            if (condition(current)) {
                matchedParent = current;
            }
            current = current === null || current === void 0 ? void 0 : current.parentElement;
        }
        return matchedParent;
    }
    /**
     * Append new element in the start of root
     */
    static appendChildFirst(root, newElement) {
        const child = root.firstChild;
        if (child) {
            if (child !== newElement) {
                root.insertBefore(newElement, child);
            }
        }
        else {
            root.appendChild(newElement);
        }
    }
    /**
     * Insert newElement after element
     */
    static after(elm, newElement) {
        const { parentNode } = elm;
        if (!parentNode) {
            return;
        }
        if (parentNode.lastChild === elm) {
            parentNode.appendChild(newElement);
        }
        else {
            parentNode.insertBefore(newElement, elm.nextSibling);
        }
    }
    /**
     * Insert newElement before element
     */
    static before(elm, newElement) {
        const { parentNode } = elm;
        if (!parentNode) {
            return;
        }
        parentNode.insertBefore(newElement, elm);
    }
    /**
     * Insert newElement as first child inside element
     */
    static prepend(root, newElement) {
        root.insertBefore(newElement, root.firstChild);
    }
    static append(root, newElement) {
        if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isArray */ .kJ)(newElement)) {
            newElement.forEach(node => {
                this.append(root, node);
            });
        }
        else {
            root.appendChild(newElement);
        }
    }
    /**
     * Move all content to another element
     */
    static moveContent(from, to, inStart = false, filter = () => true) {
        const fragment = (from.ownerDocument || document).createDocumentFragment();
        (0,jodit_core_helpers_array_to_array__WEBPACK_IMPORTED_MODULE_2__/* .toArray */ .q)(from.childNodes)
            .filter(elm => {
            if (filter(elm)) {
                return true;
            }
            Dom.safeRemove(elm);
            return false;
        })
            .forEach((node) => {
            fragment.appendChild(node);
        });
        if (!inStart || !to.firstChild) {
            to.appendChild(fragment);
        }
        else {
            to.insertBefore(fragment, to.firstChild);
        }
    }
    /**
     * Check root contains child or equal child
     */
    static isOrContains(root, child, onlyContains = false) {
        if (root === child) {
            return !onlyContains;
        }
        return Boolean(child && root && this.up(child, nd => nd === root, root, true));
    }
    /**
     * Safe remove element from DOM
     */
    static safeRemove(...nodes) {
        nodes.forEach(node => Dom.isNode(node) &&
            node.parentNode &&
            node.parentNode.removeChild(node));
    }
    static safeInsertNode(range, node) {
        range.collapsed || range.deleteContents();
        const child = Dom.isFragment(node) ? node.lastChild : node;
        if (range.startContainer === range.endContainer &&
            range.collapsed &&
            Dom.isTag(range.startContainer, jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.INSEPARABLE_TAGS)) {
            Dom.after(range.startContainer, node);
        }
        else {
            range.insertNode(node);
            child && range.setStartBefore(child);
        }
        range.collapse(true);
        // https://developer.mozilla.org/en-US/docs/Web/API/Range/insertNode
        // if the new node is to be added to a text Node, that Node is split at the
        // insertion point, and the insertion occurs between the two text nodes.
        [node.nextSibling, node.previousSibling].forEach(n => Dom.isText(n) && !n.nodeValue && Dom.safeRemove(n));
    }
    /**
     * Hide element
     */
    static hide(node) {
        if (!node) {
            return;
        }
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_4__.dataBind)(node, '__old_display', node.style.display);
        node.style.display = 'none';
    }
    /**
     * Show element
     */
    static show(node) {
        if (!node) {
            return;
        }
        const display = (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_4__.dataBind)(node, '__old_display');
        if (node.style.display === 'none') {
            node.style.display = display || '';
        }
    }
    static isTag(node, tagNames) {
        if (!this.isElement(node)) {
            return false;
        }
        const nameL = node.tagName.toLowerCase();
        const nameU = node.tagName.toUpperCase();
        if (tagNames instanceof Set) {
            return tagNames.has(nameL) || tagNames.has(nameU);
        }
        if (Array.isArray(tagNames)) {
            throw new TypeError('Dom.isTag does not support array');
        }
        const tags = tagNames;
        if (nameL === tags || nameU === tags) {
            return true;
        }
        return false;
    }
    /**
     * Marks an item as temporary
     */
    static markTemporary(element, attributes) {
        attributes && (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_4__.attr)(element, attributes);
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_4__.attr)(element, jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.TEMP_ATTR, true);
        return element;
    }
    /**
     * Check if element is temporary
     */
    static isTemporary(element) {
        if (!Dom.isElement(element)) {
            return false;
        }
        return (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isMarker */ ._V)(element) || (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_4__.attr)(element, jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.TEMP_ATTR) === 'true';
    }
    /**
     * Replace temporary elements from string
     */
    static replaceTemporaryFromString(value) {
        return value.replace(/<([a-z]+)[^>]+data-jodit-temp[^>]+>(.+?)<\/\1>/gi, '$2');
    }
    /**
     * Get temporary list
     */
    static temporaryList(root) {
        return (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_4__.$$)(`[${jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.TEMP_ATTR}]`, root);
    }
}


/***/ }),

/***/ 46879:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   b: function() { return /* reexport safe */ _lazy_walker__WEBPACK_IMPORTED_MODULE_1__.b; },
/* harmony export */   i: function() { return /* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_0__.i; }
/* harmony export */ });
/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var _lazy_walker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(31818);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module dom
 */




/***/ }),

/***/ 31818:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   b: function() { return /* binding */ LazyWalker; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_event_emitter_eventify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3569);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9162);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




class LazyWalker extends jodit_core_event_emitter_eventify__WEBPACK_IMPORTED_MODULE_2__/* .Eventify */ .a {
    setWork(root) {
        if (this.isWorked) {
            this.break();
        }
        this.workNodes = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.eachGen(root, !this.options.reverse);
        this.isFinished = false;
        this.startIdleRequest();
        return this;
    }
    constructor(async, options = {}) {
        super();
        this.async = async;
        this.options = options;
        this.workNodes = null;
        this.hadAffect = false;
        this.isWorked = false;
        this.isFinished = false;
        this.idleId = 0;
    }
    startIdleRequest() {
        var _a;
        this.idleId = this.async.requestIdleCallback(this.workPerform, {
            timeout: (_a = this.options.timeout) !== null && _a !== void 0 ? _a : 10
        });
    }
    break(reason) {
        if (this.isWorked) {
            this.stop();
            this.emit('break', reason);
        }
    }
    end() {
        if (this.isWorked) {
            this.stop();
            this.emit('end', this.hadAffect);
            this.hadAffect = false;
        }
    }
    stop() {
        this.isWorked = false;
        this.isFinished = true;
        this.workNodes = null;
        this.async.cancelIdleCallback(this.idleId);
    }
    destruct() {
        super.destruct();
        this.stop();
    }
    workPerform(deadline) {
        var _a;
        if (this.workNodes) {
            this.isWorked = true;
            let count = 0;
            const chunkSize = (_a = this.options.timeoutChunkSize) !== null && _a !== void 0 ? _a : 50;
            while (!this.isFinished &&
                (deadline.timeRemaining() > 0 ||
                    (deadline.didTimeout && count <= chunkSize))) {
                const item = this.workNodes.next();
                count += 1;
                if (this.visitNode(item.value)) {
                    this.hadAffect = true;
                }
                if (item.done) {
                    this.end();
                    return;
                }
            }
        }
        else {
            this.end();
        }
        if (!this.isFinished) {
            this.startIdleRequest();
        }
    }
    visitNode(nodeElm) {
        var _a;
        if (!nodeElm ||
            (this.options.whatToShow !== undefined &&
                nodeElm.nodeType !== this.options.whatToShow)) {
            return false;
        }
        return (_a = this.emit('visit', nodeElm)) !== null && _a !== void 0 ? _a : false;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_0__.autobind
], LazyWalker.prototype, "workPerform", null);


/***/ }),

/***/ 43010:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   v: function() { return /* binding */ EventEmitter; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2926);
/* harmony import */ var jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(69099);
/* harmony import */ var jodit_core_helpers_checker_is_array__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(63738);
/* harmony import */ var jodit_core_helpers_utils_error__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(60701);
/* harmony import */ var jodit_core_helpers_array_split_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(83893);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62924);
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(50669);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */







/**
 * The module editor's event manager
 */
class EventEmitter {
    mute(event) {
        this.__mutedEvents.add(event !== null && event !== void 0 ? event : '*');
        return this;
    }
    isMuted(event) {
        if (event && this.__mutedEvents.has(event)) {
            return true;
        }
        return this.__mutedEvents.has('*');
    }
    unmute(event) {
        this.__mutedEvents.delete(event !== null && event !== void 0 ? event : '*');
        return this;
    }
    __eachEvent(events, callback) {
        const eventParts = (0,jodit_core_helpers_array_split_array__WEBPACK_IMPORTED_MODULE_2__/* .splitArray */ .C)(events).map(e => e.trim());
        eventParts.forEach(eventNameSpace => {
            const eventAndNameSpace = eventNameSpace.split('.');
            const namespace = eventAndNameSpace[1] || _store__WEBPACK_IMPORTED_MODULE_1__/* .defaultNameSpace */ .r;
            callback.call(this, eventAndNameSpace[0], namespace);
        });
    }
    __getStore(subject) {
        if (!subject) {
            throw (0,jodit_core_helpers_utils_error__WEBPACK_IMPORTED_MODULE_3__/* .error */ .vU)('Need subject');
        }
        if (subject[this.__key] === undefined) {
            const store = new _store__WEBPACK_IMPORTED_MODULE_1__/* .EventHandlersStore */ .D();
            Object.defineProperty(subject, this.__key, {
                enumerable: false,
                configurable: true,
                writable: true,
                value: store
            });
        }
        return subject[this.__key];
    }
    __removeStoreFromSubject(subject) {
        if (subject[this.__key] !== undefined) {
            Object.defineProperty(subject, this.__key, {
                enumerable: false,
                configurable: true,
                writable: true,
                value: undefined
            });
        }
    }
    __triggerNativeEvent(element, event) {
        const evt = this.__doc.createEvent('HTMLEvents');
        if ((0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_4__/* .isString */ .H)(event)) {
            evt.initEvent(event, true, true);
        }
        else {
            evt.initEvent(event.type, event.bubbles, event.cancelable);
            [
                'screenX',
                'screenY',
                'clientX',
                'clientY',
                'target',
                'srcElement',
                'currentTarget',
                'timeStamp',
                'which',
                'keyCode'
            ].forEach(property => {
                Object.defineProperty(evt, property, {
                    value: event[property],
                    enumerable: true
                });
            });
            Object.defineProperty(evt, 'originalEvent', {
                value: event,
                enumerable: true
            });
        }
        element.dispatchEvent(evt);
    }
    /**
     * Get current event name
     *
     * @example
     * ```javascript
     * parent.e.on('openDialog closeDialog', function () {
     *     if (parent.e.current === 'closeDialog') {
     *         alert('Dialog was closed');
     *     } else {
     *         alert('Dialog was opened');
     *     }
     * });
     * ```
     */
    get current() {
        return this.currents[this.currents.length - 1];
    }
    on(eventsOrSubjects, callbackOrEvents, optionsOrCallback, opts) {
        let subjects;
        let events;
        let callback;
        let options;
        if ((0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_4__/* .isString */ .H)(eventsOrSubjects) || (0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_4__/* .isStringArray */ .G)(eventsOrSubjects)) {
            subjects = this;
            events = eventsOrSubjects;
            callback = callbackOrEvents;
            options = optionsOrCallback;
        }
        else {
            subjects = eventsOrSubjects;
            events = callbackOrEvents;
            callback = optionsOrCallback;
            options = opts;
        }
        if (!((0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_4__/* .isString */ .H)(events) || (0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_4__/* .isStringArray */ .G)(events)) ||
            events.length === 0) {
            throw (0,jodit_core_helpers_utils_error__WEBPACK_IMPORTED_MODULE_3__/* .error */ .vU)('Need events names');
        }
        if (!(0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_5__/* .isFunction */ .m)(callback)) {
            throw (0,jodit_core_helpers_utils_error__WEBPACK_IMPORTED_MODULE_3__/* .error */ .vU)('Need event handler');
        }
        if ((0,jodit_core_helpers_checker_is_array__WEBPACK_IMPORTED_MODULE_6__/* .isArray */ .k)(subjects)) {
            subjects.forEach(subj => {
                this.on(subj, events, callback, options);
            });
            return this;
        }
        const subject = subjects;
        const store = this.__getStore(subject);
        const self = this;
        let syntheticCallback = function (event, ...args) {
            if (self.isMuted(event)) {
                return;
            }
            return callback && callback.call(this, ...args);
        };
        if (isDOMElement(subject)) {
            syntheticCallback = function (event) {
                if (self.isMuted(event.type)) {
                    return;
                }
                self.__prepareEvent(event);
                if (callback && callback.call(this, event) === false) {
                    event.preventDefault();
                    event.stopImmediatePropagation();
                    return false;
                }
                return;
            };
        }
        this.__eachEvent(events, (event, namespace) => {
            var _a, _b;
            if (event.length === 0) {
                throw (0,jodit_core_helpers_utils_error__WEBPACK_IMPORTED_MODULE_3__/* .error */ .vU)('Need event name');
            }
            if (store.indexOf(event, namespace, callback) === false) {
                const block = {
                    event,
                    originalCallback: callback,
                    syntheticCallback
                };
                store.set(event, namespace, block, options === null || options === void 0 ? void 0 : options.top);
                if (isDOMElement(subject)) {
                    const eOpts = jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.PASSIVE_EVENTS.has(event)
                        ? {
                            passive: true,
                            capture: (_a = options === null || options === void 0 ? void 0 : options.capture) !== null && _a !== void 0 ? _a : false
                        }
                        : (_b = options === null || options === void 0 ? void 0 : options.capture) !== null && _b !== void 0 ? _b : false;
                    syntheticCallback.options = eOpts;
                    subject.addEventListener(event, syntheticCallback, eOpts);
                    this.__memoryDOMSubjectToHandler(subject, syntheticCallback);
                }
            }
        });
        return this;
    }
    __memoryDOMSubjectToHandler(subject, syntheticCallback) {
        const callbackStore = this.__domEventsMap.get(subject) || new Set();
        callbackStore.add(syntheticCallback);
        this.__domEventsMap.set(subject, callbackStore);
    }
    __unmemoryDOMSubjectToHandler(subject, syntheticCallback) {
        const m = this.__domEventsMap;
        const callbackStore = m.get(subject) || new Set();
        callbackStore.delete(syntheticCallback);
        if (callbackStore.size) {
            m.set(subject, callbackStore);
        }
        else {
            m.delete(subject);
        }
    }
    one(eventsOrSubjects, callbackOrEvents, optionsOrCallback, opts) {
        let subjects;
        let events;
        let callback;
        let options;
        if ((0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_4__/* .isString */ .H)(eventsOrSubjects) || (0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_4__/* .isStringArray */ .G)(eventsOrSubjects)) {
            subjects = this;
            events = eventsOrSubjects;
            callback = callbackOrEvents;
            options = optionsOrCallback;
        }
        else {
            subjects = eventsOrSubjects;
            events = callbackOrEvents;
            callback = optionsOrCallback;
            options = opts;
        }
        const newCallback = (...args) => {
            this.off(subjects, events, newCallback);
            return callback(...args);
        };
        this.on(subjects, events, newCallback, options);
        return this;
    }
    off(eventsOrSubjects, callbackOrEvents, handler) {
        let subjects;
        let events;
        let callback;
        if ((0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_4__/* .isString */ .H)(eventsOrSubjects) || (0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_4__/* .isStringArray */ .G)(eventsOrSubjects)) {
            subjects = this;
            events = eventsOrSubjects;
            callback = callbackOrEvents;
        }
        else {
            subjects = eventsOrSubjects;
            events = callbackOrEvents;
            callback = handler;
        }
        if ((0,jodit_core_helpers_checker_is_array__WEBPACK_IMPORTED_MODULE_6__/* .isArray */ .k)(subjects)) {
            subjects.forEach(subj => {
                this.off(subj, events, callback);
            });
            return this;
        }
        const subject = subjects;
        const store = this.__getStore(subject);
        if (!((0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_4__/* .isString */ .H)(events) || (0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_4__/* .isStringArray */ .G)(events)) ||
            events.length === 0) {
            store.namespaces().forEach((namespace) => {
                this.off(subject, '.' + namespace);
            });
            this.__removeStoreFromSubject(subject);
            return this;
        }
        const removeEventListener = (block) => {
            var _a;
            if (isDOMElement(subject)) {
                subject.removeEventListener(block.event, block.syntheticCallback, (_a = block.syntheticCallback.options) !== null && _a !== void 0 ? _a : false);
                this.__unmemoryDOMSubjectToHandler(subject, block.syntheticCallback);
            }
        }, removeCallbackFromNameSpace = (event, namespace) => {
            if (event === '') {
                store.events(namespace).forEach((eventName) => {
                    if (eventName !== '') {
                        removeCallbackFromNameSpace(eventName, namespace);
                    }
                });
                return;
            }
            const blocks = store.get(event, namespace);
            if (!blocks || !blocks.length) {
                return;
            }
            if (!(0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_5__/* .isFunction */ .m)(callback)) {
                blocks.forEach(removeEventListener);
                blocks.length = 0;
                store.clearEvents(namespace, event);
            }
            else {
                const index = store.indexOf(event, namespace, callback);
                if (index !== false) {
                    removeEventListener(blocks[index]);
                    blocks.splice(index, 1);
                    if (!blocks.length) {
                        store.clearEvents(namespace, event);
                    }
                }
            }
        };
        this.__eachEvent(events, (event, namespace) => {
            if (namespace === _store__WEBPACK_IMPORTED_MODULE_1__/* .defaultNameSpace */ .r) {
                store.namespaces().forEach(namespace => {
                    removeCallbackFromNameSpace(event, namespace);
                });
            }
            else {
                removeCallbackFromNameSpace(event, namespace);
            }
        });
        if (store.isEmpty()) {
            this.__removeStoreFromSubject(subject);
        }
        return this;
    }
    stopPropagation(subjectOrEvents, eventsList) {
        const subject = (0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_4__/* .isString */ .H)(subjectOrEvents)
            ? this
            : subjectOrEvents;
        const events = (0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_4__/* .isString */ .H)(subjectOrEvents)
            ? subjectOrEvents
            : eventsList;
        if (typeof events !== 'string') {
            throw (0,jodit_core_helpers_utils_error__WEBPACK_IMPORTED_MODULE_3__/* .error */ .vU)('Need event names');
        }
        const store = this.__getStore(subject);
        this.__eachEvent(events, (event, namespace) => {
            const blocks = store.get(event, namespace);
            if (blocks) {
                this.__stopped.push(blocks);
            }
            if (namespace === _store__WEBPACK_IMPORTED_MODULE_1__/* .defaultNameSpace */ .r) {
                store
                    .namespaces(true)
                    .forEach(ns => this.stopPropagation(subject, event + '.' + ns));
            }
        });
    }
    __removeStop(currentBlocks) {
        if (currentBlocks) {
            const index = this.__stopped.indexOf(currentBlocks);
            index !== -1 && this.__stopped.splice(0, index + 1);
        }
    }
    __isStopped(currentBlocks) {
        return (currentBlocks !== undefined &&
            this.__stopped.indexOf(currentBlocks) !== -1);
    }
    fire(subjectOrEvents, eventsList, ...args) {
        let result, result_value;
        const subject = (0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_4__/* .isString */ .H)(subjectOrEvents)
            ? this
            : subjectOrEvents;
        const events = (0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_4__/* .isString */ .H)(subjectOrEvents)
            ? subjectOrEvents
            : eventsList;
        const argumentsList = (0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_4__/* .isString */ .H)(subjectOrEvents)
            ? [eventsList, ...args]
            : args;
        if (!isDOMElement(subject) && !(0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_4__/* .isString */ .H)(events)) {
            throw (0,jodit_core_helpers_utils_error__WEBPACK_IMPORTED_MODULE_3__/* .error */ .vU)('Need events names');
        }
        const store = this.__getStore(subject);
        if (!(0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_4__/* .isString */ .H)(events) && isDOMElement(subject)) {
            this.__triggerNativeEvent(subject, eventsList);
        }
        else {
            this.__eachEvent(events, (event, namespace) => {
                if (isDOMElement(subject)) {
                    this.__triggerNativeEvent(subject, event);
                }
                else {
                    const blocks = store.get(event, namespace);
                    if (blocks) {
                        try {
                            [...blocks].every((block) => {
                                if (this.__isStopped(blocks)) {
                                    return false;
                                }
                                this.currents.push(event);
                                result_value =
                                    block.syntheticCallback.call(subject, event, ...argumentsList);
                                this.currents.pop();
                                if (result_value !== undefined) {
                                    result = result_value;
                                }
                                return true;
                            });
                        }
                        finally {
                            this.__removeStop(blocks);
                        }
                    }
                    if (namespace === _store__WEBPACK_IMPORTED_MODULE_1__/* .defaultNameSpace */ .r &&
                        !isDOMElement(subject)) {
                        store
                            .namespaces()
                            .filter(ns => ns !== namespace)
                            .forEach((ns) => {
                            const result_second = this.fire.apply(this, [
                                subject,
                                event + '.' + ns,
                                ...argumentsList
                            ]);
                            if (result_second !== undefined) {
                                result = result_second;
                            }
                        });
                    }
                }
            });
        }
        return result;
    }
    constructor(doc) {
        this.__domEventsMap = new Map();
        this.__mutedEvents = new Set();
        this.__key = '__JoditEventEmitterNamespaces';
        this.__doc = document;
        this.__prepareEvent = (e) => {
            if (e.cancelBubble) {
                return;
            }
            // for Shadow Dom
            if (e.composed && (0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_5__/* .isFunction */ .m)(e.composedPath) && e.composedPath()[0]) {
                Object.defineProperty(e, 'target', {
                    value: e.composedPath()[0],
                    configurable: true,
                    enumerable: true
                });
            }
            if (e.type.match(/^touch/) &&
                e.changedTouches &&
                e.changedTouches.length) {
                ['clientX', 'clientY', 'pageX', 'pageY'].forEach((key) => {
                    Object.defineProperty(e, key, {
                        value: e.changedTouches[0][key],
                        configurable: true,
                        enumerable: true
                    });
                });
            }
            if (!e.originalEvent) {
                e.originalEvent = e;
            }
            if (e.type === 'paste' &&
                e.clipboardData === undefined &&
                this.__doc.defaultView.clipboardData) {
                Object.defineProperty(e, 'clipboardData', {
                    get: () => {
                        return this.__doc.defaultView.clipboardData;
                    },
                    configurable: true,
                    enumerable: true
                });
            }
        };
        this.currents = [];
        this.__stopped = [];
        this.__isDestructed = false;
        if (doc) {
            this.__doc = doc;
        }
        this.__key += new Date().getTime();
    }
    destruct() {
        if (this.__isDestructed) {
            return;
        }
        this.__isDestructed = true;
        this.__domEventsMap.forEach((set, elm) => {
            this.off(elm);
        });
        this.__domEventsMap.clear();
        this.__mutedEvents.clear();
        this.currents.length = 0;
        this.__stopped.length = 0;
        this.off(this);
        this.__getStore(this).clear();
        this.__removeStoreFromSubject(this);
    }
}
function isDOMElement(subject) {
    return (0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_5__/* .isFunction */ .m)(subject.addEventListener);
}


/***/ }),

/***/ 3569:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: function() { return /* binding */ Eventify; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * Class for adding event handling capability
 *
 * ```ts
 * class SomeClass extends Eventify<{ start: (node: Node) => boolean; }> {
 * 	constructor() {
 * 		super();
 * 		setTimeout(() => {
 * 			if (this.emit('start', document.body)) {
 * 				console.log('yes');
 * 			};
 * 		}, 100);
 * 	}
 * }
 *
 * const sm = new SomeClass();
 * sm.on('start', (node) => {
 * 	console.log(node);
 * 	return true;
 * })
 * ```
 */
class Eventify {
    constructor() {
        this.__map = new Map();
    }
    on(name, func) {
        var _a;
        if (!this.__map.has(name)) {
            this.__map.set(name, new Set());
        }
        (_a = this.__map.get(name)) === null || _a === void 0 ? void 0 : _a.add(func);
        return this;
    }
    off(name, func) {
        var _a;
        if (this.__map.has(name)) {
            (_a = this.__map.get(name)) === null || _a === void 0 ? void 0 : _a.delete(func);
        }
        return this;
    }
    destruct() {
        this.__map.clear();
    }
    emit(name, ...args) {
        var _a;
        let result;
        if (this.__map.has(name)) {
            (_a = this.__map.get(name)) === null || _a === void 0 ? void 0 : _a.forEach(cb => {
                result = cb(...args);
            });
        }
        return result;
    }
}


/***/ }),

/***/ 47981:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DG: function() { return /* reexport safe */ _store__WEBPACK_IMPORTED_MODULE_3__.D; },
/* harmony export */   LO: function() { return /* reexport safe */ _observable__WEBPACK_IMPORTED_MODULE_2__.L; },
/* harmony export */   aN: function() { return /* reexport safe */ _eventify__WEBPACK_IMPORTED_MODULE_1__.a; },
/* harmony export */   rO: function() { return /* reexport safe */ _store__WEBPACK_IMPORTED_MODULE_3__.r; },
/* harmony export */   vp: function() { return /* reexport safe */ _event_emitter__WEBPACK_IMPORTED_MODULE_0__.v; }
/* harmony export */ });
/* harmony import */ var _event_emitter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(43010);
/* harmony import */ var _eventify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3569);
/* harmony import */ var _observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(16313);
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(50669);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module event-emitter
 */






/***/ }),

/***/ 16313:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   L: function() { return /* binding */ observable; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(63738);
/* harmony import */ var jodit_core_helpers_checker_is_equal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(97195);
/* harmony import */ var jodit_core_helpers_checker_is_plain_object__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(45564);
/* harmony import */ var jodit_core_decorators_watch_watch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(69082);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




const OBSERVABLE_OBJECT = Symbol('observable-object');
function isObservableObject(obj) {
    return obj[OBSERVABLE_OBJECT] !== undefined;
}
/**
 * Makes any object an observable object
 * @example
 * ```js
 * const obj = {
 *   a: 1,
 *   b: {
 *     c: 5
 *   }
 * }
 *
 * const obsObj = Jodit.modules.observable(obj);
 * console.log(obj === obsObj); // true
 * obsObj.on('change', () => {
 *   console.log('Object changed');
 * });
 * obsObj.on('change.a', () => {
 *   console.log('Key a changed');
 * });
 * obsObj.on('change.b.c', () => {
 *   console.log('Key b.c changed');
 * });
 *
 * obj.a = 6;
 * // Object changed
 * // Key a changed
 *
 * obj.b = {c: 6}
 * // Object changed
 *
 * obj.b.c = 8
 * // Object changed
 * // Key b.c changed
 * ```
 */
function observable(obj) {
    if (isObservableObject(obj)) {
        return obj;
    }
    const __lockEvent = {};
    const __onEvents = {};
    const on = (event, callback) => {
        if ((0,jodit_core_helpers_checker_is_array__WEBPACK_IMPORTED_MODULE_1__/* .isArray */ .k)(event)) {
            event.map(e => on(e, callback));
            return obj;
        }
        if (!__onEvents[event]) {
            __onEvents[event] = [];
        }
        __onEvents[event].push(callback);
        return obj;
    };
    const fire = (event, ...attr) => {
        if ((0,jodit_core_helpers_checker_is_array__WEBPACK_IMPORTED_MODULE_1__/* .isArray */ .k)(event)) {
            event.map(e => fire(e, ...attr));
            return;
        }
        try {
            if (!__lockEvent[event] && __onEvents[event]) {
                __lockEvent[event] = true;
                __onEvents[event].forEach(clb => clb.call(obj, ...attr));
            }
        }
        finally {
            __lockEvent[event] = false;
        }
    };
    const initAccessors = (dict, prefixes = []) => {
        const store = {};
        if (isObservableObject(dict)) {
            return;
        }
        Object.defineProperty(dict, OBSERVABLE_OBJECT, {
            enumerable: false,
            value: true
        });
        Object.keys(dict).forEach(_key => {
            const key = _key;
            const prefix = prefixes.concat(key).filter(a => a.length);
            store[key] = dict[key];
            const descriptor = (0,jodit_core_decorators_watch_watch__WEBPACK_IMPORTED_MODULE_0__/* .getPropertyDescriptor */ .w7)(dict, key);
            Object.defineProperty(dict, key, {
                set: (value) => {
                    const oldValue = store[key];
                    if (!(0,jodit_core_helpers_checker_is_equal__WEBPACK_IMPORTED_MODULE_2__/* .isFastEqual */ .L)(store[key], value)) {
                        fire([
                            'beforeChange',
                            `beforeChange.${prefix.join('.')}`
                        ], key, value);
                        if ((0,jodit_core_helpers_checker_is_plain_object__WEBPACK_IMPORTED_MODULE_3__/* .isPlainObject */ .P)(value)) {
                            initAccessors(value, prefix);
                        }
                        if (descriptor && descriptor.set) {
                            descriptor.set.call(obj, value);
                        }
                        else {
                            store[key] = value;
                        }
                        const sum = [];
                        fire([
                            'change',
                            ...prefix.reduce((rs, p) => {
                                sum.push(p);
                                rs.push(`change.${sum.join('.')}`);
                                return rs;
                            }, [])
                        ], prefix.join('.'), oldValue, (value === null || value === void 0 ? void 0 : value.valueOf)
                            ? value.valueOf()
                            : value);
                    }
                },
                get: () => {
                    if (descriptor && descriptor.get) {
                        return descriptor.get.call(obj);
                    }
                    return store[key];
                },
                enumerable: true,
                configurable: true
            });
            if ((0,jodit_core_helpers_checker_is_plain_object__WEBPACK_IMPORTED_MODULE_3__/* .isPlainObject */ .P)(store[key])) {
                initAccessors(store[key], prefix);
            }
        });
        Object.defineProperty(obj, 'on', {
            value: on
        });
    };
    initAccessors(obj);
    return obj;
}


/***/ }),

/***/ 50669:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   D: function() { return /* binding */ EventHandlersStore; },
/* harmony export */   r: function() { return /* binding */ defaultNameSpace; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52378);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var jodit_core_helpers_array_to_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(24174);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


const defaultNameSpace = 'JoditEventDefaultNamespace';
class EventHandlersStore {
    constructor() {
        this.__store = new Map();
    }
    get(event, namespace) {
        if (this.__store.has(namespace)) {
            const ns = this.__store.get(namespace);
            void 0;
            return ns[event];
        }
    }
    indexOf(event, namespace, originalCallback) {
        const blocks = this.get(event, namespace);
        if (blocks) {
            for (let i = 0; i < blocks.length; i += 1) {
                if (blocks[i].originalCallback === originalCallback) {
                    return i;
                }
            }
        }
        return false;
    }
    namespaces(withoutDefault = false) {
        const nss = (0,jodit_core_helpers_array_to_array__WEBPACK_IMPORTED_MODULE_1__/* .toArray */ .q)(this.__store.keys());
        return withoutDefault ? nss.filter(ns => ns !== defaultNameSpace) : nss;
    }
    events(namespace) {
        const ns = this.__store.get(namespace);
        return ns ? Object.keys(ns) : [];
    }
    set(event, namespace, data, onTop = false) {
        let ns = this.__store.get(namespace);
        if (!ns) {
            ns = {};
            this.__store.set(namespace, ns);
        }
        if (ns[event] === undefined) {
            ns[event] = [];
        }
        if (!onTop) {
            ns[event].push(data);
        }
        else {
            ns[event].unshift(data);
        }
    }
    clear() {
        this.__store.clear();
    }
    clearEvents(namespace, event) {
        const ns = this.__store.get(namespace);
        if (ns && ns[event]) {
            delete ns[event];
            if (!Object.keys(ns).length) {
                this.__store.delete(namespace);
            }
        }
    }
    isEmpty() {
        return this.__store.size === 0;
    }
}


/***/ }),

/***/ 79102:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TB: function() { return /* binding */ eventEmitter; },
/* harmony export */   ZO: function() { return /* binding */ getContainer; },
/* harmony export */   as: function() { return /* binding */ instances; },
/* harmony export */   fe: function() { return /* binding */ uniqueUid; },
/* harmony export */   pw: function() { return /* binding */ pluginSystem; },
/* harmony export */   qz: function() { return /* binding */ modules; },
/* harmony export */   xl: function() { return /* binding */ extendLang; }
/* harmony export */ });
/* harmony import */ var _plugin_plugin_system__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(41978);
/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(46879);
/* harmony import */ var _event_emitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(47981);
/* harmony import */ var _helpers_checker_is_jodit_object__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(8133);
/* harmony import */ var _helpers_checker_is_view_object__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(31470);
/* harmony import */ var _helpers_utils_get_class_name__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(4306);
/* harmony import */ var _helpers_string_kebab_case__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(13929);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(2926);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */









const instances = {};
let counter = 1;
const uuids = new Set();
/**
 * Generate global unique uid
 */
function uniqueUid() {
    function gen() {
        counter += 10 * (Math.random() + 1);
        return Math.round(counter).toString(16);
    }
    let uid = gen();
    while (uuids.has(uid)) {
        uid = gen();
    }
    uuids.add(uid);
    return uid;
}
const pluginSystem = new _plugin_plugin_system__WEBPACK_IMPORTED_MODULE_0__/* .PluginSystem */ .h();
const modules = {};
const extendLang = (langs) => {
    Object.keys(langs).forEach(key => {
        if (_constants__WEBPACK_IMPORTED_MODULE_4__.lang[key]) {
            Object.assign(_constants__WEBPACK_IMPORTED_MODULE_4__.lang[key], langs[key]);
        }
        else {
            _constants__WEBPACK_IMPORTED_MODULE_4__.lang[key] = langs[key];
        }
    });
};
const boxes = new WeakMap();
/**
 * Create unique box(HTMLCotainer) and remove it after destroy
 */
function getContainer(jodit, classFunc, tag = 'div', createInsideEditor = false) {
    const name = (0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_5__/* .isString */ .H)(classFunc)
        ? classFunc
        : classFunc
            ? (0,_helpers_utils_get_class_name__WEBPACK_IMPORTED_MODULE_3__/* .getClassName */ .g)(classFunc.prototype)
            : 'jodit-utils';
    const data = boxes.get(jodit) || {}, key = name + tag;
    const view = (0,_helpers_checker_is_view_object__WEBPACK_IMPORTED_MODULE_6__/* .isViewObject */ .f)(jodit) ? jodit : jodit.j;
    if (!data[key]) {
        let c = view.c, body = (0,_helpers_checker_is_jodit_object__WEBPACK_IMPORTED_MODULE_7__/* .isJoditObject */ .Z)(jodit) && jodit.o.shadowRoot
            ? jodit.o.shadowRoot
            : jodit.od.body;
        if (createInsideEditor &&
            (0,_helpers_checker_is_jodit_object__WEBPACK_IMPORTED_MODULE_7__/* .isJoditObject */ .Z)(jodit) &&
            jodit.od !== jodit.ed) {
            c = jodit.createInside;
            const place = tag === 'style' ? jodit.ed.head : jodit.ed.body;
            body =
                (0,_helpers_checker_is_jodit_object__WEBPACK_IMPORTED_MODULE_7__/* .isJoditObject */ .Z)(jodit) && jodit.o.shadowRoot
                    ? jodit.o.shadowRoot
                    : place;
        }
        const box = c.element(tag, {
            className: `jodit jodit-${(0,_helpers_string_kebab_case__WEBPACK_IMPORTED_MODULE_8__/* .kebabCase */ .G)(name)}-container jodit-box`
        });
        box.classList.add(`jodit_theme_${view.o.theme || 'default'}`);
        body.appendChild(box);
        data[key] = box;
        jodit.hookStatus('beforeDestruct', () => {
            _dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(box);
            delete data[key];
            if (Object.keys(data).length) {
                boxes.delete(jodit);
            }
        });
        boxes.set(jodit, data);
    }
    data[key].classList.remove('jodit_theme_default', 'jodit_theme_dark');
    data[key].classList.add(`jodit_theme_${view.o.theme || 'default'}`);
    return data[key];
}
/**
 * Global event emitter
 */
const eventEmitter = new _event_emitter__WEBPACK_IMPORTED_MODULE_2__/* .EventEmitter */ .vp();


/***/ }),

/***/ 67119:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   _: function() { return /* binding */ asArray; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(63738);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/array
 */

/**
 * Always return Array
 * ```javascript
 * Jodit.modules.Helpers.asArray('test') // ['test']
 * Jodit.modules.Helpers.asArray(['test']) // ['test']
 * Jodit.modules.Helpers.asArray(1) // [1]
 * ```
 */
const asArray = (a) => ((0,jodit_core_helpers_checker_is_array__WEBPACK_IMPORTED_MODULE_0__/* .isArray */ .k)(a) ? a : [a]);


/***/ }),

/***/ 8131:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C1: function() { return /* reexport safe */ _split_array__WEBPACK_IMPORTED_MODULE_1__.C; },
/* harmony export */   _2: function() { return /* reexport safe */ _as_array__WEBPACK_IMPORTED_MODULE_0__._; },
/* harmony export */   qo: function() { return /* reexport safe */ _to_array__WEBPACK_IMPORTED_MODULE_2__.q; }
/* harmony export */ });
/* harmony import */ var _as_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67119);
/* harmony import */ var _split_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(83893);
/* harmony import */ var _to_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(24174);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/array
 */





/***/ }),

/***/ 83893:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C: function() { return /* binding */ splitArray; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * Return an array from string or array
 * ```javascript
 * Jodit.modules.Helpers.splitArray('1,2,3') // ['1', '2', '3']
 * Jodit.modules.Helpers.splitArray(['1', '2', '3']) // ['1', '2', '3']
 * ```
 */
function splitArray(a) {
    return Array.isArray(a) ? a : a.split(/[,\s]+/);
}


/***/ }),

/***/ 24174:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   q: function() { return /* binding */ toArray; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_utils_reset__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(25074);
/* harmony import */ var jodit_core_helpers_checker_is_native_function__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(79240);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/array
 */


/**
 * Always return Array. It's a safe polyfill for [Array.from](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from) method
 * In certain scenarios (such as with Joomla Mootools), Array.from may be substituted with a less optimal implementation
 * ```javascript
 * Jodit.modules.Helpers.toArray('123') // ['1', '2', '3']
 * Jodit.modules.Helpers.toArray(['test']) // ['test']
 * Jodit.modules.Helpers.toArray(1) // []
 * ```
 */
const toArray = function toArray(...args) {
    var _a;
    const func = (0,jodit_core_helpers_checker_is_native_function__WEBPACK_IMPORTED_MODULE_1__/* .isNativeFunction */ .Q)(Array.from)
        ? Array.from
        : (_a = (0,jodit_core_helpers_utils_reset__WEBPACK_IMPORTED_MODULE_0__/* .reset */ .m)('Array.from')) !== null && _a !== void 0 ? _a : Array.from;
    return func.apply(Array, args);
};


/***/ }),

/***/ 16684:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   g: function() { return /* reexport safe */ _set_timeout__WEBPACK_IMPORTED_MODULE_0__.g; },
/* harmony export */   i: function() { return /* reexport safe */ _set_timeout__WEBPACK_IMPORTED_MODULE_0__.i; }
/* harmony export */ });
/* harmony import */ var _set_timeout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(78037);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/async
 */



/***/ }),

/***/ 78037:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   g: function() { return /* binding */ clearTimeout; },
/* harmony export */   i: function() { return /* binding */ setTimeout; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/async
 */
/**
 * Create async callback if set timeout value - else call function immediately
 */
function setTimeout(callback, timeout, ...args) {
    if (!timeout) {
        callback.call(null, ...args);
    }
    else {
        return window.setTimeout(callback, timeout, ...args);
    }
    return 0;
}
/**
 * Clear timeout
 */
function clearTimeout(timer) {
    window.clearTimeout(timer);
}


/***/ }),

/***/ 4623:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   E: function() { return /* binding */ hasBrowserColorPicker; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/checker
 */
/**
 * Check if browser has a color picker (a new HTML5 attribute for input tag)
 */
function hasBrowserColorPicker() {
    let supportsColor = true;
    try {
        const a = document.createElement('input');
        a.type = 'color';
        a.value = '!';
        supportsColor = a.type === 'color' && a.value !== '!';
    }
    catch (e) {
        supportsColor = false;
    }
    return supportsColor;
}


/***/ }),

/***/ 78157:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A1: function() { return /* reexport safe */ _is_license__WEBPACK_IMPORTED_MODULE_12__.A; },
/* harmony export */   DM: function() { return /* reexport safe */ _is_set__WEBPACK_IMPORTED_MODULE_2__.D; },
/* harmony export */   EO: function() { return /* reexport safe */ _has_browser_color_picker__WEBPACK_IMPORTED_MODULE_0__.E; },
/* harmony export */   FJ: function() { return /* reexport safe */ _is_window__WEBPACK_IMPORTED_MODULE_22__.F; },
/* harmony export */   FP: function() { return /* reexport safe */ _is_html__WEBPACK_IMPORTED_MODULE_6__.F; },
/* harmony export */   GI: function() { return /* reexport safe */ _is_string__WEBPACK_IMPORTED_MODULE_18__.G; },
/* harmony export */   GN: function() { return /* reexport safe */ _is_int__WEBPACK_IMPORTED_MODULE_9__.G; },
/* harmony export */   Gu: function() { return /* reexport safe */ _is_imp_interface__WEBPACK_IMPORTED_MODULE_8__.Gu; },
/* harmony export */   HD: function() { return /* reexport safe */ _is_string__WEBPACK_IMPORTED_MODULE_18__.H; },
/* harmony export */   I4: function() { return /* reexport safe */ _is_html_from_word__WEBPACK_IMPORTED_MODULE_7__.I; },
/* harmony export */   LP: function() { return /* reexport safe */ _is_equal__WEBPACK_IMPORTED_MODULE_4__.L; },
/* harmony export */   PO: function() { return /* reexport safe */ _is_plain_object__WEBPACK_IMPORTED_MODULE_16__.P; },
/* harmony export */   PX: function() { return /* reexport safe */ _is_url__WEBPACK_IMPORTED_MODULE_19__.P; },
/* harmony export */   QC: function() { return /* reexport safe */ _is_native_function__WEBPACK_IMPORTED_MODULE_13__.Q; },
/* harmony export */   Xy: function() { return /* reexport safe */ _is_equal__WEBPACK_IMPORTED_MODULE_4__.X; },
/* harmony export */   Z$: function() { return /* reexport safe */ _is_imp_interface__WEBPACK_IMPORTED_MODULE_8__.Z$; },
/* harmony export */   Zt: function() { return /* reexport safe */ _is_imp_interface__WEBPACK_IMPORTED_MODULE_8__.Zt; },
/* harmony export */   Zu: function() { return /* reexport safe */ _is_jodit_object__WEBPACK_IMPORTED_MODULE_10__.Z; },
/* harmony export */   _V: function() { return /* reexport safe */ _is_marker__WEBPACK_IMPORTED_MODULE_23__._; },
/* harmony export */   f2: function() { return /* reexport safe */ _is_view_object__WEBPACK_IMPORTED_MODULE_11__.f; },
/* harmony export */   hj: function() { return /* reexport safe */ _is_number__WEBPACK_IMPORTED_MODULE_14__.h; },
/* harmony export */   jn: function() { return /* reexport safe */ _is_boolean__WEBPACK_IMPORTED_MODULE_3__.j; },
/* harmony export */   kE: function() { return /* reexport safe */ _is_numeric__WEBPACK_IMPORTED_MODULE_15__.k; },
/* harmony export */   kJ: function() { return /* reexport safe */ _is_array__WEBPACK_IMPORTED_MODULE_1__.k; },
/* harmony export */   mf: function() { return /* reexport safe */ _is_function__WEBPACK_IMPORTED_MODULE_5__.m; },
/* harmony export */   nj: function() { return /* reexport safe */ _is_void__WEBPACK_IMPORTED_MODULE_21__.n; },
/* harmony export */   r1: function() { return /* reexport safe */ _is_valid_name__WEBPACK_IMPORTED_MODULE_20__.r; },
/* harmony export */   tI: function() { return /* reexport safe */ _is_promise__WEBPACK_IMPORTED_MODULE_17__.t; }
/* harmony export */ });
/* harmony import */ var _has_browser_color_picker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4623);
/* harmony import */ var _is_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(63738);
/* harmony import */ var _is_set__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(31133);
/* harmony import */ var _is_boolean__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(88751);
/* harmony import */ var _is_equal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(97195);
/* harmony import */ var _is_function__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(69099);
/* harmony import */ var _is_html__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(18871);
/* harmony import */ var _is_html_from_word__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(37309);
/* harmony import */ var _is_imp_interface__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(90406);
/* harmony import */ var _is_int__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(38652);
/* harmony import */ var _is_jodit_object__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(8133);
/* harmony import */ var _is_view_object__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(31470);
/* harmony import */ var _is_license__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(36144);
/* harmony import */ var _is_native_function__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(79240);
/* harmony import */ var _is_number__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(32952);
/* harmony import */ var _is_numeric__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(57947);
/* harmony import */ var _is_plain_object__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(45564);
/* harmony import */ var _is_promise__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(59862);
/* harmony import */ var _is_string__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(2926);
/* harmony import */ var _is_url__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(62268);
/* harmony import */ var _is_valid_name__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(77442);
/* harmony import */ var _is_void__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(41240);
/* harmony import */ var _is_window__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(90318);
/* harmony import */ var _is_marker__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(29894);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/checker
 */


























/***/ }),

/***/ 63738:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   k: function() { return /* binding */ isArray; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/checker
 */
/**
 * Check if element is array
 */
function isArray(elm) {
    return Array.isArray(elm);
}


/***/ }),

/***/ 88751:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   j: function() { return /* binding */ isBoolean; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/checker
 */
function isBoolean(elm) {
    return typeof elm === 'boolean';
}


/***/ }),

/***/ 97195:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   L: function() { return /* binding */ isFastEqual; },
/* harmony export */   X: function() { return /* binding */ isEqual; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_string_stringify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(12582);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/checker
 */

/**
 * Check two element are equal
 */
function isEqual(a, b) {
    return a === b || (0,jodit_core_helpers_string_stringify__WEBPACK_IMPORTED_MODULE_0__/* .stringify */ .P)(a) === (0,jodit_core_helpers_string_stringify__WEBPACK_IMPORTED_MODULE_0__/* .stringify */ .P)(b);
}
function isFastEqual(a, b) {
    return a === b;
}


/***/ }),

/***/ 69099:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   m: function() { return /* binding */ isFunction; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/checker
 */
/**
 * Check value is Function
 */
function isFunction(value) {
    return typeof value === 'function';
}


/***/ }),

/***/ 37309:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   I: function() { return /* binding */ isHtmlFromWord; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/checker
 */
/**
 * Detect if string is HTML from MS Word or Excel
 */
function isHtmlFromWord(data) {
    return (data.search(/<meta.*?Microsoft Excel\s[\d].*?>/) !== -1 ||
        data.search(/<meta.*?Microsoft Word\s[\d].*?>/) !== -1 ||
        (data.search(/style="[^"]*mso-/) !== -1 && data.search(/<font/) !== -1));
}


/***/ }),

/***/ 18871:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   F: function() { return /* binding */ isHTML; }
/* harmony export */ });
/* harmony import */ var _is_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2926);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/checker
 */

/**
 * Check if a string is html or not
 */
const isHTML = (str) => (0,_is_string__WEBPACK_IMPORTED_MODULE_0__/* .isString */ .H)(str) &&
    /<([A-Za-z][A-Za-z0-9]*)\b[^>]*>(.*?)<\/\1>/m.test(str.replace(/[\r\n]/g, ''));


/***/ }),

/***/ 90406:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Gu: function() { return /* binding */ isInitable; },
/* harmony export */   Z$: function() { return /* binding */ isDestructable; },
/* harmony export */   Zt: function() { return /* binding */ hasContainer; }
/* harmony export */ });
/* harmony import */ var _is_function__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(69099);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var _is_void__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(41240);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



/**
 * Check value has method init
 */
function isInitable(value) {
    return !(0,_is_void__WEBPACK_IMPORTED_MODULE_1__/* .isVoid */ .n)(value) && (0,_is_function__WEBPACK_IMPORTED_MODULE_2__/* .isFunction */ .m)(value.init);
}
/**
 * Check value has method destruct
 */
function isDestructable(value) {
    return !(0,_is_void__WEBPACK_IMPORTED_MODULE_1__/* .isVoid */ .n)(value) && (0,_is_function__WEBPACK_IMPORTED_MODULE_2__/* .isFunction */ .m)(value.destruct);
}
/**
 * Check value is instant that implements IContainer
 */
function hasContainer(value) {
    return !(0,_is_void__WEBPACK_IMPORTED_MODULE_1__/* .isVoid */ .n)(value) && jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isElement(value.container);
}


/***/ }),

/***/ 38652:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   G: function() { return /* binding */ isInt; }
/* harmony export */ });
/* harmony import */ var _is_numeric__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(57947);
/* harmony import */ var _is_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2926);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/checker
 */


/**
 * Check value is Int
 */
function isInt(value) {
    if ((0,_is_string__WEBPACK_IMPORTED_MODULE_0__/* .isString */ .H)(value) && (0,_is_numeric__WEBPACK_IMPORTED_MODULE_1__/* .isNumeric */ .k)(value)) {
        value = parseFloat(value);
    }
    return typeof value === 'number' && Number.isFinite(value) && !(value % 1);
}


/***/ }),

/***/ 8133:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ isJoditObject; }
/* harmony export */ });
/* harmony import */ var _is_function__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(69099);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * Check if element is instance of Jodit
 */
function isJoditObject(jodit) {
    return Boolean(jodit &&
        jodit instanceof Object &&
        (0,_is_function__WEBPACK_IMPORTED_MODULE_0__/* .isFunction */ .m)(jodit.constructor) &&
        // @ts-ignore
        ((typeof Jodit !== 'undefined' && jodit instanceof Jodit) ||
            jodit.isJodit));
}


/***/ }),

/***/ 36144:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: function() { return /* binding */ isLicense; }
/* harmony export */ });
/* harmony import */ var _is_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2926);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/checker
 */

const isLicense = (license) => (0,_is_string__WEBPACK_IMPORTED_MODULE_0__/* .isString */ .H)(license) &&
    license.length === 23 &&
    /^[a-z0-9]{5}-[a-z0-9]{5}-[a-z0-9]{5}-[a-z0-9]{5}$/i.test(license);


/***/ }),

/***/ 29894:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   _: function() { return /* binding */ isMarker; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62924);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/**
 * Define element is selection helper
 */
function isMarker(elm) {
    return (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isNode(elm) &&
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(elm, 'span') &&
        elm.hasAttribute('data-' + jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MARKER_CLASS));
}


/***/ }),

/***/ 79240:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Q: function() { return /* binding */ isNativeFunction; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/checker
 */
/**
 * Check if function or method was not replaced on some custom implementation
 */
function isNativeFunction(f) {
    return (Boolean(f) &&
        (typeof f).toLowerCase() === 'function' &&
        (f === Function.prototype ||
            /^\s*function\s*(\b[a-z$_][a-z0-9$_]*\b)*\s*\((|([a-z$_][a-z0-9$_]*)(\s*,[a-z$_][a-z0-9$_]*)*)\)\s*{\s*\[native code]\s*}\s*$/i.test(String(f))));
}


/***/ }),

/***/ 32952:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   h: function() { return /* binding */ isNumber; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/checker
 */
/**
 * Check value is a number
 */
function isNumber(value) {
    return typeof value === 'number' && !isNaN(value) && isFinite(value);
}


/***/ }),

/***/ 57947:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   k: function() { return /* binding */ isNumeric; }
/* harmony export */ });
/* harmony import */ var _is_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2926);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/checker
 */

/**
 * Check value has numeric format
 */
function isNumeric(value) {
    if ((0,_is_string__WEBPACK_IMPORTED_MODULE_0__/* .isString */ .H)(value)) {
        if (!value.match(/^([+-])?[0-9]+(\.?)([0-9]+)?(e[0-9]+)?$/)) {
            return false;
        }
        value = parseFloat(value);
    }
    return typeof value === 'number' && !isNaN(value) && isFinite(value);
}


/***/ }),

/***/ 45564:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   P: function() { return /* binding */ isPlainObject; }
/* harmony export */ });
/* harmony import */ var _is_window__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(90318);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * Check if element is simple plaint object
 */
function isPlainObject(obj) {
    if (!obj || typeof obj !== 'object' || obj.nodeType || (0,_is_window__WEBPACK_IMPORTED_MODULE_0__/* .isWindow */ .F)(obj)) {
        return false;
    }
    return !(obj.constructor &&
        !{}.hasOwnProperty.call(obj.constructor.prototype, 'isPrototypeOf'));
}


/***/ }),

/***/ 59862:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   t: function() { return /* binding */ isPromise; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/checker
 */
function isPromise(val) {
    return val && typeof val.then === 'function';
}


/***/ }),

/***/ 31133:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   D: function() { return /* binding */ isSet; }
/* harmony export */ });
/* harmony import */ var _is_function__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(69099);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/checker
 */

/**
 * Check if element is set
 */
function isSet(elm) {
    return (Boolean(elm) &&
        (0,_is_function__WEBPACK_IMPORTED_MODULE_0__/* .isFunction */ .m)(elm.has) &&
        (0,_is_function__WEBPACK_IMPORTED_MODULE_0__/* .isFunction */ .m)(elm.add) &&
        (0,_is_function__WEBPACK_IMPORTED_MODULE_0__/* .isFunction */ .m)(elm.delete));
}


/***/ }),

/***/ 2926:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   G: function() { return /* binding */ isStringArray; },
/* harmony export */   H: function() { return /* binding */ isString; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(63738);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/checker
 */

/**
 * Check value is String
 */
function isString(value) {
    return typeof value === 'string';
}
/**
 * Check value is Array of String
 */
function isStringArray(value) {
    return (0,jodit_core_helpers_checker_is_array__WEBPACK_IMPORTED_MODULE_0__/* .isArray */ .k)(value) && isString(value[0]);
}


/***/ }),

/***/ 62268:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   P: function() { return /* binding */ isURL; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/checker
 */
/**
 * Check if a string is a url
 */
function isURL(str) {
    if (str.includes(' ')) {
        return false;
    }
    if (typeof URL !== 'undefined') {
        try {
            const url = new URL(str);
            return ['https:', 'http:', 'ftp:', 'file:', 'rtmp:'].includes(url.protocol);
        }
        catch (e) {
            return false;
        }
    }
    const a = document.createElement('a');
    a.href = str;
    return Boolean(a.hostname);
}


/***/ }),

/***/ 77442:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   r: function() { return /* binding */ isValidName; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/checker
 */
/**
 * Check if name has a normal format
 */
function isValidName(name) {
    if (!name.length) {
        return false;
    }
    return !/[^0-9A-Za-zа-яА-ЯЁё\w\-_. ]/.test(name) && name.trim().length > 0;
}


/***/ }),

/***/ 31470:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   f: function() { return /* binding */ isViewObject; }
/* harmony export */ });
/* harmony import */ var _is_function__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(69099);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * Check if element is instance of View
 */
function isViewObject(jodit) {
    return Boolean(jodit &&
        jodit instanceof Object &&
        (0,_is_function__WEBPACK_IMPORTED_MODULE_0__/* .isFunction */ .m)(jodit.constructor) &&
        jodit.isView);
}


/***/ }),

/***/ 41240:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   n: function() { return /* binding */ isVoid; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/checker
 */
/**
 * Check value is undefined or null
 */
function isVoid(value) {
    // eslint-disable-next-line eqeqeq
    return value === undefined || value === null;
}


/***/ }),

/***/ 90318:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   F: function() { return /* binding */ isWindow; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/checker
 */
function isWindow(obj) {
    return obj != null && obj === obj.window;
}


/***/ }),

/***/ 34781:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   h: function() { return /* binding */ colorToHex; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/color
 */
/**
 * Converts rgba text representation of color in hex
 *
 * @param color - string like rgba(red, green, blue, alpha) or rgb(red, green, blue)
 * @returns hex color view, NaN - for transparent color
 * @example
 * ```javascript
 * var p = document.createElement('p');
 * p.style.color = '#ffffff';
 * console.log(p.getAttribute('style')); // color: rgb(255, 255, 255);
 * console.log(colorTohex(p.style.color)); // #ffffff
 * ```
 */
const colorToHex = (color) => {
    if (color === 'rgba(0, 0, 0, 0)' || color === '') {
        return false;
    }
    if (!color) {
        return '#000000';
    }
    if (color.substr(0, 1) === '#') {
        return color;
    }
    const digits = /([\s\n\t\r]*?)rgb\((\d+), (\d+), (\d+)\)/.exec(color) ||
        /([\s\n\t\r]*?)rgba\((\d+), (\d+), (\d+), ([\d.]+)\)/.exec(color);
    if (!digits) {
        return '#000000';
    }
    const red = parseInt(digits[2], 10), green = parseInt(digits[3], 10), blue = parseInt(digits[4], 10), rgb = blue | (green << 8) | (red << 16);
    let hex = rgb.toString(16).toUpperCase();
    while (hex.length < 6) {
        hex = '0' + hex;
    }
    return digits[1] + '#' + hex;
};


/***/ }),

/***/ 68806:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   h: function() { return /* reexport safe */ _color_to_hex__WEBPACK_IMPORTED_MODULE_0__.h; }
/* harmony export */ });
/* harmony import */ var _color_to_hex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(34781);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/color
 */



/***/ }),

/***/ 37639:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ applyStyles; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers_utils_selector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(93789);
/* harmony import */ var jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76562);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(62924);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/html
 */




function normalizeCSS(s) {
    return s
        .replace(/mso-[a-z-]+:[\s]*[^;]+;/gi, '')
        .replace(/mso-[a-z-]+:[\s]*[^";']+$/gi, '')
        .replace(/border[a-z-]*:[\s]*[^;]+;/gi, '')
        .replace(/([0-9.]+)(pt|cm)/gi, (match, units, metrics) => {
        switch (metrics.toLowerCase()) {
            case 'pt':
                return (parseFloat(units) * 1.328).toFixed(0) + 'px';
            case 'cm':
                return (parseFloat(units) * 0.02645833).toFixed(0) + 'px';
        }
        return match;
    });
}
/**
 * If the HTML has CSS rules with selectors,
 * it applies them to the selectors in the HTML itself
 * and then removes the selector styles, leaving only the inline ones.
 */
function applyStyles(html) {
    if (html.indexOf('<html ') === -1) {
        return html;
    }
    html = html.substring(html.indexOf('<html '), html.length);
    html = html.substring(0, html.lastIndexOf('</html>') + '</html>'.length);
    const iframe = document.createElement('iframe');
    iframe.style.display = 'none';
    document.body.appendChild(iframe);
    let convertedString = '', collection = [];
    try {
        const iframeDoc = iframe.contentDocument ||
            (iframe.contentWindow ? iframe.contentWindow.document : null);
        if (iframeDoc) {
            iframeDoc.open();
            iframeDoc.write(html);
            iframeDoc.close();
            try {
                for (let i = 0; i < iframeDoc.styleSheets.length; i += 1) {
                    const rules = iframeDoc.styleSheets[i].cssRules;
                    for (let idx = 0; idx < rules.length; idx += 1) {
                        if (rules[idx].selectorText === '') {
                            continue;
                        }
                        collection = (0,jodit_core_helpers_utils_selector__WEBPACK_IMPORTED_MODULE_1__.$$)(rules[idx].selectorText, iframeDoc.body);
                        collection.forEach((elm) => {
                            elm.style.cssText = normalizeCSS(rules[idx].style.cssText +
                                ';' +
                                elm.style.cssText);
                        });
                    }
                }
            }
            catch (e) {
                if (!jodit_core_constants__WEBPACK_IMPORTED_MODULE_3__.IS_PROD) {
                    throw e;
                }
            }
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.each(iframeDoc.body, node => {
                if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isElement(node)) {
                    const elm = node;
                    const css = elm.getAttribute('style');
                    if (css) {
                        elm.style.cssText = normalizeCSS(css);
                    }
                    if (elm.hasAttribute('style') &&
                        !elm.getAttribute('style')) {
                        elm.removeAttribute('style');
                    }
                }
            });
            convertedString = iframeDoc.firstChild
                ? (0,jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_2__/* .trim */ .fy)(iframeDoc.body.innerHTML)
                : '';
        }
    }
    catch (_a) {
    }
    finally {
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(iframe);
    }
    if (convertedString) {
        html = convertedString;
    }
    return (0,jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_2__/* .trim */ .fy)(html
        .replace(/<(\/)?(html|colgroup|col|o:p)[^>]*>/g, '')
        .replace(/<!--[^>]*>/g, ''));
}


/***/ }),

/***/ 38334:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   p: function() { return /* binding */ cleanFromWord; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76562);
/* harmony import */ var jodit_core_helpers_array_to_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(24174);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/html
 */



/**
 * The method automatically cleans up content from Microsoft Word and other HTML sources to ensure clean, compliant
 * content that matches the look and feel of the site.
 */
function cleanFromWord(html) {
    if (html.indexOf('<html ') !== -1) {
        html = html.substring(html.indexOf('<html '), html.length);
        html = html.substring(0, html.lastIndexOf('</html>') + '</html>'.length);
    }
    let convertedString = '';
    try {
        const div = document.createElement('div');
        div.innerHTML = html;
        const marks = [];
        if (div.firstChild) {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.each(div, node => {
                if (!node) {
                    return;
                }
                switch (node.nodeType) {
                    case Node.ELEMENT_NODE:
                        switch (node.nodeName) {
                            case 'STYLE':
                            case 'LINK':
                            case 'META':
                                marks.push(node);
                                break;
                            case 'W:SDT':
                            case 'W:SDTPR':
                            case 'FONT':
                                jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.unwrap(node);
                                break;
                            default:
                                (0,jodit_core_helpers_array_to_array__WEBPACK_IMPORTED_MODULE_2__/* .toArray */ .q)(node.attributes).forEach((attr) => {
                                    if ([
                                        'src',
                                        'href',
                                        'rel',
                                        'content'
                                    ].indexOf(attr.name.toLowerCase()) === -1) {
                                        node.removeAttribute(attr.name);
                                    }
                                });
                        }
                        break;
                    case Node.TEXT_NODE:
                        break;
                    default:
                        marks.push(node);
                }
            });
        }
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove.apply(null, marks);
        convertedString = div.innerHTML;
    }
    catch (e) { }
    if (convertedString) {
        html = convertedString;
    }
    html = html.split(/(\n)/).filter(jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_1__/* .trim */ .fy).join('\n');
    return html
        .replace(/<(\/)?(html|colgroup|col|o:p)[^>]*>/g, '')
        .replace(/<!--[^>]*>/g, '');
}


/***/ }),

/***/ 52186:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $: function() { return /* binding */ htmlspecialchars; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/html
 */
/**
 * Convert special characters to HTML entities
 */
function htmlspecialchars(html) {
    const tmp = document.createElement('div');
    tmp.textContent = html;
    return tmp.innerHTML;
}


/***/ }),

/***/ 83814:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $_: function() { return /* reexport safe */ _htmlspecialchars__WEBPACK_IMPORTED_MODULE_2__.$; },
/* harmony export */   Zs: function() { return /* reexport safe */ _apply_styles__WEBPACK_IMPORTED_MODULE_0__.Z; },
/* harmony export */   eV: function() { return /* reexport safe */ _safe_html__WEBPACK_IMPORTED_MODULE_4__.e; },
/* harmony export */   hU: function() { return /* reexport safe */ _nl2br__WEBPACK_IMPORTED_MODULE_5__.h; },
/* harmony export */   nA: function() { return /* reexport safe */ _safe_html__WEBPACK_IMPORTED_MODULE_4__.n; },
/* harmony export */   oN: function() { return /* reexport safe */ _strip_tags__WEBPACK_IMPORTED_MODULE_3__.o; },
/* harmony export */   pQ: function() { return /* reexport safe */ _clean_from_word__WEBPACK_IMPORTED_MODULE_1__.p; }
/* harmony export */ });
/* harmony import */ var _apply_styles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37639);
/* harmony import */ var _clean_from_word__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(38334);
/* harmony import */ var _htmlspecialchars__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(52186);
/* harmony import */ var _strip_tags__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(44058);
/* harmony import */ var _safe_html__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(45838);
/* harmony import */ var _nl2br__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(94901);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/html
 */








/***/ }),

/***/ 94901:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   h: function() { return /* binding */ nl2br; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/html
 */
/**
 *  Inserts HTML line breaks before all newlines in a string
 */
function nl2br(html) {
    return html.replace(/\r\n|\r|\n/g, '<br/>');
}


/***/ }),

/***/ 45838:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   e: function() { return /* binding */ safeHTML; },
/* harmony export */   n: function() { return /* binding */ sanitizeHTMLElement; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(86284);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9162);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/html
 */


/**
 * Removes dangerous constructs from HTML
 */
function safeHTML(box, options) {
    if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isElement(box) && !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isFragment(box)) {
        return;
    }
    if (options.removeOnError) {
        sanitizeHTMLElement(box);
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_0__.$$)('[onerror]', box).forEach(elm => sanitizeHTMLElement(elm, options));
    }
    if (options.safeJavaScriptLink) {
        sanitizeHTMLElement(box);
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_0__.$$)('a[href^="javascript"]', box).forEach(elm => sanitizeHTMLElement(elm, options));
    }
}
function sanitizeHTMLElement(elm, { safeJavaScriptLink, removeOnError } = {
    safeJavaScriptLink: true,
    removeOnError: true
}) {
    if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isElement(elm)) {
        return false;
    }
    let effected = false;
    if (removeOnError && elm.hasAttribute('onerror')) {
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_0__.attr)(elm, 'onerror', null);
        effected = true;
    }
    const href = elm.getAttribute('href');
    if (safeJavaScriptLink && href && href.trim().indexOf('javascript') === 0) {
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_0__.attr)(elm, 'href', location.protocol + '//' + href);
        effected = true;
    }
    return effected;
}


/***/ }),

/***/ 44058:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   o: function() { return /* binding */ stripTags; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2926);
/* harmony import */ var jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(86284);
/* harmony import */ var jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76562);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9162);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




const NEW_LINE_TAGS = new Set([
    'div',
    'p',
    'br',
    'h1',
    'h2',
    'h3',
    'h4',
    'h5',
    'h6',
    'hr'
]);
const INVISIBLE_TAGS = new Set(['script', 'style']);
const ALONE_TAGS = new Set(['br', 'hr', 'input']);
/**
 * Extract plain text from HTML text
 */
function stripTags(html, doc = document, exclude = null) {
    const tmp = doc.createElement('div');
    if ((0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_3__/* .isString */ .H)(html)) {
        tmp.innerHTML = html;
    }
    else {
        tmp.appendChild(html);
    }
    (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_0__.$$)('*', tmp).forEach(p => {
        const pr = p.parentNode;
        if (!pr) {
            return;
        }
        if (exclude && jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isTag(p, exclude)) {
            const tag = p.nodeName.toLowerCase();
            const text = !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isTag(p, ALONE_TAGS)
                ? `%%%jodit-${tag}%%%${stripTags(p.innerHTML, doc, exclude)}%%%/jodit-${tag}%%%`
                : `%%%jodit-single-${tag}%%%`;
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.before(p, doc.createTextNode(text));
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.safeRemove(p);
            return;
        }
        if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isTag(p, INVISIBLE_TAGS)) {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.safeRemove(p);
            return;
        }
        if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isTag(p, NEW_LINE_TAGS)) {
            return;
        }
        const nx = p.nextSibling;
        if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isText(nx) && /^\s/.test(nx.nodeValue || '')) {
            return;
        }
        if (nx) {
            pr.insertBefore(doc.createTextNode(' '), nx);
        }
    });
    return restoreTags((0,jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_1__/* .trim */ .fy)(tmp.innerText));
}
function restoreTags(content) {
    return content.replace(/%%%(\/)?jodit(-single)?-([\w\n]+)%%%/g, (_, isClosed, isSingle, tag) => `<${isClosed ? '/' : ''}${tag}>`);
}


/***/ }),

/***/ 76974:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CamelCaseToKebabCase: function() { return /* reexport safe */ _string__WEBPACK_IMPORTED_MODULE_8__.gP; },
/* harmony export */   NUMBER_FIELDS_REG: function() { return /* reexport safe */ _normalize__WEBPACK_IMPORTED_MODULE_6__.DO; },
/* harmony export */   applyStyles: function() { return /* reexport safe */ _html__WEBPACK_IMPORTED_MODULE_5__.Zs; },
/* harmony export */   asArray: function() { return /* reexport safe */ _array__WEBPACK_IMPORTED_MODULE_1__._2; },
/* harmony export */   camelCase: function() { return /* reexport safe */ _string__WEBPACK_IMPORTED_MODULE_8__.eV; },
/* harmony export */   cleanFromWord: function() { return /* reexport safe */ _html__WEBPACK_IMPORTED_MODULE_5__.pQ; },
/* harmony export */   clearTimeout: function() { return /* reexport safe */ _async__WEBPACK_IMPORTED_MODULE_2__.g; },
/* harmony export */   colorToHex: function() { return /* reexport safe */ _color__WEBPACK_IMPORTED_MODULE_4__.h; },
/* harmony export */   fuzzySearchIndex: function() { return /* reexport safe */ _string__WEBPACK_IMPORTED_MODULE_8__.Qy; },
/* harmony export */   getContentWidth: function() { return /* reexport safe */ _size__WEBPACK_IMPORTED_MODULE_7__.FK; },
/* harmony export */   getScrollParent: function() { return /* reexport safe */ _size__WEBPACK_IMPORTED_MODULE_7__.rP; },
/* harmony export */   hasBrowserColorPicker: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.EO; },
/* harmony export */   hasContainer: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.Zt; },
/* harmony export */   htmlspecialchars: function() { return /* reexport safe */ _html__WEBPACK_IMPORTED_MODULE_5__.$_; },
/* harmony export */   i18n: function() { return /* reexport safe */ _string__WEBPACK_IMPORTED_MODULE_8__.ag; },
/* harmony export */   innerWidth: function() { return /* reexport safe */ _size__WEBPACK_IMPORTED_MODULE_7__.x9; },
/* harmony export */   isArray: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.kJ; },
/* harmony export */   isBoolean: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.jn; },
/* harmony export */   isDestructable: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.Z$; },
/* harmony export */   isEqual: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.Xy; },
/* harmony export */   isFastEqual: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.LP; },
/* harmony export */   isFunction: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.mf; },
/* harmony export */   isHTML: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.FP; },
/* harmony export */   isHtmlFromWord: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.I4; },
/* harmony export */   isInitable: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.Gu; },
/* harmony export */   isInt: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.GN; },
/* harmony export */   isJoditObject: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.Zu; },
/* harmony export */   isLicense: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.A1; },
/* harmony export */   isMarker: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__._V; },
/* harmony export */   isNativeFunction: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.QC; },
/* harmony export */   isNumber: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.hj; },
/* harmony export */   isNumeric: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.kE; },
/* harmony export */   isPlainObject: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.PO; },
/* harmony export */   isPromise: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.tI; },
/* harmony export */   isSet: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.DM; },
/* harmony export */   isString: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.HD; },
/* harmony export */   isStringArray: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.GI; },
/* harmony export */   isURL: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.PX; },
/* harmony export */   isValidName: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.r1; },
/* harmony export */   isViewObject: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.f2; },
/* harmony export */   isVoid: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.nj; },
/* harmony export */   isWindow: function() { return /* reexport safe */ _checker__WEBPACK_IMPORTED_MODULE_3__.FJ; },
/* harmony export */   kebabCase: function() { return /* reexport safe */ _string__WEBPACK_IMPORTED_MODULE_8__.GL; },
/* harmony export */   nl2br: function() { return /* reexport safe */ _html__WEBPACK_IMPORTED_MODULE_5__.hU; },
/* harmony export */   normalizeColor: function() { return /* reexport safe */ _normalize__WEBPACK_IMPORTED_MODULE_6__.ut; },
/* harmony export */   normalizeCssNumericValue: function() { return /* reexport safe */ _normalize__WEBPACK_IMPORTED_MODULE_6__.xI; },
/* harmony export */   normalizeCssValue: function() { return /* reexport safe */ _normalize__WEBPACK_IMPORTED_MODULE_6__.Zh; },
/* harmony export */   normalizeKeyAliases: function() { return /* reexport safe */ _normalize__WEBPACK_IMPORTED_MODULE_6__.T2; },
/* harmony export */   normalizeLicense: function() { return /* reexport safe */ _normalize__WEBPACK_IMPORTED_MODULE_6__.Pd; },
/* harmony export */   normalizePath: function() { return /* reexport safe */ _normalize__WEBPACK_IMPORTED_MODULE_6__.AH; },
/* harmony export */   normalizeRelativePath: function() { return /* reexport safe */ _normalize__WEBPACK_IMPORTED_MODULE_6__.Jf; },
/* harmony export */   normalizeSize: function() { return /* reexport safe */ _normalize__WEBPACK_IMPORTED_MODULE_6__.aC; },
/* harmony export */   normalizeUrl: function() { return /* reexport safe */ _normalize__WEBPACK_IMPORTED_MODULE_6__.D5; },
/* harmony export */   offset: function() { return /* reexport safe */ _size__WEBPACK_IMPORTED_MODULE_7__.cv; },
/* harmony export */   position: function() { return /* reexport safe */ _size__WEBPACK_IMPORTED_MODULE_7__.eL; },
/* harmony export */   safeHTML: function() { return /* reexport safe */ _html__WEBPACK_IMPORTED_MODULE_5__.eV; },
/* harmony export */   sanitizeHTMLElement: function() { return /* reexport safe */ _html__WEBPACK_IMPORTED_MODULE_5__.nA; },
/* harmony export */   setTimeout: function() { return /* reexport safe */ _async__WEBPACK_IMPORTED_MODULE_2__.i; },
/* harmony export */   size: function() { return /* reexport safe */ _size__WEBPACK_IMPORTED_MODULE_7__.dp; },
/* harmony export */   splitArray: function() { return /* reexport safe */ _array__WEBPACK_IMPORTED_MODULE_1__.C1; },
/* harmony export */   sprintf: function() { return /* reexport safe */ _string__WEBPACK_IMPORTED_MODULE_8__.gB; },
/* harmony export */   stringify: function() { return /* reexport safe */ _string__WEBPACK_IMPORTED_MODULE_8__.Pz; },
/* harmony export */   stripTags: function() { return /* reexport safe */ _html__WEBPACK_IMPORTED_MODULE_5__.oN; },
/* harmony export */   toArray: function() { return /* reexport safe */ _array__WEBPACK_IMPORTED_MODULE_1__.qo; },
/* harmony export */   trim: function() { return /* reexport safe */ _string__WEBPACK_IMPORTED_MODULE_8__.fy; },
/* harmony export */   trimChars: function() { return /* reexport safe */ _string__WEBPACK_IMPORTED_MODULE_8__.cE; },
/* harmony export */   trimInv: function() { return /* reexport safe */ _string__WEBPACK_IMPORTED_MODULE_8__.as; },
/* harmony export */   ucfirst: function() { return /* reexport safe */ _string__WEBPACK_IMPORTED_MODULE_8__.Ps; }
/* harmony export */ });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(86284);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _utils__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== "default") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _utils__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8131);
/* harmony import */ var _async__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(16684);
/* harmony import */ var _checker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(78157);
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(68806);
/* harmony import */ var _html__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(83814);
/* harmony import */ var _normalize__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(12368);
/* harmony import */ var _size__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(19475);
/* harmony import */ var _string__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(13104);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * [[include:core/helpers/README.md]]
 * @packageDocumentation
 * @module helpers
 */











/***/ }),

/***/ 12368:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AH: function() { return /* reexport safe */ _normalize_path__WEBPACK_IMPORTED_MODULE_2__.A; },
/* harmony export */   D5: function() { return /* reexport safe */ _normalize_url__WEBPACK_IMPORTED_MODULE_5__.D; },
/* harmony export */   DO: function() { return /* reexport safe */ _normalize_css_value__WEBPACK_IMPORTED_MODULE_6__.DO; },
/* harmony export */   Jf: function() { return /* reexport safe */ _normalize_relative_path__WEBPACK_IMPORTED_MODULE_3__.J; },
/* harmony export */   Pd: function() { return /* reexport safe */ _normalize_license__WEBPACK_IMPORTED_MODULE_1__.P; },
/* harmony export */   T2: function() { return /* reexport safe */ _normalize_key_aliases__WEBPACK_IMPORTED_MODULE_0__.T; },
/* harmony export */   Zh: function() { return /* reexport safe */ _normalize_css_value__WEBPACK_IMPORTED_MODULE_6__.Zh; },
/* harmony export */   aC: function() { return /* reexport safe */ _normalize_size__WEBPACK_IMPORTED_MODULE_4__.a; },
/* harmony export */   ut: function() { return /* reexport safe */ _normalize_color__WEBPACK_IMPORTED_MODULE_7__.u; },
/* harmony export */   xI: function() { return /* reexport safe */ _normalize_css_value__WEBPACK_IMPORTED_MODULE_6__.xI; }
/* harmony export */ });
/* harmony import */ var _normalize_key_aliases__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(64254);
/* harmony import */ var _normalize_license__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(34104);
/* harmony import */ var _normalize_path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3340);
/* harmony import */ var _normalize_relative_path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(64967);
/* harmony import */ var _normalize_size__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(55837);
/* harmony import */ var _normalize_url__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(60743);
/* harmony import */ var _normalize_css_value__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(21642);
/* harmony import */ var _normalize_color__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(14618);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/normalize
 */










/***/ }),

/***/ 14618:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   u: function() { return /* binding */ normalizeColor; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_color_color_to_hex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(34781);
/* harmony import */ var jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76562);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/normalize
 */


/**
 * Convert rgba and short HEX color to Full text color. #fff to #FFFFFF
 *
 * @param colorInput - string like rgba(red, green, blue, alpha) or rgb(red, green, blue) or #fff or #ffffff
 * @returns HEX color, false - for transparent color
 */
const normalizeColor = (colorInput) => {
    const newcolor = ['#'];
    let color = (0,jodit_core_helpers_color_color_to_hex__WEBPACK_IMPORTED_MODULE_1__/* .colorToHex */ .h)(colorInput);
    if (!color) {
        return false;
    }
    color = (0,jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_0__/* .trim */ .fy)(color.toUpperCase());
    color = color.substring(1);
    if (color.length === 3) {
        for (let i = 0; i < 3; i += 1) {
            newcolor.push(color[i]);
            newcolor.push(color[i]);
        }
        return newcolor.join('');
    }
    if (color.length > 6) {
        color = color.slice(0, 6);
    }
    return '#' + color;
};


/***/ }),

/***/ 21642:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DO: function() { return /* binding */ NUMBER_FIELDS_REG; },
/* harmony export */   Zh: function() { return /* binding */ normalizeCssValue; },
/* harmony export */   xI: function() { return /* binding */ normalizeCssNumericValue; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_numeric__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(57947);
/* harmony import */ var jodit_core_helpers_string_kebab_case__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(13929);
/* harmony import */ var jodit_core_helpers_color_color_to_hex__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(34781);
/* harmony import */ var jodit_core_helpers_checker_is_void__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(41240);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/normalize
 */




const NUMBER_FIELDS_REG = /^(left|top|bottom|right|width|min|max|height|margin|padding|fontsize|font-size)/i;
function normalizeCssNumericValue(key, value) {
    if (!(0,jodit_core_helpers_checker_is_void__WEBPACK_IMPORTED_MODULE_0__/* .isVoid */ .n)(value) &&
        NUMBER_FIELDS_REG.test(key) &&
        (0,jodit_core_helpers_checker_is_numeric__WEBPACK_IMPORTED_MODULE_1__/* .isNumeric */ .k)(value.toString())) {
        return parseInt(value.toString(), 10) + 'px';
    }
    return value;
}
function normalizeCssValue(key, value) {
    switch ((0,jodit_core_helpers_string_kebab_case__WEBPACK_IMPORTED_MODULE_2__/* .kebabCase */ .G)(key)) {
        case 'font-weight':
            switch (value.toString().toLowerCase()) {
                case '700':
                case 'bold':
                    return 700;
                case '400':
                case 'normal':
                    return 400;
                case '900':
                case 'heavy':
                    return 900;
            }
            return (0,jodit_core_helpers_checker_is_numeric__WEBPACK_IMPORTED_MODULE_1__/* .isNumeric */ .k)(value) ? Number(value) : value;
    }
    if (/color/i.test(key) && /^rgb/i.test(value.toString())) {
        return (0,jodit_core_helpers_color_color_to_hex__WEBPACK_IMPORTED_MODULE_3__/* .colorToHex */ .h)(value.toString()) || value;
    }
    return value;
}


/***/ }),

/***/ 64254:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   T: function() { return /* binding */ normalizeKeyAliases; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76562);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62924);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/**
 * Normalize keys to some standard name
 */
function normalizeKeyAliases(keys) {
    const memory = {};
    const order = {
        meta: 1,
        ctrl: 2,
        control: 2,
        alt: 3,
        shift: 4
    };
    return keys
        .replace(/\+\+/g, '+add')
        .split(/[\s]*\+[\s]*/)
        .map(key => (0,jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_0__/* .trim */ .fy)(key.toLowerCase()))
        .map(key => jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.KEY_ALIASES[key] || key)
        .sort((a, b) => {
        if (order[a] && !order[b]) {
            return -1;
        }
        if (!order[a] && order[b]) {
            return 1;
        }
        if (order[a] && order[b]) {
            return order[a] - order[b];
        }
        return a > b ? 1 : -1;
    })
        .filter(key => !memory[key] && key !== '' && (memory[key] = true))
        .join('+');
}


/***/ }),

/***/ 34104:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   P: function() { return /* binding */ normalizeLicense; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/normalize
 */
const normalizeLicense = (license, count = 8) => {
    const parts = [];
    while (license.length) {
        parts.push(license.substr(0, count));
        license = license.substr(count);
    }
    parts[1] = parts[1].replace(/./g, '*');
    parts[2] = parts[2].replace(/./g, '*');
    return parts.join('-');
};


/***/ }),

/***/ 3340:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: function() { return /* binding */ normalizePath; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76562);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/normalize
 */

/**
 * Replaces back slashes and correctly concatenates several parts of the path.
 */
const normalizePath = (...path) => {
    return path
        .filter(part => (0,jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_0__/* .trim */ .fy)(part).length)
        .map((part, index) => {
        part = part.replace(/([^:])[\\/]+/g, '$1/');
        if (index) {
            part = part.replace(/^\//, '');
        }
        if (index !== path.length - 1) {
            part = part.replace(/\/$/, '');
        }
        return part;
    })
        .join('/');
};


/***/ }),

/***/ 64967:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   J: function() { return /* binding */ normalizeRelativePath; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/normalize
 */
const normalizeRelativePath = (path) => {
    const sections = path.split('/'), builder = sections.reduce((builder, section) => {
        switch (section) {
            case '': {
                break;
            }
            case '.': {
                break;
            }
            case '..': {
                builder.pop();
                break;
            }
            default: {
                builder.push(section);
                break;
            }
        }
        return builder;
    }, []);
    return builder.join('/') + (path.endsWith('/') ? '/' : '');
};


/***/ }),

/***/ 55837:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: function() { return /* binding */ normalizeSize; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/normalize
 */
/**
 * Normalize value to CSS meters
 */
const normalizeSize = (value, units) => {
    if (/^[0-9]+$/.test(value.toString())) {
        return value + units;
    }
    return value.toString();
};


/***/ }),

/***/ 60743:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   D: function() { return /* binding */ normalizeUrl; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/normalize
 */
const normalizeUrl = (...urls) => {
    return urls
        .filter(url => url.length)
        .map(url => url.replace(/\/$/, ''))
        .join('/')
        .replace(/([^:])[\\/]+/g, '$1/');
};


/***/ }),

/***/ 95935:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   F: function() { return /* binding */ getContentWidth; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/size
 */
const getContentWidth = (element, win) => {
    const pi = (value) => parseInt(value, 10), style = win.getComputedStyle(element), width = element.offsetWidth, paddingLeft = pi(style.getPropertyValue('padding-left') || '0'), paddingRight = pi(style.getPropertyValue('padding-right') || '0');
    return width - paddingLeft - paddingRight;
};


/***/ }),

/***/ 89222:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   r: function() { return /* binding */ getScrollParent; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(86284);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9162);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


function getScrollParent(node) {
    if (!node) {
        return null;
    }
    const isElement = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isHTMLElement(node);
    const overflowY = isElement && (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_0__.css)(node, 'overflowY');
    const isScrollable = isElement && overflowY !== 'visible' && overflowY !== 'hidden';
    if (isScrollable && node.scrollHeight >= node.clientHeight) {
        return node;
    }
    return (getScrollParent(node.parentNode) ||
        document.scrollingElement ||
        document.body);
}


/***/ }),

/***/ 19475:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FK: function() { return /* reexport safe */ _get_content_width__WEBPACK_IMPORTED_MODULE_0__.F; },
/* harmony export */   cv: function() { return /* reexport safe */ _offset__WEBPACK_IMPORTED_MODULE_3__.c; },
/* harmony export */   dp: function() { return /* reexport safe */ _object_size__WEBPACK_IMPORTED_MODULE_5__.d; },
/* harmony export */   eL: function() { return /* reexport safe */ _position__WEBPACK_IMPORTED_MODULE_4__.F; },
/* harmony export */   rP: function() { return /* reexport safe */ _get_scroll_parent__WEBPACK_IMPORTED_MODULE_1__.r; },
/* harmony export */   x9: function() { return /* reexport safe */ _inner_width__WEBPACK_IMPORTED_MODULE_2__.x; }
/* harmony export */ });
/* harmony import */ var _get_content_width__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(95935);
/* harmony import */ var _get_scroll_parent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(89222);
/* harmony import */ var _inner_width__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20818);
/* harmony import */ var _offset__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(65643);
/* harmony import */ var _position__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(31080);
/* harmony import */ var _object_size__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(31982);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/size
 */








/***/ }),

/***/ 20818:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   x: function() { return /* binding */ innerWidth; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/size
 */
const innerWidth = (element, win) => {
    const computedStyle = win.getComputedStyle(element);
    let elementWidth = element.clientWidth; // width with padding
    elementWidth -=
        parseFloat(computedStyle.paddingLeft || '0') +
            parseFloat(computedStyle.paddingRight || '0');
    return elementWidth;
};


/***/ }),

/***/ 31982:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   d: function() { return /* binding */ size; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(78157);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

function size(subject) {
    if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isString */ .HD)(subject) || (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isArray */ .kJ)(subject)) {
        return subject.length;
    }
    if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isPlainObject */ .PO)(subject)) {
        return Object.keys(subject).length;
    }
    return 0;
}


/***/ }),

/***/ 65643:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c: function() { return /* binding */ offset; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
const offset = (elm, jodit, doc, recurse = false) => {
    let rect;
    try {
        rect = elm.getBoundingClientRect();
    }
    catch (e) {
        rect = {
            top: 0,
            bottom: 0,
            left: 0,
            right: 0,
            width: 0,
            height: 0
        };
    }
    const body = doc.body, docElem = doc.documentElement || {
        clientTop: 0,
        clientLeft: 0,
        scrollTop: 0,
        scrollLeft: 0
    }, win = doc.defaultView || doc.parentWindow, scrollTop = win.pageYOffset || docElem.scrollTop || body.scrollTop, scrollLeft = win.pageXOffset || docElem.scrollLeft || body.scrollLeft, clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0;
    let topValue, leftValue;
    const iframe = jodit.iframe;
    if (!recurse && jodit && jodit.options && jodit.o.iframe && iframe) {
        const { top, left } = offset(iframe, jodit, jodit.od, true);
        topValue = rect.top + top;
        leftValue = rect.left + left;
    }
    else {
        topValue = rect.top + scrollTop - clientTop;
        leftValue = rect.left + scrollLeft - clientLeft;
    }
    return {
        top: Math.round(topValue),
        left: Math.round(leftValue),
        width: rect.width,
        height: rect.height
    };
};


/***/ }),

/***/ 31080:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   F: function() { return /* binding */ position; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_jodit_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8133);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * Calculate screen element position
 */
function position(elm, jodit, recurse = false) {
    const rect = elm.getBoundingClientRect();
    let xPos = rect.left, yPos = rect.top;
    if ((0,jodit_core_helpers_checker_is_jodit_object__WEBPACK_IMPORTED_MODULE_0__/* .isJoditObject */ .Z)(jodit) &&
        jodit.iframe &&
        jodit.ed.body.contains(elm) &&
        !recurse) {
        const { left, top } = position(jodit.iframe, jodit, true);
        xPos += left;
        yPos += top;
    }
    return {
        left: Math.round(xPos),
        top: Math.round(yPos),
        width: Math.round(elm.offsetWidth),
        height: Math.round(elm.offsetHeight)
    };
}


/***/ }),

/***/ 33683:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   e: function() { return /* binding */ camelCase; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/string
 */
/**
 * Convert (kebab-case or snake_case) to camelCase
 */
const camelCase = (key) => {
    return key.replace(/([-_])(.)/g, (m, code, letter) => {
        return letter.toUpperCase();
    });
};


/***/ }),

/***/ 29133:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Q: function() { return /* binding */ fuzzySearchIndex; }
/* harmony export */ });
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62924);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/string
 */

/**
 * Finds the position of the substring in the string, if any, and returns the length of the found subsequence.
 * Unlike `indexOf` ignores INVISIBLE_SPACE and may fail at `maxDistance` characters
 */
function fuzzySearchIndex(needle, haystack, offset = 0, maxDistance = 1) {
    let i = 0, j = 0, startIndex = -1, len = 0, errorDistance = 0;
    for (j = offset; i < needle.length && j < haystack.length;) {
        if (needle[i].toLowerCase() === haystack[j].toLowerCase()) {
            i++;
            len++;
            errorDistance = 0;
            if (startIndex === -1) {
                startIndex = j;
            }
        }
        else if (i > 0) {
            if (errorDistance >= maxDistance &&
                haystack[j] !== jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.INVISIBLE_SPACE) {
                i = 0;
                startIndex = -1;
                len = 0;
                errorDistance = 0;
                j--;
            }
            else {
                errorDistance++;
                len++;
            }
        }
        j++;
    }
    return i === needle.length ? [startIndex, len] : [-1, 0];
}


/***/ }),

/***/ 68484:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: function() { return /* binding */ i18n; },
/* harmony export */   g: function() { return /* binding */ sprintf; }
/* harmony export */ });
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(86284);
/* harmony import */ var jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2926);
/* harmony import */ var jodit_core_helpers_string_ucfirst__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2343);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62924);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */





/**
 * Simple variant sprintf function
 */
const sprintf = (str, args) => {
    if (!args || !args.length) {
        return str;
    }
    const reg = /%([sd])/g;
    let fnd = reg.exec(str);
    let res = str, i = 0;
    while (fnd && args[i] !== undefined) {
        res = res.replace(fnd[0], args[i].toString());
        i += 1;
        fnd = reg.exec(str);
    }
    return res;
};
/**
 * Internationalization method. Uses Jodit.lang object
 * @example
 * ```javascript
 * var editor = Jodit.make("#redactor", {
 *      language: 'ru'
 * });
 * console.log(editor.i18n('Cancel')) //Отмена;
 *
 * Jodit.defaultOptions.language = 'ru';
 * console.log(Jodit.prototype.i18n('Cancel')) //Отмена
 *
 * Jodit.lang.cs = {
 *    Cancel: 'Zrušit'
 * };
 * Jodit.defaultOptions.language = 'cs';
 * console.log(Jodit.prototype.i18n('Cancel')) //Zrušit
 *
 * Jodit.lang.cs = {
 *    'Hello world': 'Hello \s Good \s'
 * };
 * Jodit.defaultOptions.language = 'cs';
 * console.log(Jodit.prototype.i18n('Hello world', 'mr.Perkins', 'day')) //Hello mr.Perkins Good day
 * ```
 */
function i18n(key, params, options) {
    if (!(0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_3__/* .isString */ .H)(key)) {
        throw (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.error)('i18n: Need string in first argument');
    }
    if (!key.length) {
        return key;
    }
    const debug = Boolean(options === null || options === void 0 ? void 0 : options.debugLanguage);
    let store = {};
    const parse = (value) => params && params.length ? sprintf(value, params) : value, defaultLanguage = (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.defaultLanguage)(jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.defaultOptions.language, jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.defaultOptions.language), language = (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.defaultLanguage)(options === null || options === void 0 ? void 0 : options.language, defaultLanguage), tryGet = (store) => {
        if (!store) {
            return;
        }
        if ((0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_3__/* .isString */ .H)(store[key])) {
            return parse(store[key]);
        }
        const lcKey = key.toLowerCase();
        if ((0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_3__/* .isString */ .H)(store[lcKey])) {
            return parse(store[lcKey]);
        }
        const ucfKey = (0,jodit_core_helpers_string_ucfirst__WEBPACK_IMPORTED_MODULE_4__/* .ucfirst */ .P)(key);
        if ((0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_3__/* .isString */ .H)(store[ucfKey])) {
            return parse(store[ucfKey]);
        }
        return;
    };
    if (jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.lang[language] !== undefined) {
        store = jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.lang[language];
    }
    else if (!debug) {
        if (jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.lang[defaultLanguage] !== undefined) {
            store = jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.lang[defaultLanguage];
        }
        else {
            store = jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.lang.en;
        }
    }
    const i18nOvr = options === null || options === void 0 ? void 0 : options.i18n;
    if (i18nOvr && i18nOvr[language]) {
        const result = tryGet(i18nOvr[language]);
        if (result) {
            return result;
        }
    }
    const result = tryGet(store);
    if (result) {
        return result;
    }
    if (!debug && jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.lang.en && (0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_3__/* .isString */ .H)(jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.lang.en[key]) && jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.lang.en[key]) {
        return parse(jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.lang.en[key]);
    }
    if (debug) {
        return '{' + key + '}';
    }
    if (!jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.IS_PROD && language !== 'en') {
        console.warn(`i18n need "${key}" in "${language}"`);
    }
    return parse(key);
}


/***/ }),

/***/ 13104:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GL: function() { return /* reexport safe */ _kebab_case__WEBPACK_IMPORTED_MODULE_3__.G; },
/* harmony export */   Ps: function() { return /* reexport safe */ _ucfirst__WEBPACK_IMPORTED_MODULE_6__.P; },
/* harmony export */   Pz: function() { return /* reexport safe */ _stringify__WEBPACK_IMPORTED_MODULE_4__.P; },
/* harmony export */   Qy: function() { return /* reexport safe */ _fuzzy_search_index__WEBPACK_IMPORTED_MODULE_1__.Q; },
/* harmony export */   ag: function() { return /* reexport safe */ _i18n__WEBPACK_IMPORTED_MODULE_2__.a; },
/* harmony export */   as: function() { return /* reexport safe */ _trim__WEBPACK_IMPORTED_MODULE_5__.as; },
/* harmony export */   cE: function() { return /* reexport safe */ _trim__WEBPACK_IMPORTED_MODULE_5__.cE; },
/* harmony export */   eV: function() { return /* reexport safe */ _camel_case__WEBPACK_IMPORTED_MODULE_0__.e; },
/* harmony export */   fy: function() { return /* reexport safe */ _trim__WEBPACK_IMPORTED_MODULE_5__.fy; },
/* harmony export */   gB: function() { return /* reexport safe */ _i18n__WEBPACK_IMPORTED_MODULE_2__.g; },
/* harmony export */   gP: function() { return /* reexport safe */ _kebab_case__WEBPACK_IMPORTED_MODULE_3__.g; }
/* harmony export */ });
/* harmony import */ var _camel_case__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(33683);
/* harmony import */ var _fuzzy_search_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29133);
/* harmony import */ var _i18n__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(68484);
/* harmony import */ var _kebab_case__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(13929);
/* harmony import */ var _stringify__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(12582);
/* harmony import */ var _trim__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(76562);
/* harmony import */ var _ucfirst__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(2343);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/string
 */









/***/ }),

/***/ 13929:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   G: function() { return /* binding */ kebabCase; },
/* harmony export */   g: function() { return /* binding */ CamelCaseToKebabCase; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/string
 */
const kebabCase = (key) => {
    return key
        .replace(/([A-Z])([A-Z])([a-z])/g, '$1-$2$3')
        .replace(/([a-z])([A-Z])/g, '$1-$2')
        .replace(/[\s_]+/g, '-')
        .toLowerCase();
};
const CamelCaseToKebabCase = (key) => {
    return key
        .replace(/([A-Z])([A-Z])([a-z])/g, '$1-$2$3')
        .replace(/([a-z])([A-Z])/g, '$1-$2')
        .toLowerCase();
};


/***/ }),

/***/ 12582:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   P: function() { return /* binding */ stringify; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * Safe stringify circular object
 */
function stringify(value, options = {}) {
    if (typeof value !== 'object') {
        return String(value);
    }
    const excludeKeys = new Set(options.excludeKeys);
    const map = new WeakMap();
    const r = (k, v) => {
        if (excludeKeys.has(k)) {
            return;
        }
        if (typeof v === 'object' && v != null) {
            if (map.get(v)) {
                return '[refObject]';
            }
            map.set(v, true);
        }
        return v;
    };
    return JSON.stringify(value, r, options.prettify);
}


/***/ }),

/***/ 76562:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   as: function() { return /* binding */ trimInv; },
/* harmony export */   cE: function() { return /* binding */ trimChars; },
/* harmony export */   fy: function() { return /* binding */ trim; }
/* harmony export */ });
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62924);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/string
 */

/**
 * It clears the line of all auxiliary invisible characters , from the spaces and line breaks , tabs
 * from the beginning and end of the line
 */
function trim(value) {
    return value
        .replace((0,jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.SPACE_REG_EXP_END)(), '')
        .replace((0,jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.SPACE_REG_EXP_START)(), '');
}
function trimChars(value, chars) {
    return value
        .replace(RegExp(`[${chars}]+$`), '')
        .replace(RegExp(`^[${chars}]+`), '');
}
/**
 * Trim only invisible chars
 */
function trimInv(value) {
    return value
        .replace((0,jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.INVISIBLE_SPACE_REG_EXP_END)(), '')
        .replace((0,jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.INVISIBLE_SPACE_REG_EXP_START)(), '');
}


/***/ }),

/***/ 2343:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   P: function() { return /* binding */ ucfirst; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/string
 */
/**
 * Make a string's first character uppercase
 */
function ucfirst(value) {
    if (!value.length) {
        return '';
    }
    return value[0].toUpperCase() + value.substring(1);
}


/***/ }),

/***/ 13931:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   E3: function() { return /* binding */ alignElement; },
/* harmony export */   wL: function() { return /* binding */ clearAlign; },
/* harmony export */   zC: function() { return /* binding */ hAlignElement; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(71737);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/**
 * Align image
 */
function hAlignElement(image, align) {
    if (align && align !== 'normal') {
        if (align !== 'center') {
            (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_1__/* .css */ .i)(image, 'float', align);
            (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_1__/* .clearCenterAlign */ .b)(image);
        }
        else {
            (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_1__/* .css */ .i)(image, {
                float: '',
                display: 'block',
                marginLeft: 'auto',
                marginRight: 'auto'
            });
        }
    }
    else {
        if ((0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_1__/* .css */ .i)(image, 'float') &&
            ['right', 'left'].indexOf((0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_1__/* .css */ .i)(image, 'float').toString().toLowerCase()) !== -1) {
            (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_1__/* .css */ .i)(image, 'float', '');
        }
        (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_1__/* .clearCenterAlign */ .b)(image);
    }
}
/**
 * Remove text-align style for all selected children
 */
function clearAlign(node) {
    jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.each(node, elm => {
        if (jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isHTMLElement(elm)) {
            if (elm.style.textAlign) {
                elm.style.textAlign = '';
                if (!elm.style.cssText.trim().length) {
                    elm.removeAttribute('style');
                }
            }
        }
    });
}
/**
 * Apply align for element
 */
function alignElement(command, box) {
    if (jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isNode(box) && jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isElement(box)) {
        clearAlign(box);
        switch (command.toLowerCase()) {
            case 'justifyfull':
                box.style.textAlign = 'justify';
                break;
            case 'justifyright':
                box.style.textAlign = 'right';
                break;
            case 'justifyleft':
                box.style.textAlign = 'left';
                break;
            case 'justifycenter':
                box.style.textAlign = 'center';
                break;
        }
    }
}


/***/ }),

/***/ 92665:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GX: function() { return /* binding */ loadNextStyle; },
/* harmony export */   JL: function() { return /* binding */ appendScriptAsync; },
/* harmony export */   Nf: function() { return /* binding */ appendStyleAsync; },
/* harmony export */   uR: function() { return /* binding */ appendScript; },
/* harmony export */   wY: function() { return /* binding */ loadNext; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(97582);
/* harmony import */ var _complete_url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(55313);
/* harmony import */ var jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(69099);
/* harmony import */ var jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2926);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




const alreadyLoadedList = new Map();
const cacheLoaders = (loader) => {
    return (jodit, url) => (0,tslib__WEBPACK_IMPORTED_MODULE_0__/* .__awaiter */ .mG)(void 0, void 0, void 0, function* () {
        if (alreadyLoadedList.has(url)) {
            return alreadyLoadedList.get(url);
        }
        const promise = loader(jodit, url);
        alreadyLoadedList.set(url, promise);
        return promise;
    });
};
/**
 * Append script in document and call callback function after download
 */
const appendScript = (jodit, url, callback) => {
    const script = jodit.c.element('script');
    script.type = 'text/javascript';
    script.async = true;
    if ((0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_1__/* .isFunction */ .m)(callback) && !jodit.isInDestruct) {
        jodit.e.on(script, 'load', callback);
    }
    if (!script.src) {
        script.src = (0,_complete_url__WEBPACK_IMPORTED_MODULE_2__/* .completeUrl */ .W)(url);
    }
    jodit.od.body.appendChild(script);
    return {
        callback,
        element: script
    };
};
/**
 * Load script and return promise
 */
const appendScriptAsync = cacheLoaders((jodit, url) => {
    return new Promise((resolve, reject) => {
        if (jodit.isInDestruct) {
            return;
        }
        const { element } = appendScript(jodit, url, resolve);
        !jodit.isInDestruct && jodit.e.on(element, 'error', reject);
    });
});
/**
 * Download CSS style script
 */
const appendStyleAsync = cacheLoaders((jodit, url) => {
    return new Promise((resolve, reject) => {
        if (jodit.isInDestruct) {
            return;
        }
        const link = jodit.c.element('link');
        link.rel = 'stylesheet';
        link.media = 'all';
        link.crossOrigin = 'anonymous';
        const callback = () => resolve(link);
        !jodit.isInDestruct &&
            jodit.e.on(link, 'load', callback).on(link, 'error', reject);
        link.href = (0,_complete_url__WEBPACK_IMPORTED_MODULE_2__/* .completeUrl */ .W)(url);
        if (jodit.o.shadowRoot) {
            jodit.o.shadowRoot.appendChild(link);
        }
        else {
            jodit.od.body.appendChild(link);
        }
    });
});
const loadNext = (jodit, urls, i = 0) => {
    if (!(0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_3__/* .isString */ .H)(urls[i])) {
        return Promise.resolve();
    }
    return appendScriptAsync(jodit, urls[i]).then(() => loadNext(jodit, urls, i + 1));
};
function loadNextStyle(jodit, urls, i = 0) {
    if (!(0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_3__/* .isString */ .H)(urls[i])) {
        return Promise.resolve();
    }
    return appendStyleAsync(jodit, urls[i]).then(() => loadNextStyle(jodit, urls, i + 1));
}


/***/ }),

/***/ 23144:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   L: function() { return /* binding */ attr; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(78157);
/* harmony import */ var jodit_core_helpers_string_kebab_case__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(13929);
/* harmony import */ var _css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(71737);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



/**
 * Alias for `elm.getAttribute` but if set second argument `-{key}`
 * it will also check `data-{key}` attribute
 * if set `value` it is alias for setAttribute with same logic
 */
function attr(elm, keyOrAttributes, value) {
    if (!elm || !(0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isFunction */ .mf)(elm.getAttribute)) {
        return null;
    }
    if (!(0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isString */ .HD)(keyOrAttributes)) {
        Object.keys(keyOrAttributes).forEach(key => {
            const value = keyOrAttributes[key];
            if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isPlainObject */ .PO)(value) && key === 'style') {
                (0,_css__WEBPACK_IMPORTED_MODULE_1__/* .css */ .i)(elm, value);
            }
            else {
                if (key === 'className') {
                    key = 'class';
                }
                attr(elm, key, value);
            }
        });
        return null;
    }
    let key = (0,jodit_core_helpers_string_kebab_case__WEBPACK_IMPORTED_MODULE_2__/* .CamelCaseToKebabCase */ .g)(keyOrAttributes);
    if (/^-/.test(key)) {
        const res = attr(elm, `data${key}`);
        if (res) {
            return res;
        }
        key = key.substr(1);
    }
    if (value !== undefined) {
        if (value == null) {
            elm.hasAttribute(key) && elm.removeAttribute(key);
        }
        else {
            let replaceValue = value.toString();
            if (elm.nodeName === 'IMG' &&
                (key === 'width' || key === 'height')) {
                replaceValue = replaceValue.replace('px', '');
            }
            elm.setAttribute(key, replaceValue);
            return replaceValue;
        }
    }
    return elm.getAttribute(key);
}


/***/ }),

/***/ 67600:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   X: function() { return /* binding */ browser; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/utils
 */
/**
 * Module returns method that is used to determine the browser
 * @example
 * ```javascript
 * console.log(Jodit.modules.Helpers.browser('mse'));
 * console.log(Jodit.modules.Helpers.browser('chrome'));
 * console.log($Jodit.modules.Helpers.browser('opera'));
 * console.log(Jodit.modules.Helpers.browser('firefox'));
 * console.log(Jodit.modules.Helpers.browser('mse') && Jodit.modules.Helpers.browser('version') > 10);
 * ```
 */
const browser = (browser) => {
    const ua = navigator.userAgent.toLowerCase(), match = /(firefox)[\s/]([\w.]+)/.exec(ua) ||
        /(chrome)[\s/]([\w.]+)/.exec(ua) ||
        /(webkit)[\s/]([\w.]+)/.exec(ua) ||
        /(opera)(?:.*version)[\s/]([\w.]+)/.exec(ua) ||
        /(msie)[\s]([\w.]+)/.exec(ua) ||
        /(trident)\/([\w.]+)/.exec(ua) ||
        ua.indexOf('compatible') < 0 ||
        [];
    if (browser === 'version') {
        return match[2];
    }
    if (browser === 'webkit') {
        return match[1] === 'chrome' || match[1] === 'webkit';
    }
    if (browser === 'ff') {
        return match[1] === 'firefox';
    }
    if (browser === 'msie') {
        return match[1] === 'trident' || match[1] === 'msie';
    }
    return match[1] === browser;
};


/***/ }),

/***/ 36990:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   X: function() { return /* binding */ buildQuery; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_plain_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(45564);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * Build query string
 */
const buildQuery = (data, prefix) => {
    const str = [];
    const enc = encodeURIComponent;
    for (const dataKey in data) {
        if (Object.prototype.hasOwnProperty.call(data, dataKey)) {
            const k = prefix ? prefix + '[' + dataKey + ']' : dataKey;
            const v = data[dataKey];
            str.push((0,jodit_core_helpers_checker_is_plain_object__WEBPACK_IMPORTED_MODULE_0__/* .isPlainObject */ .P)(v) ? buildQuery(v, k) : enc(k) + '=' + enc(v));
        }
    }
    return str.join('&');
};


/***/ }),

/***/ 55313:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   W: function() { return /* binding */ completeUrl; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/utils
 */
const completeUrl = (url) => {
    if (window.location.protocol === 'file:' && /^\/\//.test(url)) {
        url = 'https:' + url;
    }
    return url;
};


/***/ }),

/***/ 45301:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   I: function() { return /* binding */ ConfigProto; },
/* harmony export */   t: function() { return /* binding */ ConfigFlatten; }
/* harmony export */ });
/* harmony import */ var _extend__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(65098);
/* harmony import */ var jodit_core_helpers_checker_is_array__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(63738);
/* harmony import */ var jodit_core_helpers_checker_is_plain_object__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(45564);
/* harmony import */ var jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2926);
/* harmony import */ var jodit_core_helpers_checker_is_void__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(41240);
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(87398);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */







/**
 * @example
 * ```js
 * const defaultConfig = {
 *   a: {
 *     b: {
 *       c: 2
 *     },
 *     e: 5
 *   },
 *   d: {
 *     g: 7
 *   }
 * };
 *
 * const options = ConfigProto({a: {
 *   b: {
 *     c: 1
 *   }
 * }}, defaultConfig);
 *
 * console.log(options.a.b.c); // 1
 * console.log(options.a.e); // 5
 * console.log(options.d.g); // 7
 *
 * defaultConfig.d.g  = 8;
 * console.log(options.d.g); // 8
 *
 * ```
 */
function ConfigProto(options, proto, deep = 0) {
    // Already prototyped object should not be prototyped again
    if (Object.getPrototypeOf(options) !== Object.prototype) {
        return options;
    }
    const def = jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.defaultOptions;
    if ((0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_2__/* .isString */ .H)(options.preset)) {
        if (def.presets[options.preset] !== undefined) {
            const preset = def.presets[options.preset];
            Object.keys(preset).forEach(subKey => {
                if ((0,jodit_core_helpers_checker_is_void__WEBPACK_IMPORTED_MODULE_3__/* .isVoid */ .n)(options[subKey])) {
                    options[subKey] = preset[subKey];
                }
            });
        }
        delete options.preset;
    }
    const newOpt = {};
    Object.keys(options).forEach(key => {
        const opt = options[key], protoKey = proto ? proto[key] : null;
        if ((0,jodit_core_helpers_checker_is_plain_object__WEBPACK_IMPORTED_MODULE_4__/* .isPlainObject */ .P)(opt) && (0,jodit_core_helpers_checker_is_plain_object__WEBPACK_IMPORTED_MODULE_4__/* .isPlainObject */ .P)(protoKey) && !(0,_extend__WEBPACK_IMPORTED_MODULE_5__/* .isAtom */ .J8)(opt)) {
            newOpt[key] = ConfigProto(opt, protoKey, deep + 1);
            return;
        }
        // On the first level all array are atomic
        if (deep !== 0 && (0,jodit_core_helpers_checker_is_array__WEBPACK_IMPORTED_MODULE_6__/* .isArray */ .k)(opt) && !(0,_extend__WEBPACK_IMPORTED_MODULE_5__/* .isAtom */ .J8)(opt) && (0,jodit_core_helpers_checker_is_array__WEBPACK_IMPORTED_MODULE_6__/* .isArray */ .k)(protoKey)) {
            newOpt[key] = [...opt, ...protoKey.slice(opt.length)];
            return;
        }
        newOpt[key] = opt;
    });
    Object.setPrototypeOf(newOpt, proto);
    return newOpt;
}
function ConfigFlatten(obj) {
    return (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .keys */ .XP)(obj, false).reduce((app, key) => {
        app[key] = obj[key];
        return app;
    }, {});
}


/***/ }),

/***/ 13691:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   U: function() { return /* binding */ convertMediaUrlToVideoEmbed; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62268);
/* harmony import */ var _parse_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14370);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/utils
 */


/**
 * Javascript url pattern converter replace youtube/vimeo url in embed code.
 */
const convertMediaUrlToVideoEmbed = (url, width = 400, height = 345) => {
    if (!(0,jodit_core_helpers_checker_is_url__WEBPACK_IMPORTED_MODULE_0__/* .isURL */ .P)(url)) {
        return url;
    }
    const parser = document.createElement('a'), pattern1 = /(?:http?s?:\/\/)?(?:www\.)?(?:vimeo\.com)\/?(.+)/g;
    parser.href = url;
    if (!width) {
        width = 400;
    }
    if (!height) {
        height = 345;
    }
    const protocol = parser.protocol || '';
    switch (parser.hostname) {
        case 'www.vimeo.com':
        case 'vimeo.com':
            return pattern1.test(url)
                ? url.replace(pattern1, '<iframe width="' +
                    width +
                    '" height="' +
                    height +
                    '" src="' +
                    protocol +
                    '//player.vimeo.com/video/$1" frameborder="0" allowfullscreen></iframe>')
                : url;
        case 'youtube.com':
        case 'www.youtube.com':
        case 'youtu.be':
        case 'www.youtu.be': {
            const query = parser.search
                ? (0,_parse_query__WEBPACK_IMPORTED_MODULE_1__/* .parseQuery */ .m)(parser.search)
                : { v: parser.pathname.substr(1) };
            return query.v
                ? '<iframe width="' +
                    width +
                    '" height="' +
                    height +
                    '" src="' +
                    protocol +
                    '//www.youtube.com/embed/' +
                    query.v +
                    '" frameborder="0" allowfullscreen></iframe>'
                : url;
        }
    }
    return url;
};


/***/ }),

/***/ 71737:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   b: function() { return /* binding */ clearCenterAlign; },
/* harmony export */   i: function() { return /* binding */ css; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_plain_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(45564);
/* harmony import */ var jodit_core_helpers_checker_is_boolean__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(88751);
/* harmony import */ var jodit_core_helpers_normalize_normalize_css_value__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(21642);
/* harmony import */ var jodit_core_helpers_string_camel_case__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(33683);
/* harmony import */ var jodit_core_helpers_string_kebab_case__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(13929);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */





/**
 * Get the value of a computed style property for the first element in the set of matched elements or set one or
 * more CSS properties for every matched element
 *
 * @param element - HTML element
 * @param key - An object of property-value pairs to set. A CSS property name.
 * @param value - A value to set for the property.
 * @param onlyStyleMode - Get value from style attribute, without calculating
 */
function css(element, key, value, onlyStyleMode = false) {
    if ((0,jodit_core_helpers_checker_is_boolean__WEBPACK_IMPORTED_MODULE_0__/* .isBoolean */ .j)(value)) {
        onlyStyleMode = value;
        value = undefined;
    }
    if ((0,jodit_core_helpers_checker_is_plain_object__WEBPACK_IMPORTED_MODULE_1__/* .isPlainObject */ .P)(key) || value !== undefined) {
        const setValue = (elm, _key, _value) => {
            _value = (0,jodit_core_helpers_normalize_normalize_css_value__WEBPACK_IMPORTED_MODULE_2__/* .normalizeCssNumericValue */ .xI)(_key, _value);
            if (_value !== undefined &&
                (_value == null ||
                    css(elm, _key, true) !== (0,jodit_core_helpers_normalize_normalize_css_value__WEBPACK_IMPORTED_MODULE_2__/* .normalizeCssValue */ .Zh)(_key, _value))) {
                elm.style[_key] = _value;
            }
        };
        if ((0,jodit_core_helpers_checker_is_plain_object__WEBPACK_IMPORTED_MODULE_1__/* .isPlainObject */ .P)(key)) {
            const keys = Object.keys(key);
            for (let j = 0; j < keys.length; j += 1) {
                setValue(element, (0,jodit_core_helpers_string_camel_case__WEBPACK_IMPORTED_MODULE_3__/* .camelCase */ .e)(keys[j]), key[keys[j]]);
            }
        }
        else {
            setValue(element, (0,jodit_core_helpers_string_camel_case__WEBPACK_IMPORTED_MODULE_3__/* .camelCase */ .e)(key), value);
        }
        return '';
    }
    const key2 = (0,jodit_core_helpers_string_kebab_case__WEBPACK_IMPORTED_MODULE_4__/* .kebabCase */ .G)(key), doc = element.ownerDocument || document, win = doc ? doc.defaultView || doc.parentWindow : false;
    const currentValue = element.style[key];
    let result = '';
    if (currentValue !== undefined && currentValue !== '') {
        result = currentValue;
    }
    else if (win && !onlyStyleMode) {
        result = win.getComputedStyle(element).getPropertyValue(key2);
    }
    if (jodit_core_helpers_normalize_normalize_css_value__WEBPACK_IMPORTED_MODULE_2__/* .NUMBER_FIELDS_REG */ .DO.test(key) &&
        /^[-+]?[0-9.]+px$/.test(result.toString())) {
        result = parseInt(result.toString(), 10);
    }
    return (0,jodit_core_helpers_normalize_normalize_css_value__WEBPACK_IMPORTED_MODULE_2__/* .normalizeCssValue */ .Zh)(key, result);
}
/**
 * Clear center align
 */
const clearCenterAlign = (image) => {
    if (css(image, 'display') === 'block') {
        css(image, 'display', '');
    }
    const { style } = image;
    if (style.marginLeft === 'auto' && style.marginRight === 'auto') {
        style.marginLeft = '';
        style.marginRight = '';
    }
};


/***/ }),

/***/ 83098:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   k: function() { return /* binding */ ctrlKey; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/utils
 */
/**
 * CTRL pressed
 * @returns true ctrl key was pressed
 */
const ctrlKey = (e) => {
    if (typeof navigator !== 'undefined' &&
        navigator.userAgent.indexOf('Mac OS X') !== -1) {
        if (e.metaKey && !e.altKey) {
            return true;
        }
    }
    else if (e.ctrlKey && !e.altKey) {
        return true;
    }
    return false;
};


/***/ }),

/***/ 25920:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   q: function() { return /* binding */ dataBind; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_view_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(31470);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

const store = new WeakMap();
const dataBind = (elm, key, value) => {
    let itemStore = store.get(elm);
    if (!itemStore) {
        itemStore = {};
        store.set(elm, itemStore);
        let e = null;
        if ((0,jodit_core_helpers_checker_is_view_object__WEBPACK_IMPORTED_MODULE_0__/* .isViewObject */ .f)(elm.j)) {
            e = elm.j.e;
        }
        if ((0,jodit_core_helpers_checker_is_view_object__WEBPACK_IMPORTED_MODULE_0__/* .isViewObject */ .f)(elm)) {
            e = elm.e;
        }
        e &&
            e.on('beforeDestruct', () => {
                store.delete(elm);
            });
    }
    if (value === undefined) {
        return itemStore[key];
    }
    itemStore[key] = value;
    return value;
};


/***/ }),

/***/ 94299:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   X: function() { return /* binding */ defaultLanguage; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2926);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/utils
 */

/**
 * Try define user language
 */
const defaultLanguage = (language, defaultLanguage = 'en') => {
    if (language !== 'auto' && (0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_0__/* .isString */ .H)(language)) {
        return language;
    }
    if (document.documentElement && document.documentElement.lang) {
        return document.documentElement.lang;
    }
    if (navigator.language) {
        return navigator.language.substring(0, 2);
    }
    return defaultLanguage;
};


/***/ }),

/***/ 60701:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   JG: function() { return /* binding */ abort; },
/* harmony export */   PQ: function() { return /* binding */ isAbort; },
/* harmony export */   YM: function() { return /* binding */ options; },
/* harmony export */   ZI: function() { return /* binding */ connection; },
/* harmony export */   vU: function() { return /* binding */ error; }
/* harmony export */ });
/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3848);
/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(45610);
/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(41523);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/utils
 */

/**
 * Helper for create Error object
 */
function error(message) {
    return new TypeError(message);
}
function connection(message) {
    return new _errors__WEBPACK_IMPORTED_MODULE_0__/* .ConnectionError */ .h(message);
}
function options(message) {
    return new _errors__WEBPACK_IMPORTED_MODULE_1__/* .OptionsError */ .t(message);
}
function abort(message) {
    return new _errors__WEBPACK_IMPORTED_MODULE_2__/* .AbortError */ ._(message);
}
function isAbort(error) {
    return error instanceof _errors__WEBPACK_IMPORTED_MODULE_2__/* .AbortError */ ._;
}


/***/ }),

/***/ 41523:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   _: function() { return /* binding */ AbortError; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/utils
 */
class AbortError extends Error {
    constructor(m) {
        super(m);
        Object.setPrototypeOf(this, AbortError.prototype);
    }
}


/***/ }),

/***/ 3848:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   h: function() { return /* binding */ ConnectionError; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/utils
 */
class ConnectionError extends Error {
    constructor(m) {
        super(m);
        Object.setPrototypeOf(this, ConnectionError.prototype);
    }
}


/***/ }),

/***/ 24459:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   _L: function() { return /* reexport safe */ _abort_error__WEBPACK_IMPORTED_MODULE_0__._; },
/* harmony export */   hY: function() { return /* reexport safe */ _connection_error__WEBPACK_IMPORTED_MODULE_1__.h; },
/* harmony export */   tW: function() { return /* reexport safe */ _options_error__WEBPACK_IMPORTED_MODULE_2__.t; }
/* harmony export */ });
/* harmony import */ var _abort_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(41523);
/* harmony import */ var _connection_error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3848);
/* harmony import */ var _options_error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(45610);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/utils
 */





/***/ }),

/***/ 45610:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   t: function() { return /* binding */ OptionsError; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/utils
 */
class OptionsError extends TypeError {
    constructor(m) {
        super(m);
        Object.setPrototypeOf(this, OptionsError.prototype);
    }
}


/***/ }),

/***/ 40840:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   JG: function() { return /* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_0__.JG; },
/* harmony export */   PQ: function() { return /* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_0__.PQ; },
/* harmony export */   YM: function() { return /* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_0__.YM; },
/* harmony export */   ZI: function() { return /* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_0__.ZI; },
/* harmony export */   _L: function() { return /* reexport safe */ _errors___WEBPACK_IMPORTED_MODULE_1__._L; },
/* harmony export */   hY: function() { return /* reexport safe */ _errors___WEBPACK_IMPORTED_MODULE_1__.hY; },
/* harmony export */   tW: function() { return /* reexport safe */ _errors___WEBPACK_IMPORTED_MODULE_1__.tW; },
/* harmony export */   vU: function() { return /* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_0__.vU; }
/* harmony export */ });
/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60701);
/* harmony import */ var _errors___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(24459);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/utils
 */




/***/ }),

/***/ 65098:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   J8: function() { return /* binding */ isAtom; },
/* harmony export */   V8: function() { return /* binding */ fastClone; },
/* harmony export */   XT: function() { return /* binding */ markAsAtomic; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_string_stringify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(12582);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/utils
 */

function isAtom(obj) {
    return obj && obj.isAtom;
}
function markAsAtomic(obj) {
    Object.defineProperty(obj, 'isAtom', {
        enumerable: false,
        value: true,
        configurable: false
    });
    return obj;
}
function fastClone(object) {
    return JSON.parse((0,jodit_core_helpers_string_stringify__WEBPACK_IMPORTED_MODULE_0__/* .stringify */ .P)(object));
}


/***/ }),

/***/ 4306:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   g: function() { return /* binding */ getClassName; },
/* harmony export */   k: function() { return /* binding */ keepNames; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(69099);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

const keepNames = new Map();
const getClassName = (obj) => {
    var _a;
    if ((0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_0__/* .isFunction */ .m)(obj.className)) {
        return obj.className();
    }
    const constructor = ((_a = obj.constructor) === null || _a === void 0 ? void 0 : _a.originalConstructor) || obj.constructor;
    if (keepNames.has(constructor)) {
        return keepNames.get(constructor);
    }
    if (constructor.name) {
        return constructor.name;
    }
    const regex = new RegExp(/^\s*function\s*(\S*)\s*\(/);
    const res = constructor.toString().match(regex);
    return res ? res[1] : '';
};


/***/ }),

/***/ 25021:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   U: function() { return /* binding */ get; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2926);
/* harmony import */ var jodit_core_helpers_checker_is_void__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(41240);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/**
 * Safe access in tree object
 *
 * @example
 * ```js
 * const obj = {
 *   a: {
 *     b: {
 *       c: {
 *         e: false
 *       }
 *     }
 *   }
 * };
 *
 * console.log(Jodit.modules.Helpers.get('a.b.c.d.e', obj) === false); // true
 * console.log(Jodit.modules.Helpers.get('a.b.a.d.e', obj) === null); // false
 * ```
 */
function get(chain, obj) {
    if (!(0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_0__/* .isString */ .H)(chain) || !chain.length) {
        return null;
    }
    const parts = chain.split('.');
    let result = obj;
    try {
        for (const part of parts) {
            if ((0,jodit_core_helpers_checker_is_void__WEBPACK_IMPORTED_MODULE_1__/* .isVoid */ .n)(result[part])) {
                return null;
            }
            result = result[part];
        }
    }
    catch (_a) {
        return null; // permission denied ore another access exception
    }
    if ((0,jodit_core_helpers_checker_is_void__WEBPACK_IMPORTED_MODULE_1__/* .isVoid */ .n)(result)) {
        return null;
    }
    return result;
}


/***/ }),

/***/ 48871:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   w: function() { return /* binding */ humanSizeToBytes; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/utils
 */
/**
 * Converts from human readable file size (kb,mb,gb,tb) to bytes
 * @param human - readable file size. Example 1gb or 11.2mb
 */
const humanSizeToBytes = (human) => {
    if (/^[0-9.]+$/.test(human.toString())) {
        return parseFloat(human);
    }
    const format = human.substr(-2, 2).toUpperCase(), formats = ['KB', 'MB', 'GB', 'TB'], number = parseFloat(human.substr(0, human.length - 2));
    return formats.indexOf(format) !== -1
        ? number * Math.pow(1024, formats.indexOf(format) + 1)
        : parseInt(human, 10);
};


/***/ }),

/***/ 86284:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $$: function() { return /* reexport safe */ _selector__WEBPACK_IMPORTED_MODULE_23__.$$; },
/* harmony export */   AbortError: function() { return /* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_13__._L; },
/* harmony export */   ConfigFlatten: function() { return /* reexport safe */ _config_proto__WEBPACK_IMPORTED_MODULE_7__.t; },
/* harmony export */   ConfigProto: function() { return /* reexport safe */ _config_proto__WEBPACK_IMPORTED_MODULE_7__.I; },
/* harmony export */   ConnectionError: function() { return /* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_13__.hY; },
/* harmony export */   LimitedStack: function() { return /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_25__.l; },
/* harmony export */   OptionsError: function() { return /* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_13__.tW; },
/* harmony export */   abort: function() { return /* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_13__.JG; },
/* harmony export */   alignElement: function() { return /* reexport safe */ _align__WEBPACK_IMPORTED_MODULE_0__.E3; },
/* harmony export */   appendScript: function() { return /* reexport safe */ _append_script__WEBPACK_IMPORTED_MODULE_2__.uR; },
/* harmony export */   appendScriptAsync: function() { return /* reexport safe */ _append_script__WEBPACK_IMPORTED_MODULE_2__.JL; },
/* harmony export */   appendStyleAsync: function() { return /* reexport safe */ _append_script__WEBPACK_IMPORTED_MODULE_2__.Nf; },
/* harmony export */   attr: function() { return /* reexport safe */ _attr__WEBPACK_IMPORTED_MODULE_1__.L; },
/* harmony export */   browser: function() { return /* reexport safe */ _browser__WEBPACK_IMPORTED_MODULE_4__.X; },
/* harmony export */   buildQuery: function() { return /* reexport safe */ _build_query__WEBPACK_IMPORTED_MODULE_5__.X; },
/* harmony export */   call: function() { return /* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_26__.RE; },
/* harmony export */   callPromise: function() { return /* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_26__.C6; },
/* harmony export */   clearAlign: function() { return /* reexport safe */ _align__WEBPACK_IMPORTED_MODULE_0__.wL; },
/* harmony export */   clearCenterAlign: function() { return /* reexport safe */ _css__WEBPACK_IMPORTED_MODULE_9__.b; },
/* harmony export */   cns: function() { return /* reexport safe */ _mark_deprecated__WEBPACK_IMPORTED_MODULE_18__.H; },
/* harmony export */   completeUrl: function() { return /* reexport safe */ _complete_url__WEBPACK_IMPORTED_MODULE_6__.W; },
/* harmony export */   connection: function() { return /* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_13__.ZI; },
/* harmony export */   convertMediaUrlToVideoEmbed: function() { return /* reexport safe */ _convert_media_url_to_video_embed__WEBPACK_IMPORTED_MODULE_8__.U; },
/* harmony export */   css: function() { return /* reexport safe */ _css__WEBPACK_IMPORTED_MODULE_9__.i; },
/* harmony export */   cssPath: function() { return /* reexport safe */ _selector__WEBPACK_IMPORTED_MODULE_23__.iN; },
/* harmony export */   ctrlKey: function() { return /* reexport safe */ _ctrl_key__WEBPACK_IMPORTED_MODULE_10__.k; },
/* harmony export */   dataBind: function() { return /* reexport safe */ _data_bind__WEBPACK_IMPORTED_MODULE_11__.q; },
/* harmony export */   defaultLanguage: function() { return /* reexport safe */ _default_language__WEBPACK_IMPORTED_MODULE_12__.X; },
/* harmony export */   error: function() { return /* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_13__.vU; },
/* harmony export */   fastClone: function() { return /* reexport safe */ _extend__WEBPACK_IMPORTED_MODULE_14__.V8; },
/* harmony export */   get: function() { return /* reexport safe */ _get__WEBPACK_IMPORTED_MODULE_15__.U; },
/* harmony export */   getClassName: function() { return /* reexport safe */ _get_class_name__WEBPACK_IMPORTED_MODULE_16__.g; },
/* harmony export */   getDataTransfer: function() { return /* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_26__.qu; },
/* harmony export */   getXPathByElement: function() { return /* reexport safe */ _selector__WEBPACK_IMPORTED_MODULE_23__.BR; },
/* harmony export */   hAlignElement: function() { return /* reexport safe */ _align__WEBPACK_IMPORTED_MODULE_0__.zC; },
/* harmony export */   humanSizeToBytes: function() { return /* reexport safe */ _human_size_to_bytes__WEBPACK_IMPORTED_MODULE_17__.w; },
/* harmony export */   inView: function() { return /* reexport safe */ _scroll_into_view__WEBPACK_IMPORTED_MODULE_22__.j; },
/* harmony export */   isAbort: function() { return /* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_13__.PQ; },
/* harmony export */   isAtom: function() { return /* reexport safe */ _extend__WEBPACK_IMPORTED_MODULE_14__.J8; },
/* harmony export */   keepNames: function() { return /* reexport safe */ _get_class_name__WEBPACK_IMPORTED_MODULE_16__.k; },
/* harmony export */   keys: function() { return /* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_26__.XP; },
/* harmony export */   loadImage: function() { return /* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_26__.po; },
/* harmony export */   loadNext: function() { return /* reexport safe */ _append_script__WEBPACK_IMPORTED_MODULE_2__.wY; },
/* harmony export */   loadNextStyle: function() { return /* reexport safe */ _append_script__WEBPACK_IMPORTED_MODULE_2__.GX; },
/* harmony export */   markAsAtomic: function() { return /* reexport safe */ _extend__WEBPACK_IMPORTED_MODULE_14__.XT; },
/* harmony export */   markDeprecated: function() { return /* reexport safe */ _mark_deprecated__WEBPACK_IMPORTED_MODULE_18__.Q; },
/* harmony export */   markOwner: function() { return /* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_26__.MN; },
/* harmony export */   memorizeExec: function() { return /* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_26__.u3; },
/* harmony export */   options: function() { return /* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_13__.YM; },
/* harmony export */   parseQuery: function() { return /* reexport safe */ _parse_query__WEBPACK_IMPORTED_MODULE_19__.m; },
/* harmony export */   previewBox: function() { return /* reexport safe */ _print__WEBPACK_IMPORTED_MODULE_20__.$; },
/* harmony export */   refs: function() { return /* reexport safe */ _selector__WEBPACK_IMPORTED_MODULE_23__.xL; },
/* harmony export */   reset: function() { return /* reexport safe */ _reset__WEBPACK_IMPORTED_MODULE_21__.m; },
/* harmony export */   resolveElement: function() { return /* reexport safe */ _selector__WEBPACK_IMPORTED_MODULE_23__.W2; },
/* harmony export */   scrollIntoViewIfNeeded: function() { return /* reexport safe */ _scroll_into_view__WEBPACK_IMPORTED_MODULE_22__.n; },
/* harmony export */   set: function() { return /* reexport safe */ _set__WEBPACK_IMPORTED_MODULE_24__.t; }
/* harmony export */ });
/* harmony import */ var _align__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13931);
/* harmony import */ var _attr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(23144);
/* harmony import */ var _append_script__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(92665);
/* harmony import */ var _assert__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(52378);
/* harmony import */ var _assert__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_assert__WEBPACK_IMPORTED_MODULE_3__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _assert__WEBPACK_IMPORTED_MODULE_3__) if(["default","alignElement","clearAlign","hAlignElement","attr","appendScript","appendScriptAsync","appendStyleAsync","loadNext","loadNextStyle"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _assert__WEBPACK_IMPORTED_MODULE_3__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(67600);
/* harmony import */ var _build_query__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(36990);
/* harmony import */ var _complete_url__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(55313);
/* harmony import */ var _config_proto__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(45301);
/* harmony import */ var _convert_media_url_to_video_embed__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(13691);
/* harmony import */ var _css__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(71737);
/* harmony import */ var _ctrl_key__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(83098);
/* harmony import */ var _data_bind__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(25920);
/* harmony import */ var _default_language__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(94299);
/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(40840);
/* harmony import */ var _extend__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(65098);
/* harmony import */ var _get__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(25021);
/* harmony import */ var _get_class_name__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(4306);
/* harmony import */ var _human_size_to_bytes__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(48871);
/* harmony import */ var _mark_deprecated__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(41242);
/* harmony import */ var _parse_query__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(14370);
/* harmony import */ var _print__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(90006);
/* harmony import */ var _reset__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(25074);
/* harmony import */ var _scroll_into_view__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(18068);
/* harmony import */ var _selector__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(93789);
/* harmony import */ var _set__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(49155);
/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(56114);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(87398);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/utils
 */





























/***/ }),

/***/ 41242:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   H: function() { return /* binding */ cns; },
/* harmony export */   Q: function() { return /* binding */ markDeprecated; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module helpers/utils
 */
/**
 * By default, terser will remove all `console.*` but
 * if you use this object it will not be
 */
const cns = console;
/**
 * Mark function as deprecated
 */
function markDeprecated(method, names = [''], ctx = null) {
    return (...args) => {
        cns.warn(`Method "${names[0]}" deprecated.` +
            (names[1] ? ` Use "${names[1]}" instead` : ''));
        return method.call(ctx, ...args);
    };
}


/***/ }),

/***/ 14370:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   m: function() { return /* binding */ parseQuery; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * Parse query string
 */
const parseQuery = (queryString) => {
    const query = {}, a = queryString.substring(1).split('&');
    for (let i = 0; i < a.length; i += 1) {
        const keyValue = a[i].split('=');
        query[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1] || '');
    }
    return query;
};


/***/ }),

/***/ 90006:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $: function() { return /* binding */ previewBox; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2926);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var _css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(71737);
/* harmony import */ var _attr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(23144);
/* harmony import */ var _selector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(93789);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */





/**
 * Fixes image sizes and sets absolute paths to images
 */
function fixedAssetsSizeAndAbsoluteLinks(editor, points) {
    const restoreAttributes = [];
    try {
        (0,_selector__WEBPACK_IMPORTED_MODULE_2__.$$)('img', editor.editor).forEach(item => {
            const previousAttrs = [
                (0,_attr__WEBPACK_IMPORTED_MODULE_1__/* .attr */ .L)(item, 'width'),
                (0,_attr__WEBPACK_IMPORTED_MODULE_1__/* .attr */ .L)(item, 'height'),
                item.src
            ];
            (0,_attr__WEBPACK_IMPORTED_MODULE_1__/* .attr */ .L)(item, {
                width: item.offsetWidth + points,
                height: item.offsetHeight + points
            });
            const a = editor.createInside.a();
            editor.ed.body.appendChild(a);
            a.href = item.src;
            item.src = a.href;
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(a);
            restoreAttributes.push(() => {
                var _a;
                item.src = (_a = previousAttrs[2]) !== null && _a !== void 0 ? _a : '';
                (0,_attr__WEBPACK_IMPORTED_MODULE_1__/* .attr */ .L)(item, {
                    width: previousAttrs[0] || null,
                    height: previousAttrs[1] || null
                });
            });
        });
    }
    catch (e) {
        restoreAttributes.forEach(c => c());
        restoreAttributes.length = 0;
        throw e;
    }
    return restoreAttributes;
}
/**
 * Generates a copy of an HTML document, resizes images, executes JS
 *
 * @event beforePreviewBox(string | undefined, 'pt' | 'px' | '')
 * @event afterPreviewBox(HTMLElement)
 */
function previewBox(editor, defaultValue, points = 'px', container = null) {
    const onDestruct = [];
    const restoreAttributes = fixedAssetsSizeAndAbsoluteLinks(editor, points);
    try {
        const res = editor.e.fire('beforePreviewBox', defaultValue, points);
        if (res != null) {
            return res;
        }
        let div = editor.c.div('jodit__preview-box jodit-context');
        if (container) {
            container.appendChild(div);
        }
        (0,_css__WEBPACK_IMPORTED_MODULE_3__/* .css */ .i)(div, {
            position: 'relative',
            padding: 16
        });
        const value = editor.value ||
            `<div style='position: absolute;left:50%;top:50%;transform: translateX(-50%) translateY(-50%);color:#ccc;'>${editor.i18n('Empty')}</div>`;
        if (editor.iframe) {
            const iframe = editor.create.element('iframe');
            (0,_css__WEBPACK_IMPORTED_MODULE_3__/* .css */ .i)(iframe, {
                minWidth: 800,
                minHeight: 600,
                border: 0
            });
            div.appendChild(iframe);
            const myWindow = iframe.contentWindow;
            if (myWindow) {
                editor.e.fire('generateDocumentStructure.iframe', myWindow.document, editor);
                div = myWindow.document.body;
                if (typeof ResizeObserver === 'function') {
                    let destructed = false;
                    const elm = myWindow.document.body;
                    const resizeObserver = new ResizeObserver(editor.async.debounce(() => {
                        resizeObserver.unobserve(elm);
                        iframe.style.height = `${elm.offsetHeight + 20}px`;
                        editor.async.requestAnimationFrame(() => {
                            !destructed && resizeObserver.observe(elm);
                        });
                    }, 100));
                    const beforeDestruct = () => {
                        destructed = true;
                        resizeObserver.unobserve(elm);
                        resizeObserver.disconnect();
                        editor.e.off('beforeDestruct', beforeDestruct);
                    };
                    onDestruct.push(beforeDestruct);
                    editor.e.on('beforeDestruct', beforeDestruct);
                }
            }
        }
        else {
            (0,_css__WEBPACK_IMPORTED_MODULE_3__/* .css */ .i)(div, {
                minWidth: 1024,
                minHeight: 600,
                border: 0
            });
        }
        const setHTML = (box, value) => {
            const dv = (0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_4__/* .isString */ .H)(value) ? editor.c.div() : value;
            if ((0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_4__/* .isString */ .H)(value)) {
                dv.innerHTML = value;
            }
            for (let i = 0; i < dv.childNodes.length; i += 1) {
                const c = dv.childNodes[i];
                if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isElement(c)) {
                    const newNode = box.ownerDocument.createElement(c.nodeName);
                    for (let j = 0; j < c.attributes.length; j += 1) {
                        (0,_attr__WEBPACK_IMPORTED_MODULE_1__/* .attr */ .L)(newNode, c.attributes[j].nodeName, c.attributes[j].nodeValue);
                    }
                    if (c.childNodes.length === 0 || jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(c, 'table')) {
                        switch (c.nodeName) {
                            case 'SCRIPT':
                                if (c.textContent) {
                                    newNode.textContent = c.textContent;
                                }
                                break;
                            default:
                                if (c.innerHTML) {
                                    newNode.innerHTML = c.innerHTML;
                                }
                                break;
                        }
                    }
                    else {
                        setHTML(newNode, c);
                    }
                    try {
                        box.appendChild(newNode);
                    }
                    catch (_a) { }
                }
                else {
                    try {
                        box.appendChild(c.cloneNode(true));
                    }
                    catch (_b) { }
                }
            }
        };
        setHTML(div, value);
        editor.e.fire('afterPreviewBox', div);
        return [
            div,
            () => {
                onDestruct.forEach(cb => cb());
            }
        ];
    }
    finally {
        restoreAttributes.forEach(clb => clb());
    }
}


/***/ }),

/***/ 25074:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   m: function() { return /* binding */ reset; }
/* harmony export */ });
/* harmony import */ var _get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25021);
/* harmony import */ var jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(69099);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62924);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



const map = {};
/**
 * Reset Vanilla JS native function
 * @example
 * ```js
 * reset('Array.from')(Set([1,2,3])) // [1, 2, 3]
 * ```
 * You must use the function derived from the method immediately as its iframe is being removed
 */
function reset(key) {
    var _a, _b;
    if (!(key in map)) {
        const iframe = document.createElement('iframe');
        try {
            iframe.src = 'about:blank';
            document.body.appendChild(iframe);
            if (!iframe.contentWindow) {
                return null;
            }
            const func = (0,_get__WEBPACK_IMPORTED_MODULE_1__/* .get */ .U)(key, iframe.contentWindow), bind = (0,_get__WEBPACK_IMPORTED_MODULE_1__/* .get */ .U)(key.split('.').slice(0, -1).join('.'), iframe.contentWindow);
            if ((0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_2__/* .isFunction */ .m)(func)) {
                map[key] = func.bind(bind);
            }
        }
        catch (e) {
            if (!jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.IS_PROD) {
                throw e;
            }
        }
        finally {
            (_a = iframe.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(iframe);
        }
    }
    return (_b = map[key]) !== null && _b !== void 0 ? _b : null;
}


/***/ }),

/***/ 18068:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   j: function() { return /* binding */ inView; },
/* harmony export */   n: function() { return /* binding */ scrollIntoViewIfNeeded; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * @module helpers/utils
 */
/**
 * Check if element is in view
 */
function inView(elm, root, doc) {
    let rect = elm.getBoundingClientRect(), el = elm;
    const top = rect.top, height = rect.height;
    while (el && el !== root && el.parentNode) {
        el = el.parentNode;
        rect = el.getBoundingClientRect();
        if (!(top <= rect.bottom)) {
            return false;
        }
        // Check if the element is out of view due to a container scrolling
        if (top + height <= rect.top) {
            return false;
        }
    }
    // Check it's within the document viewport
    return (top <= ((doc.documentElement && doc.documentElement.clientHeight) || 0));
}
/**
 * Scroll element into view if it is not in view
 */
function scrollIntoViewIfNeeded(elm, root, doc) {
    if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isHTMLElement(elm) && !inView(elm, root, doc)) {
        if (root.clientHeight !== root.scrollHeight) {
            root.scrollTop = elm.offsetTop;
        }
        if (!inView(elm, root, doc)) {
            elm.scrollIntoView();
        }
    }
}


/***/ }),

/***/ 93789:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $$: function() { return /* binding */ $$; },
/* harmony export */   BR: function() { return /* binding */ getXPathByElement; },
/* harmony export */   W2: function() { return /* binding */ resolveElement; },
/* harmony export */   iN: function() { return /* binding */ cssPath; },
/* harmony export */   xL: function() { return /* binding */ refs; }
/* harmony export */ });
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(2926);
/* harmony import */ var jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(86284);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers_string_camel_case__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(33683);
/* harmony import */ var jodit_core_helpers_array_to_array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(24174);
/* harmony import */ var jodit_core_ui_element__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(18970);
/* harmony import */ var jodit_core_component_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(91003);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */








let temp = 1;
const $$temp = () => {
    temp++;
    return temp;
};
function $$(selector, root) {
    let result;
    if (!jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.IS_ES_NEXT &&
        /:scope/.test(selector) &&
        jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.IS_IE &&
        !(root && root.nodeType === Node.DOCUMENT_NODE)) {
        const id = root.id, temp_id = id ||
            '_selector_id_' + String(Math.random()).slice(2) + $$temp();
        selector = selector.replace(/:scope/g, '#' + temp_id);
        !id && root.setAttribute('id', temp_id);
        result = root.parentNode.querySelectorAll(selector);
        if (!id) {
            root.removeAttribute('id');
        }
    }
    else {
        result = root.querySelectorAll(selector);
    }
    return [].slice.call(result);
}
/**
 * Calculate XPath selector
 */
const getXPathByElement = (element, root) => {
    if (!element || element.nodeType !== Node.ELEMENT_NODE) {
        return '';
    }
    if (!element.parentNode || root === element) {
        return '';
    }
    if (element.id) {
        return "//*[@id='" + element.id + "']";
    }
    const sames = [].filter.call(element.parentNode.childNodes, (x) => x.nodeName === element.nodeName);
    return (getXPathByElement(element.parentNode, root) +
        '/' +
        element.nodeName.toLowerCase() +
        (sames.length > 1
            ? '[' + ((0,jodit_core_helpers_array_to_array__WEBPACK_IMPORTED_MODULE_3__/* .toArray */ .q)(sames).indexOf(element) + 1) + ']'
            : ''));
};
/**
 * Find all `ref` or `data-ref` elements inside HTMLElement
 */
const refs = (root) => {
    if (jodit_core_component_component__WEBPACK_IMPORTED_MODULE_5__/* .Component */ .w.isInstanceOf(root, jodit_core_ui_element__WEBPACK_IMPORTED_MODULE_4__/* .UIElement */ .u)) {
        root = root.container;
    }
    return $$('[ref],[data-ref]', root).reduce((def, child) => {
        const key = (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.attr)(child, '-ref');
        if (key && (0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_6__/* .isString */ .H)(key)) {
            def[(0,jodit_core_helpers_string_camel_case__WEBPACK_IMPORTED_MODULE_7__/* .camelCase */ .e)(key)] = child;
            def[key] = child;
        }
        return def;
    }, {});
};
/**
 * Calculate full CSS selector
 */
const cssPath = (el) => {
    if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isElement(el)) {
        return null;
    }
    const path = [];
    let start = el;
    while (start && start.nodeType === Node.ELEMENT_NODE) {
        let selector = start.nodeName.toLowerCase();
        if (start.id) {
            selector += '#' + start.id;
            path.unshift(selector);
            break;
        }
        else {
            let sib = start, nth = 1;
            do {
                sib = sib.previousElementSibling;
                if (sib && sib.nodeName.toLowerCase() === selector) {
                    nth++;
                }
            } while (sib);
            selector += ':nth-of-type(' + nth + ')';
        }
        path.unshift(selector);
        start = start.parentNode;
    }
    return path.join(' > ');
};
/**
 * Try to find element by selector
 */
function resolveElement(element, od) {
    let resolved = element;
    if ((0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_6__/* .isString */ .H)(element)) {
        try {
            resolved = od.querySelector(element);
        }
        catch (_a) {
            throw (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.error)('String "' + element + '" should be valid HTML selector');
        }
    }
    // Duck checking
    if (!resolved ||
        typeof resolved !== 'object' ||
        !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isElement(resolved) ||
        !resolved.cloneNode) {
        throw (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.error)('Element "' + element + '" should be string or HTMLElement instance');
    }
    return resolved;
}


/***/ }),

/***/ 49155:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   t: function() { return /* binding */ set; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2926);
/* harmony import */ var jodit_core_helpers_checker_is_numeric__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(57947);
/* harmony import */ var jodit_core_helpers_checker_is_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(63738);
/* harmony import */ var jodit_core_helpers_checker_is_plain_object__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(45564);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




/**
 * Safe access in tree object
 *
 * @example
 * ```js
 * const a = {}, b = {};
 * Jodit.modules.Helpers.set('a.b.c.d.e', 1, a);
 * console.log(a);// {a: {b: {c: {d: {e: 1}}}}}
 *
 * Jodit.modules.Helpers.set('a.0.e', 1, b);
 * console.log(b);// {a: [{e: 1}]}
 * ```
 */
function set(chain, value, obj) {
    if (!(0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_0__/* .isString */ .H)(chain) || !chain.length) {
        return;
    }
    const parts = chain.split('.');
    let result = obj, key = parts[0];
    for (let i = 0; i < parts.length - 1; i += 1) {
        key = parts[i];
        if (!(0,jodit_core_helpers_checker_is_array__WEBPACK_IMPORTED_MODULE_1__/* .isArray */ .k)(result[key]) && !(0,jodit_core_helpers_checker_is_plain_object__WEBPACK_IMPORTED_MODULE_2__/* .isPlainObject */ .P)(result[key])) {
            result[key] = (0,jodit_core_helpers_checker_is_numeric__WEBPACK_IMPORTED_MODULE_3__/* .isNumeric */ .k)(parts[i + 1]) ? [] : {};
        }
        result = result[key];
    }
    if (result) {
        result[parts[parts.length - 1]] = value;
    }
}


/***/ }),

/***/ 56114:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   l: function() { return /* binding */ LimitedStack; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
class LimitedStack {
    constructor(limit) {
        this.limit = limit;
        this.stack = [];
    }
    push(item) {
        this.stack.push(item);
        if (this.stack.length > this.limit) {
            this.stack.shift();
        }
        return this;
    }
    pop() {
        return this.stack.pop();
    }
    find(clb) {
        return this.stack.find(clb);
    }
}


/***/ }),

/***/ 87398:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C6: function() { return /* binding */ callPromise; },
/* harmony export */   MN: function() { return /* binding */ markOwner; },
/* harmony export */   RE: function() { return /* binding */ call; },
/* harmony export */   XP: function() { return /* binding */ keys; },
/* harmony export */   po: function() { return /* binding */ loadImage; },
/* harmony export */   qu: function() { return /* binding */ getDataTransfer; },
/* harmony export */   u3: function() { return /* binding */ memorizeExec; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_promise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(59862);
/* harmony import */ var jodit_core_helpers_checker_is_void__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(41240);
/* harmony import */ var _data_bind__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(25920);
/* harmony import */ var _attr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(23144);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




/**
 * Call function with parameters
 *
 * @example
 * ```js
 * const f = Math.random();
 * Jodit.modules.Helpers.call(f > 0.5 ? Math.ceil : Math.floor, f);
 * ```
 */
function call(func, ...args) {
    return func(...args);
}
/**
 * Mark element for debugging
 */
function markOwner(jodit, elm) {
    (0,_attr__WEBPACK_IMPORTED_MODULE_1__/* .attr */ .L)(elm, 'data-editor_id', jodit.id);
    !elm.component &&
        Object.defineProperty(elm, 'jodit', {
            value: jodit
        });
}
function callPromise(condition, callback) {
    if ((0,jodit_core_helpers_checker_is_promise__WEBPACK_IMPORTED_MODULE_2__/* .isPromise */ .t)(condition)) {
        return condition.finally(callback);
    }
    return callback();
}
/**
 * Allow load image in promise
 */
const loadImage = (src, jodit) => jodit.async.promise((res, rej) => {
    const image = new Image(), onError = () => {
        jodit.e.off(image);
        rej === null || rej === void 0 ? void 0 : rej();
    }, onSuccess = () => {
        jodit.e.off(image);
        res(image);
    };
    jodit.e
        .one(image, 'load', onSuccess)
        .one(image, 'error', onError)
        .one(image, 'abort', onError);
    image.src = src;
    if (image.complete) {
        onSuccess();
    }
});
const keys = (obj, own = true) => {
    if (own) {
        return Object.keys(obj);
    }
    const props = [];
    for (const key in obj) {
        props.push(key);
    }
    return props;
};
/**
 * Memorize last user chose
 */
const memorizeExec = (editor, _, { control }, preProcessValue) => {
    var _a;
    const key = `button${control.command}`;
    let value = (_a = (control.args && control.args[0])) !== null && _a !== void 0 ? _a : (0,_data_bind__WEBPACK_IMPORTED_MODULE_0__/* .dataBind */ .q)(editor, key);
    if ((0,jodit_core_helpers_checker_is_void__WEBPACK_IMPORTED_MODULE_3__/* .isVoid */ .n)(value)) {
        return false;
    }
    (0,_data_bind__WEBPACK_IMPORTED_MODULE_0__/* .dataBind */ .q)(editor, key, value);
    if (preProcessValue) {
        value = preProcessValue(value);
    }
    editor.execCommand(control.command, false, value !== null && value !== void 0 ? value : undefined);
};
/**
 * Get DataTransfer from different event types
 */
const getDataTransfer = (event) => {
    if (event.clipboardData) {
        return event.clipboardData;
    }
    try {
        return event.dataTransfer || new DataTransfer();
    }
    catch (_a) {
        return null;
    }
};


/***/ }),

/***/ 97800:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   S: function() { return /* binding */ init; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(78157);
/* harmony import */ var _load__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3223);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(79102);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




/**
 * Init plugin if it has not dependencies in another case wait requires plugins will be init
 * @private
 */
function init(jodit, pluginName, plugin, instance, doneList, waitingList) {
    if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isInitable */ .Gu)(instance)) {
        try {
            instance.init(jodit);
        }
        catch (e) {
            console.error(e);
            if (!jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.IS_PROD) {
                throw e;
            }
        }
    }
    doneList.set(pluginName, instance);
    waitingList.delete(pluginName);
    if (instance.hasStyle) {
        (0,_load__WEBPACK_IMPORTED_MODULE_1__/* .loadStyle */ .X)(jodit, pluginName).catch(e => {
            !jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.IS_PROD && console.error(e);
        });
    }
    if (instance.styles) {
        const style = (0,jodit_core_global__WEBPACK_IMPORTED_MODULE_3__/* .getContainer */ .ZO)(jodit, pluginName, 'style');
        style.innerHTML = instance.styles;
    }
}


/***/ }),

/***/ 3223:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   X: function() { return /* binding */ loadStyle; },
/* harmony export */   z: function() { return /* binding */ loadExtras; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_helpers_utils_append_script__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(92665);
/* harmony import */ var jodit_core_helpers_string_kebab_case__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(13929);
/* harmony import */ var jodit_core_plugin_helpers_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(19653);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62924);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */





const styles = new Set();
/**
 * @private
 */
function loadStyle(jodit, pluginName) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_2__/* .__awaiter */ .mG)(this, void 0, void 0, function* () {
        const url = getFullUrl(jodit, pluginName, false);
        if (styles.has(url)) {
            return;
        }
        styles.add(url);
        return (0,jodit_core_helpers_utils_append_script__WEBPACK_IMPORTED_MODULE_0__/* .appendStyleAsync */ .Nf)(jodit, url);
    });
}
/**
 * Call full url to the script or style file
 * @private
 */
function getFullUrl(jodit, name, js) {
    name = (0,jodit_core_helpers_string_kebab_case__WEBPACK_IMPORTED_MODULE_3__/* .kebabCase */ .G)(name);
    return (jodit.basePath +
        'plugins/' +
        name +
        '/' +
        name +
        '.' +
        (js ? 'js' : 'css'));
}
/**
 * @private
 */
function loadExtras(items, jodit, extrasList, callback) {
    try {
        const needLoadExtras = extrasList.filter(extra => !items.has((0,jodit_core_plugin_helpers_utils__WEBPACK_IMPORTED_MODULE_4__/* .normalizeName */ .B)(extra.name)));
        if (needLoadExtras.length) {
            load(jodit, needLoadExtras, callback);
        }
    }
    catch (e) {
        if (!jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.IS_PROD) {
            throw e;
        }
    }
}
/**
 * Download plugins
 * @private
 */
function load(jodit, pluginList, callback) {
    pluginList.map(extra => {
        const url = extra.url || getFullUrl(jodit, extra.name, true);
        return (0,jodit_core_helpers_utils_append_script__WEBPACK_IMPORTED_MODULE_0__/* .appendScriptAsync */ .JL)(jodit, url)
            .then(callback)
            .catch(() => null);
    });
}


/***/ }),

/***/ 7561:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: function() { return /* binding */ makeInstance; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(69099);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62924);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/**
 * Create instance of plugin
 * @private
 */
function makeInstance(jodit, plugin) {
    try {
        try {
            // @ts-ignore
            return (0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_1__/* .isFunction */ .m)(plugin) ? new plugin(jodit) : plugin;
        }
        catch (e) {
            if ((0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_1__/* .isFunction */ .m)(plugin) && !plugin.prototype) {
                return plugin(jodit);
            }
        }
    }
    catch (e) {
        console.error(e);
        if (!jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.IS_PROD) {
            throw e;
        }
    }
    return null;
}


/***/ }),

/***/ 19653:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   B: function() { return /* binding */ normalizeName; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_string_kebab_case__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13929);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module plugin
 */

/**
 * @private
 */
function normalizeName(name) {
    return (0,jodit_core_helpers_string_kebab_case__WEBPACK_IMPORTED_MODULE_0__/* .kebabCase */ .G)(name).toLowerCase();
}


/***/ }),

/***/ 7331:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   S: function() { return /* reexport safe */ _plugin__WEBPACK_IMPORTED_MODULE_1__.S; }
/* harmony export */ });
/* harmony import */ var _plugin_system__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(41978);
/* harmony import */ var _plugin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(97651);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module plugin
 */




/***/ }),

/***/ 41978:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   h: function() { return /* binding */ PluginSystem; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(78157);
/* harmony import */ var jodit_core_helpers_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8131);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(79102);
/* harmony import */ var jodit_core_plugin_helpers_load__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(3223);
/* harmony import */ var jodit_core_plugin_helpers_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(19653);
/* harmony import */ var jodit_core_plugin_helpers_make_instance__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7561);
/* harmony import */ var jodit_core_plugin_helpers_init_instance__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(97800);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(62924);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */









/**
 * Jodit plugin system
 * @example
 * ```js
 * Jodit.plugins.add('emoji2', {
 * 	init() {
 *  	alert('emoji Inited2')
 * 	},
 *	destruct() {}
 * });
 * ```
 */
class PluginSystem {
    constructor() {
        this.__items = new Map();
    }
    /**
     * Add plugin in store
     */
    add(name, plugin) {
        this.__items.set((0,jodit_core_plugin_helpers_utils__WEBPACK_IMPORTED_MODULE_7__/* .normalizeName */ .B)(name), plugin);
        jodit_core_global__WEBPACK_IMPORTED_MODULE_2__/* .eventEmitter */ .TB.fire(`plugin:${name}:ready`);
    }
    /**
     * Get plugin from store
     */
    get(name) {
        return this.__items.get((0,jodit_core_plugin_helpers_utils__WEBPACK_IMPORTED_MODULE_7__/* .normalizeName */ .B)(name));
    }
    /**
     * Remove plugin from store
     */
    remove(name) {
        this.__items.delete((0,jodit_core_plugin_helpers_utils__WEBPACK_IMPORTED_MODULE_7__/* .normalizeName */ .B)(name));
    }
    __getFullPluginsList(filter) {
        const results = [];
        this.__items.forEach((plugin, name) => {
            if (!filter || filter.has(name)) {
                results.push([name, plugin]);
            }
        });
        return results;
    }
    /**
     * Public method for async init all plugins
     */
    __init(jodit) {
        const { extrasList, disableList, filter } = getSpecialLists(jodit);
        const doneList = new Map();
        const pluginsMap = {};
        const waitingList = new Set();
        jodit.__plugins = pluginsMap;
        const initPlugins = () => {
            if (jodit.isInDestruct) {
                return;
            }
            let commit = false;
            this.__getFullPluginsList(filter).forEach(([name, plugin]) => {
                if (disableList.has(name) || doneList.has(name)) {
                    return;
                }
                const requires = plugin === null || plugin === void 0 ? void 0 : plugin.requires;
                if (requires && (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isArray */ .kJ)(requires) && requires.length) {
                    if (requires.some(req => disableList.has(req))) {
                        return;
                    }
                    if (!requires.every(name => doneList.has(name))) {
                        waitingList.add(name);
                        return;
                    }
                }
                commit = true;
                const instance = (0,jodit_core_plugin_helpers_make_instance__WEBPACK_IMPORTED_MODULE_4__/* .makeInstance */ .a)(jodit, plugin);
                if (!instance) {
                    doneList.set(name, null);
                    waitingList.delete(name);
                    return;
                }
                (0,jodit_core_plugin_helpers_init_instance__WEBPACK_IMPORTED_MODULE_5__/* .init */ .S)(jodit, name, plugin, instance, doneList, waitingList);
                pluginsMap[name] = instance;
            });
            if (commit) {
                jodit.e.fire('updatePlugins');
                initPlugins();
            }
        };
        if (!extrasList || !extrasList.length) {
            (0,jodit_core_plugin_helpers_load__WEBPACK_IMPORTED_MODULE_3__/* .loadExtras */ .z)(this.__items, jodit, extrasList, initPlugins);
        }
        initPlugins();
        bindOnBeforeDestruct(jodit, pluginsMap);
        if (!jodit_core_constants__WEBPACK_IMPORTED_MODULE_6__.IS_PROD && waitingList.size) {
            console.warn('After init plugin waiting list is not clean:', waitingList);
        }
    }
    /**
     * Returns the promise to wait for the plugin to load.
     */
    wait(name) {
        return new Promise((resolve) => {
            if (this.get(name)) {
                return resolve();
            }
            const onReady = () => {
                resolve();
                jodit_core_global__WEBPACK_IMPORTED_MODULE_2__/* .eventEmitter */ .TB.off(`plugin:${name}:ready`, onReady);
            };
            jodit_core_global__WEBPACK_IMPORTED_MODULE_2__/* .eventEmitter */ .TB.on(`plugin:${name}:ready`, onReady);
        });
    }
}
/**
 * Destroy all plugins before - Jodit will be destroyed
 */
function bindOnBeforeDestruct(jodit, plugins) {
    jodit.e.on('beforeDestruct', () => {
        Object.keys(plugins).forEach(name => {
            const instance = plugins[name];
            if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isDestructable */ .Z$)(instance)) {
                instance.destruct(jodit);
            }
            delete plugins[name];
        });
        delete jodit.__plugins;
    });
}
function getSpecialLists(jodit) {
    const extrasList = jodit.o.extraPlugins.map(s => (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isString */ .HD)(s) ? { name: s } : s);
    const disableList = new Set((0,jodit_core_helpers_array__WEBPACK_IMPORTED_MODULE_1__/* .splitArray */ .C1)(jodit.o.disablePlugins).map(jodit_core_plugin_helpers_utils__WEBPACK_IMPORTED_MODULE_7__/* .normalizeName */ .B));
    const filter = jodit.o.safeMode ? new Set(jodit.o.safePluginsList) : null;
    return { extrasList, disableList, filter };
}


/***/ }),

/***/ 97651:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   S: function() { return /* binding */ Plugin; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2581);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_helpers_checker_is_jodit_object__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8133);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




class Plugin extends jodit_core_component__WEBPACK_IMPORTED_MODULE_0__/* .ViewComponent */ .Hr {
    /** @override */
    className() {
        return 'Plugin';
    }
    constructor(jodit) {
        super(jodit);
        /** @override */
        this.buttons = [];
        /**
         * Plugin have CSS style and it should be loaded
         */
        this.hasStyle = false;
        this.__inited = false;
        jodit.e
            .on('afterPluginSystemInit', this.__afterPluginSystemInit)
            .on('afterInit', this.__afterInit)
            .on('beforeDestruct', this.__beforeDestruct);
    }
    __afterPluginSystemInit() {
        const { j, buttons } = this;
        if (buttons && (0,jodit_core_helpers_checker_is_jodit_object__WEBPACK_IMPORTED_MODULE_2__/* .isJoditObject */ .Z)(j)) {
            buttons.forEach(btn => {
                j.registerButton(btn);
            });
        }
    }
    __afterInit() {
        this.__inited = true;
        this.setStatus(jodit_core_component__WEBPACK_IMPORTED_MODULE_0__/* .STATUSES */ .n$.ready);
        this.afterInit(this.jodit);
    }
    init(jodit) {
        // empty
    }
    __beforeDestruct() {
        var _a;
        if (this.isInDestruct) {
            return;
        }
        const { j } = this;
        j.e
            .off('afterPluginSystemInit', this.__afterPluginSystemInit)
            .off('afterInit', this.__afterInit)
            .off('beforeDestruct', this.destruct);
        this.setStatus(jodit_core_component__WEBPACK_IMPORTED_MODULE_0__/* .STATUSES */ .n$.beforeDestruct);
        if (!this.__inited) {
            return super.destruct();
        }
        if ((0,jodit_core_helpers_checker_is_jodit_object__WEBPACK_IMPORTED_MODULE_2__/* .isJoditObject */ .Z)(j)) {
            (_a = this.buttons) === null || _a === void 0 ? void 0 : _a.forEach(btn => {
                j === null || j === void 0 ? void 0 : j.unregisterButton(btn);
            });
        }
        this.beforeDestruct(this.j);
        super.destruct();
    }
}
Plugin.requires = [];
(0,tslib__WEBPACK_IMPORTED_MODULE_3__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.autobind
], Plugin.prototype, "__afterPluginSystemInit", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.autobind
], Plugin.prototype, "__afterInit", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.autobind
], Plugin.prototype, "__beforeDestruct", null);


/***/ }),

/***/ 29471:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   t: function() { return /* binding */ Ajax; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(97582);
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_helpers_utils_error__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(60701);
/* harmony import */ var jodit_core_async__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76731);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(13666);
/* harmony import */ var _response__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(72504);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(58453);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */








class Ajax {
    className() {
        return 'Ajax';
    }
    constructor(options, defaultAjaxOptions = jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.defaultAjaxOptions) {
        this.__async = new jodit_core_async__WEBPACK_IMPORTED_MODULE_2__/* .Async */ .e();
        this.__isFulfilled = false;
        this.__activated = false;
        this.__isDestructed = false;
        this.options = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.ConfigProto)(options || {}, defaultAjaxOptions);
        this.xhr = this.o.xhr ? this.o.xhr() : new XMLHttpRequest();
    }
    __buildParams(obj, prefix) {
        if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isPlainObject)(obj) &&
            this.options.contentType &&
            this.options.contentType.includes('application/json')) {
            return JSON.stringify(obj);
        }
        if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isFunction)(this.o.queryBuild)) {
            return this.o.queryBuild.call(this, obj, prefix);
        }
        if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isString)(obj) ||
            obj instanceof window.FormData ||
            (typeof obj === 'object' && obj != null && (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isFunction)(obj.append))) {
            return obj;
        }
        return (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.buildQuery)(obj);
    }
    get o() {
        return this.options;
    }
    abort() {
        if (this.__isFulfilled) {
            return this;
        }
        try {
            this.__isFulfilled = true;
            this.xhr.abort();
        }
        catch (_a) { }
        return this;
    }
    send() {
        this.__activated = true;
        const { xhr, o } = this;
        const request = this.prepareRequest();
        return this.__async.promise((resolve, reject) => (0,tslib__WEBPACK_IMPORTED_MODULE_5__/* .__awaiter */ .mG)(this, void 0, void 0, function* () {
            var _a;
            const onReject = () => {
                this.__isFulfilled = true;
                reject(jodit_core_helpers_utils_error__WEBPACK_IMPORTED_MODULE_6__/* .connection */ .ZI('Connection error'));
            };
            const onResolve = () => {
                this.__isFulfilled = true;
                resolve(new _response__WEBPACK_IMPORTED_MODULE_7__/* .Response */ .H(request, xhr.status, xhr.statusText, !xhr.responseType ? xhr.responseText : xhr.response));
            };
            xhr.onload = onResolve;
            xhr.onabort = () => {
                this.__isFulfilled = true;
                reject(jodit_core_helpers_utils_error__WEBPACK_IMPORTED_MODULE_6__/* .abort */ .JG('Abort connection'));
            };
            xhr.onerror = onReject;
            xhr.ontimeout = onReject;
            if (o.responseType) {
                xhr.responseType = o.responseType;
            }
            xhr.onprogress = (e) => {
                var _a, _b;
                let percentComplete = 0;
                if (e.lengthComputable) {
                    percentComplete = (e.loaded / e.total) * 100;
                }
                (_b = (_a = this.options).onProgress) === null || _b === void 0 ? void 0 : _b.call(_a, percentComplete);
            };
            xhr.onreadystatechange = () => {
                var _a, _b;
                (_b = (_a = this.options).onProgress) === null || _b === void 0 ? void 0 : _b.call(_a, 10);
                if (xhr.readyState === XMLHttpRequest.DONE) {
                    if (o.successStatuses.includes(xhr.status)) {
                        onResolve();
                    }
                    else if (xhr.statusText) {
                        this.__isFulfilled = true;
                        reject(jodit_core_helpers_utils_error__WEBPACK_IMPORTED_MODULE_6__/* .connection */ .ZI(xhr.statusText));
                    }
                }
            };
            xhr.withCredentials = (_a = o.withCredentials) !== null && _a !== void 0 ? _a : false;
            const { url, data, method } = request;
            xhr.open(method, url, true);
            if (o.contentType && xhr.setRequestHeader) {
                xhr.setRequestHeader('Content-type', o.contentType);
            }
            let { headers } = o;
            if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isFunction)(headers)) {
                headers = yield headers.call(this);
            }
            if (headers && xhr.setRequestHeader) {
                Object.keys(headers).forEach(key => {
                    xhr.setRequestHeader(key, headers[key]);
                });
            }
            // IE
            this.__async.setTimeout(() => {
                xhr.send(data ? this.__buildParams(data) : undefined);
            }, 0);
        }));
    }
    prepareRequest() {
        if (!this.o.url) {
            throw jodit_core_helpers_utils_error__WEBPACK_IMPORTED_MODULE_6__/* .error */ .vU('Need URL for AJAX request');
        }
        let url = this.o.url;
        const data = this.o.data;
        const method = (this.o.method || 'get').toLowerCase();
        if (method === 'get' && data && (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isPlainObject)(data)) {
            const qIndex = url.indexOf('?');
            if (qIndex !== -1) {
                const urlData = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.parseQuery)(url);
                url =
                    url.substring(0, qIndex) +
                        '?' +
                        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.buildQuery)(Object.assign(Object.assign({}, urlData), data));
            }
            else {
                url += '?' + (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.buildQuery)(this.o.data);
            }
        }
        const request = {
            url,
            method,
            data
        };
        Ajax.log.splice(100);
        Ajax.log.push(request);
        return request;
    }
    destruct() {
        if (!this.__isDestructed) {
            this.__isDestructed = true;
            if (this.__activated && !this.__isFulfilled) {
                this.abort();
                this.__isFulfilled = true;
            }
            this.__async.destruct();
        }
    }
}
Ajax.log = [];
(0,tslib__WEBPACK_IMPORTED_MODULE_5__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__.autobind
], Ajax.prototype, "destruct", null);


/***/ }),

/***/ 58453:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.defaultAjaxOptions = {
    successStatuses: [200, 201, 202],
    method: 'GET',
    url: '',
    data: null,
    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
    headers: {
        'X-REQUESTED-WITH': 'XMLHttpRequest' // compatible with jQuery
    },
    withCredentials: false,
    xhr() {
        return new XMLHttpRequest();
    }
};


/***/ }),

/***/ 60072:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   H: function() { return /* reexport safe */ _response__WEBPACK_IMPORTED_MODULE_1__.H; },
/* harmony export */   t: function() { return /* reexport safe */ _ajax__WEBPACK_IMPORTED_MODULE_0__.t; }
/* harmony export */ });
/* harmony import */ var _ajax__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(29471);
/* harmony import */ var _response__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(72504);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module request
 */




/***/ }),

/***/ 72504:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   H: function() { return /* binding */ Response; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(97582);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

class Response {
    get url() {
        return this.request.url;
    }
    constructor(request, status, statusText, body) {
        this.request = request;
        this.status = status;
        this.statusText = statusText;
        this.body = body;
    }
    json() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_0__/* .__awaiter */ .mG)(this, void 0, void 0, function* () {
            return JSON.parse(this.body);
        });
    }
    text() {
        return Promise.resolve(this.body);
    }
    blob() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_0__/* .__awaiter */ .mG)(this, void 0, void 0, function* () {
            return this.body;
        });
    }
}


/***/ }),

/***/ 9105:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   F: function() { return /* reexport safe */ _move_node_inside_start__WEBPACK_IMPORTED_MODULE_0__.F; }
/* harmony export */ });
/* harmony import */ var _move_node_inside_start__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1658);
/* harmony import */ var _move_the_node_along_the_edge_outward__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60258);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module selection
 */




/***/ }),

/***/ 1658:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   F: function() { return /* binding */ moveNodeInsideStart; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62924);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/**
 * Moves the fake node inside the adjacent element if it lies next to it but not inside.
 * When the cursor is positioned in its place, it must be inside the element and not outside its border.
 * @private
 */
function moveNodeInsideStart(j, node, start) {
    let sibling = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.findSibling(node, start), anotherSibling = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.findSibling(node, !start);
    while (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isElement(sibling) &&
        !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(sibling, jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.INSEPARABLE_TAGS) &&
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isContentEditable(sibling, j.editor) &&
        (!anotherSibling || !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.closest(node, jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isElement, j.editor))) {
        if (start || !sibling.firstChild) {
            sibling.appendChild(node);
        }
        else {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.before(sibling.firstChild, node);
        }
        sibling = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.sibling(node, start);
        anotherSibling = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.sibling(node, !start);
    }
}


/***/ }),

/***/ 60258:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   f: function() { return /* binding */ moveTheNodeAlongTheEdgeOutward; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * Moves the fake node up until it encounters a non-empty sibling on the left(right)
 * @private
 */
function moveTheNodeAlongTheEdgeOutward(node, start, root) {
    let item = node;
    while (item && item !== root) {
        const sibling = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.findSibling(item, start);
        if (sibling) {
            return;
        }
        if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isBlock(item.parentElement)) {
            break;
        }
        item = item.parentElement;
        if (item && item !== root) {
            start ? jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.before(item, node) : jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.after(item, node);
        }
    }
    return;
}


/***/ }),

/***/ 64815:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   J5: function() { return /* reexport safe */ _style_commit_style__WEBPACK_IMPORTED_MODULE_0__.J5; },
/* harmony export */   Nc: function() { return /* reexport safe */ _style_commit_style__WEBPACK_IMPORTED_MODULE_0__.Nc; },
/* harmony export */   Qu: function() { return /* reexport safe */ _style_commit_style__WEBPACK_IMPORTED_MODULE_0__.Qu; },
/* harmony export */   RP: function() { return /* reexport safe */ _style_commit_style__WEBPACK_IMPORTED_MODULE_0__.RP; },
/* harmony export */   Y1: function() { return /* reexport safe */ _selection__WEBPACK_IMPORTED_MODULE_1__.Y; },
/* harmony export */   _X: function() { return /* reexport safe */ _style_commit_style__WEBPACK_IMPORTED_MODULE_0__._X; },
/* harmony export */   p: function() { return /* reexport safe */ _style_commit_style__WEBPACK_IMPORTED_MODULE_0__.p; }
/* harmony export */ });
/* harmony import */ var _style_commit_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(41254);
/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(46998);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module selection
 */




/***/ }),

/***/ 46998:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Y: function() { return /* binding */ Selection; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_selection_helpers_move_the_node_along_the_edge_outward__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(60258);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(52378);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(78157);
/* harmony import */ var _style_commit_style__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(41254);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */











class Selection {
    constructor(jodit) {
        this.jodit = jodit;
        jodit.e.on('removeMarkers', () => {
            this.removeMarkers();
        });
    }
    /**
     * Short alias for this.jodit
     */
    get j() {
        return this.jodit;
    }
    /**
     * Throw Error exception if parameter is not Node
     */
    errorNode(node) {
        if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isNode(node)) {
            throw (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.error)('Parameter node must be instance of Node');
        }
    }
    /**
     * Return current work place - for Jodit is Editor
     */
    get area() {
        return this.j.editor;
    }
    /**
     * Editor Window - it can be different for iframe mode
     */
    get win() {
        return this.j.ew;
    }
    /**
     * Current jodit editor doc
     */
    get doc() {
        return this.j.ed;
    }
    /**
     * Return current selection object
     */
    get sel() {
        if (this.j.o.shadowRoot &&
            (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_6__/* .isFunction */ .mf)(this.j.o.shadowRoot.getSelection)) {
            return this.j.o.shadowRoot.getSelection();
        }
        return this.win.getSelection();
    }
    /**
     * Return first selected range or create new
     */
    get range() {
        const sel = this.sel;
        return sel && sel.rangeCount ? sel.getRangeAt(0) : this.createRange();
    }
    /**
     * Checks if the selected text is currently inside the editor
     */
    get isInsideArea() {
        const { sel } = this;
        const range = (sel === null || sel === void 0 ? void 0 : sel.rangeCount) ? sel.getRangeAt(0) : null;
        return !(!range || !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isOrContains(this.area, range.startContainer));
    }
    /**
     * Return current selection object
     * @param select - Immediately add in selection
     */
    createRange(select = false) {
        const range = this.doc.createRange();
        if (select) {
            this.selectRange(range);
        }
        return range;
    }
    /**
     * Remove all selected content
     */
    remove() {
        const sel = this.sel, current = this.current();
        if (sel && current) {
            for (let i = 0; i < sel.rangeCount; i += 1) {
                sel.getRangeAt(i).deleteContents();
                sel.getRangeAt(i).collapse(true);
            }
        }
    }
    /**
     * Clear all selection
     */
    clear() {
        var _a, _b;
        if ((_a = this.sel) === null || _a === void 0 ? void 0 : _a.rangeCount) {
            (_b = this.sel) === null || _b === void 0 ? void 0 : _b.removeAllRanges();
        }
    }
    /**
     * Remove node element from editor
     */
    removeNode(node) {
        if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isOrContains(this.j.editor, node, true)) {
            throw (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.error)("Selection.removeNode can remove only editor's children");
        }
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(node);
        this.j.e.fire('afterRemoveNode', node);
    }
    /**
     * Insert the cursor to any point x, y
     *
     * @param x - Coordinate by horizontal
     * @param y - Coordinate by vertical
     * @returns false - Something went wrong
     */
    insertCursorAtPoint(x, y) {
        this.removeMarkers();
        try {
            const rng = this.createRange();
            (() => {
                if (this.doc.caretPositionFromPoint) {
                    const caret = this.doc.caretPositionFromPoint(x, y);
                    if (caret) {
                        rng.setStart(caret.offsetNode, caret.offset);
                        return;
                    }
                }
                if (this.doc.caretRangeFromPoint) {
                    const caret = this.doc.caretRangeFromPoint(x, y);
                    void 0;
                    rng.setStart(caret.startContainer, caret.startOffset);
                }
            })();
            rng.collapse(true);
            this.selectRange(rng);
            return true;
        }
        catch (_a) { }
        return false;
    }
    /**
     * Check if editor has selection markers
     */
    get hasMarkers() {
        return Boolean(this.markers.length);
    }
    /**
     * Check if editor has selection markers
     */
    get markers() {
        return (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.$$)('span[data-' + jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.MARKER_CLASS + ']', this.area);
    }
    /**
     * Remove all markers
     */
    removeMarkers() {
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove.apply(null, this.markers);
    }
    /**
     * Create marker element
     */
    marker(atStart = false, range) {
        let newRange = null;
        if (range) {
            newRange = range.cloneRange();
            newRange.collapse(atStart);
        }
        const marker = this.j.createInside.span();
        marker.id =
            jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.MARKER_CLASS +
                '_' +
                Number(new Date()) +
                '_' +
                String(Math.random()).slice(2);
        marker.style.lineHeight = '0';
        marker.style.display = 'none';
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.markTemporary(marker);
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.attr)(marker, 'data-' + jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.MARKER_CLASS, atStart ? 'start' : 'end');
        marker.appendChild(this.j.createInside.text(jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.INVISIBLE_SPACE));
        if (newRange) {
            if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isOrContains(this.area, atStart ? newRange.startContainer : newRange.endContainer)) {
                // Here need do unsafe inserting
                // Deny Dom.safeInsertNode(newRange, marker);
                // Apply style -> Test Style module -> Base apply -> For selection <p><strong>|test|</strong></p> apply style {"element":"em","style":{"fontStyle":"italic"}}
                newRange.insertNode(marker);
            }
        }
        return marker;
    }
    /**
     * Restores user selections using marker invisible elements in the DOM.
     */
    restore() {
        let range = false;
        const markAttr = (start) => `span[data-${jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.MARKER_CLASS}=${start ? 'start' : 'end'}]`;
        const start = this.area.querySelector(markAttr(true)), end = this.area.querySelector(markAttr(false));
        if (!start) {
            return;
        }
        range = this.createRange();
        if (!end) {
            const previousNode = start.previousSibling;
            if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(previousNode)) {
                range.setStart(previousNode, previousNode.nodeValue ? previousNode.nodeValue.length : 0);
            }
            else {
                range.setStartBefore(start);
            }
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(start);
            range.collapse(true);
        }
        else {
            range.setStartAfter(start);
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(start);
            range.setEndBefore(end);
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(end);
        }
        if (range) {
            this.selectRange(range);
        }
    }
    fakes() {
        const sel = this.sel;
        if (!sel || !sel.rangeCount) {
            return [];
        }
        const range = sel.getRangeAt(0);
        void 0;
        const left = range.cloneRange();
        left.collapse(true);
        const fakeLeft = this.j.createInside.fake();
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeInsertNode(left, fakeLeft);
        range.setStartBefore(fakeLeft);
        const result = [fakeLeft];
        if (!range.collapsed) {
            const right = range.cloneRange();
            right.collapse(false);
            const fakeRight = this.j.createInside.fake();
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeInsertNode(right, fakeRight);
            range.setEndAfter(fakeRight);
            result.push(fakeRight);
        }
        this.selectRange(range);
        return result;
    }
    restoreFakes(fakes) {
        var _a, _b, _c, _d;
        const nodes = fakes.filter(n => n.isConnected);
        if (!nodes.length) {
            return;
        }
        const [fakeLeft, fakeRight] = nodes;
        const range = this.createRange();
        range.setStartAfter(fakeLeft);
        if (fakeRight) {
            range.setEndBefore(fakeRight);
        }
        this.selectRange(range);
        if (((_a = fakeLeft.parentNode) === null || _a === void 0 ? void 0 : _a.firstChild) !== ((_b = fakeLeft.parentNode) === null || _b === void 0 ? void 0 : _b.lastChild)) {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(fakeLeft);
        }
        if (((_c = fakeRight === null || fakeRight === void 0 ? void 0 : fakeRight.parentNode) === null || _c === void 0 ? void 0 : _c.firstChild) !==
            ((_d = fakeRight === null || fakeRight === void 0 ? void 0 : fakeRight.parentNode) === null || _d === void 0 ? void 0 : _d.lastChild)) {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(fakeRight);
        }
    }
    /**
     * Saves selections using marker invisible elements in the DOM.
     * @param silent - Do not change current range
     */
    save(silent = false) {
        if (this.hasMarkers) {
            return [];
        }
        const sel = this.sel;
        if (!sel || !sel.rangeCount) {
            return [];
        }
        const info = [], length = sel.rangeCount, ranges = [];
        for (let i = 0; i < length; i += 1) {
            ranges[i] = sel.getRangeAt(i);
            if (ranges[i].collapsed) {
                const start = this.marker(true, ranges[i]);
                info[i] = {
                    startId: start.id,
                    collapsed: true,
                    startMarker: start.outerHTML
                };
            }
            else {
                const start = this.marker(true, ranges[i]);
                const end = this.marker(false, ranges[i]);
                info[i] = {
                    startId: start.id,
                    endId: end.id,
                    collapsed: false,
                    startMarker: start.outerHTML,
                    endMarker: end.outerHTML
                };
            }
        }
        if (!silent) {
            sel.removeAllRanges();
            for (let i = length - 1; i >= 0; --i) {
                const startElm = this.doc.getElementById(info[i].startId);
                if (!startElm) {
                    continue;
                }
                if (info[i].collapsed) {
                    ranges[i].setStartAfter(startElm);
                    ranges[i].collapse(true);
                }
                else {
                    ranges[i].setStartBefore(startElm);
                    if (info[i].endId) {
                        const endElm = this.doc.getElementById(info[i].endId);
                        if (endElm) {
                            ranges[i].setEndAfter(endElm);
                        }
                    }
                }
                try {
                    sel.addRange(ranges[i].cloneRange());
                }
                catch (_a) { }
            }
        }
        return info;
    }
    /**
     * Set focus in editor
     */
    focus(options = {
        preventScroll: true
    }) {
        var _a, _b;
        if (!this.isFocused()) {
            const scrollParent = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.getScrollParent)(this.j.container), scrollTop = scrollParent === null || scrollParent === void 0 ? void 0 : scrollParent.scrollTop;
            if (this.j.iframe) {
                if (this.doc.readyState === 'complete') {
                    this.j.iframe.focus(options);
                }
            }
            this.win.focus();
            this.area.focus(options);
            if (scrollTop && (scrollParent === null || scrollParent === void 0 ? void 0 : scrollParent.scrollTo)) {
                scrollParent.scrollTo(0, scrollTop);
            }
            const sel = this.sel, range = (sel === null || sel === void 0 ? void 0 : sel.rangeCount) ? sel === null || sel === void 0 ? void 0 : sel.getRangeAt(0) : null;
            if (!range || !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isOrContains(this.area, range.startContainer)) {
                const range = this.createRange();
                range.setStart(this.area, 0);
                range.collapse(true);
                this.selectRange(range, false);
            }
            if (!this.j.editorIsActive) {
                (_b = (_a = this.j) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.fire('focus');
            }
            return true;
        }
        return false;
    }
    /**
     * Checks whether the current selection is something or just set the cursor is
     * @returns true Selection does't have content
     */
    isCollapsed() {
        const sel = this.sel;
        for (let r = 0; sel && r < sel.rangeCount; r += 1) {
            if (!sel.getRangeAt(r).collapsed) {
                return false;
            }
        }
        return true;
    }
    /**
     * Checks whether the editor currently in focus
     */
    isFocused() {
        return (this.doc.hasFocus &&
            this.doc.hasFocus() &&
            this.area === this.doc.activeElement);
    }
    /**
     * Returns the current element under the cursor inside editor
     */
    current(checkChild = true) {
        if (this.j.getRealMode() === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.MODE_WYSIWYG) {
            const sel = this.sel;
            if (!sel || sel.rangeCount === 0) {
                return null;
            }
            const range = sel.getRangeAt(0);
            let node = range.startContainer, rightMode = false;
            const child = (nd) => rightMode ? nd.lastChild : nd.firstChild;
            if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTag(node, 'br') && sel.isCollapsed) {
                return node;
            }
            if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(node)) {
                node = range.startContainer.childNodes[range.startOffset];
                if (!node) {
                    node =
                        range.startContainer.childNodes[range.startOffset - 1];
                    rightMode = true;
                }
                if (node && sel.isCollapsed && !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(node)) {
                    // test Current method - Cursor in the left of some SPAN
                    if (!rightMode && jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(node.previousSibling)) {
                        node = node.previousSibling;
                    }
                    else if (checkChild) {
                        let current = child(node);
                        while (current) {
                            if (current && jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(current)) {
                                node = current;
                                break;
                            }
                            current = child(current);
                        }
                    }
                }
                if (node && !sel.isCollapsed && !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(node)) {
                    let leftChild = node, rightChild = node;
                    do {
                        leftChild = leftChild.firstChild;
                        rightChild = rightChild.lastChild;
                    } while (leftChild && rightChild && !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(leftChild));
                    if (leftChild === rightChild &&
                        leftChild &&
                        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(leftChild)) {
                        node = leftChild;
                    }
                }
            }
            // check - cursor inside editor
            if (node && jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isOrContains(this.area, node)) {
                return node;
            }
        }
        return null;
    }
    /**
     * Insert element in editor
     *
     * @param insertCursorAfter - After insert, cursor will move after element
     * @param fireChange - After insert, editor fire change event. You can prevent this behavior
     */
    insertNode(node, insertCursorAfter = true, fireChange = true) {
        this.errorNode(node);
        const child = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isFragment(node) ? node.lastChild : node;
        this.j.e.fire('safeHTML', node);
        if (!this.isFocused() && this.j.isEditorMode()) {
            this.focus();
            this.restore();
        }
        const sel = this.sel;
        this.j.history.snapshot.transaction(() => {
            if (!this.isCollapsed()) {
                this.j.execCommand('Delete');
            }
            this.j.e.fire('beforeInsertNode', node);
            if (sel && sel.rangeCount) {
                const range = sel.getRangeAt(0);
                if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isOrContains(this.area, range.commonAncestorContainer)) {
                    jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeInsertNode(range, node);
                }
                else {
                    this.area.appendChild(node);
                }
            }
            else {
                this.area.appendChild(node);
            }
            const setCursor = (node) => {
                if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isBlock(node)) {
                    const child = node.lastChild;
                    if (child) {
                        return setCursor(child);
                    }
                }
                this.setCursorAfter(node);
            };
            if (insertCursorAfter) {
                if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isFragment(node)) {
                    child && setCursor(child);
                }
                else {
                    setCursor(node);
                }
            }
            if (this.j.o.scrollToPastedContent) {
                (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.scrollIntoViewIfNeeded)(child !== null && child !== void 0 ? child : node, this.j.editor, this.doc);
            }
        });
        if (fireChange && this.j.events) {
            this.j.__imdSynchronizeValues();
        }
        if (this.j.events) {
            this.j.e.fire('afterInsertNode', jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isFragment(node) ? child : node);
        }
    }
    /**
     * Inserts in the current cursor position some HTML snippet
     *
     * @param html - HTML The text to be inserted into the document
     * @example
     * ```javascript
     * parent.s.insertHTML('<img src="image.png"/>');
     * ```
     */
    insertHTML(html, insertCursorAfter = true) {
        if (html === '') {
            return;
        }
        const node = this.j.createInside.div();
        const fragment = this.j.createInside.fragment();
        let lastChild;
        if (!this.isFocused() && this.j.isEditorMode()) {
            this.focus();
            this.restore();
        }
        if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isNode(html)) {
            node.innerHTML = html.toString();
        }
        else {
            node.appendChild(html);
        }
        if (!this.j.isEditorMode() &&
            this.j.e.fire('insertHTML', node.innerHTML) === false) {
            return;
        }
        lastChild = node.lastChild;
        if (!lastChild) {
            return;
        }
        while (node.firstChild) {
            lastChild = node.firstChild;
            fragment.appendChild(node.firstChild);
        }
        this.insertNode(fragment, insertCursorAfter, false);
        // There is no need to use synchronizeValues because you need to apply the changes immediately
        this.j.__imdSynchronizeValues();
    }
    /**
     * Insert image in editor
     *
     * @param url - URL for image, or HTMLImageElement
     * @param styles - If specified, it will be applied <code>$(image).css(styles)</code>
     */
    insertImage(url, styles = null, defaultWidth = null) {
        const image = (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_6__/* .isString */ .HD)(url) ? this.j.createInside.element('img') : url;
        if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_6__/* .isString */ .HD)(url)) {
            image.setAttribute('src', url);
        }
        if (defaultWidth != null) {
            let dw = defaultWidth.toString();
            if (dw &&
                'auto' !== dw &&
                String(dw).indexOf('px') < 0 &&
                String(dw).indexOf('%') < 0) {
                dw += 'px';
            }
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.call)(
            // @ts-ignore
            this.j.o.resizer.forImageChangeAttributes ? jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.attr : jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css, image, 'width', 
            // @ts-ignore
            dw);
        }
        if (styles && typeof styles === 'object') {
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css)(image, styles);
        }
        const onload = () => {
            if (image.naturalHeight < image.offsetHeight ||
                image.naturalWidth < image.offsetWidth) {
                image.style.width = '';
                image.style.height = '';
            }
            image.removeEventListener('load', onload);
        };
        this.j.e.on(image, 'load', onload);
        if (image.complete) {
            onload();
        }
        this.insertNode(image);
        /**
         * Triggered after image was inserted [[Select.insertImage]]. This method can executed from
         * [[FileBrowser]] or [[Uploader]]
         * @example
         * ```javascript
         * var editor = Jodit.make("#redactor");
         * editor.e.on('afterInsertImage', function (image) {
         *     image.className = 'bloghead4';
         * });
         * ```
         */
        this.j.e.fire('afterInsertImage', image);
    }
    /**
     * Call callback for all selection node
     */
    eachSelection(callback) {
        var _a;
        const sel = this.sel;
        if (sel && sel.rangeCount) {
            const range = sel.getRangeAt(0);
            let root = range.commonAncestorContainer;
            if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isHTMLElement(root)) {
                root = root.parentElement;
            }
            const nodes = [], startOffset = range.startOffset, length = root.childNodes.length, elementOffset = startOffset < length ? startOffset : length - 1;
            let start = range.startContainer === this.area
                ? root.childNodes[elementOffset]
                : range.startContainer, end = range.endContainer === this.area
                ? root.childNodes[range.endOffset - 1]
                : range.endContainer;
            if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(start) &&
                start === range.startContainer &&
                range.startOffset === ((_a = start.nodeValue) === null || _a === void 0 ? void 0 : _a.length) &&
                start.nextSibling) {
                start = start.nextSibling;
            }
            if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(end) &&
                end === range.endContainer &&
                range.endOffset === 0 &&
                end.previousSibling) {
                end = end.previousSibling;
            }
            const checkElm = (node) => {
                if (node &&
                    node !== root &&
                    !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isEmptyTextNode(node) &&
                    !(0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_6__/* .isMarker */ ._V)(node)) {
                    nodes.push(node);
                }
            };
            checkElm(start);
            if (start !== end && jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isOrContains(root, start, true)) {
                jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.find(start, node => {
                    checkElm(node);
                    // checks parentElement as well because partial selections are not equal to entire element
                    return (node === end ||
                        (node && node.contains && node.contains(end)));
                }, root, true, false);
            }
            const forEvery = (current) => {
                if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isOrContains(this.j.editor, current, true)) {
                    return;
                }
                if (current.nodeName.match(/^(UL|OL)$/)) {
                    return (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.toArray)(current.childNodes).forEach(forEvery);
                }
                if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTag(current, 'li')) {
                    if (current.firstChild) {
                        current = current.firstChild;
                    }
                    else {
                        const currentB = this.j.createInside.text(jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.INVISIBLE_SPACE);
                        current.appendChild(currentB);
                        current = currentB;
                    }
                }
                callback(current);
            };
            if (nodes.length === 0 && jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isEmptyTextNode(start)) {
                nodes.push(start);
            }
            if (nodes.length === 0 && start.firstChild) {
                nodes.push(start.firstChild);
            }
            nodes.forEach(forEvery);
        }
    }
    /**
     * Checks if the cursor is at the end(start) block
     *
     * @param  start - true - check whether the cursor is at the start block
     * @param parentBlock - Find in this
     * @param fake - Node for cursor position
     *
     * @returns true - the cursor is at the end(start) block, null - cursor somewhere outside
     */
    cursorInTheEdge(start, parentBlock, fake = null) {
        var _a, _b;
        const end = !start, range = (_a = this.sel) === null || _a === void 0 ? void 0 : _a.getRangeAt(0);
        fake !== null && fake !== void 0 ? fake : (fake = this.current(false));
        if (!range || !fake || !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isOrContains(parentBlock, fake, true)) {
            return null;
        }
        const container = start ? range.startContainer : range.endContainer;
        const offset = start ? range.startOffset : range.endOffset;
        const isSignificant = (elm) => Boolean(elm &&
            !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTag(elm, 'br') &&
            !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isEmptyTextNode(elm) &&
            !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTemporary(elm) &&
            !(jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isElement(elm) &&
                this.j.e.fire('isInvisibleForCursor', elm) === true));
        // check right offset
        if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(container)) {
            const text = ((_b = container.nodeValue) === null || _b === void 0 ? void 0 : _b.length) ? container.nodeValue : '';
            if (end && text.replace((0,jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.INVISIBLE_SPACE_REG_EXP_END)(), '').length > offset) {
                return false;
            }
            const inv = (0,jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.INVISIBLE_SPACE_REG_EXP_START)().exec(text);
            if (start &&
                ((inv && inv[0].length < offset) || (!inv && offset > 0))) {
                return false;
            }
        }
        else {
            const children = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.toArray)(container.childNodes);
            if (end) {
                if (children.slice(offset).some(isSignificant)) {
                    return false;
                }
            }
            else {
                if (children.slice(0, offset).some(isSignificant)) {
                    return false;
                }
            }
        }
        let next = fake;
        while (next && next !== parentBlock) {
            const nextOne = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.sibling(next, start);
            if (!nextOne) {
                next = next.parentNode;
                continue;
            }
            next = nextOne;
            if (next && isSignificant(next)) {
                return false;
            }
        }
        return true;
    }
    /**
     * Wrapper for cursorInTheEdge
     */
    cursorOnTheLeft(parentBlock, fake) {
        return this.cursorInTheEdge(true, parentBlock, fake);
    }
    /**
     * Wrapper for cursorInTheEdge
     */
    cursorOnTheRight(parentBlock, fake) {
        return this.cursorInTheEdge(false, parentBlock, fake);
    }
    /**
     * Set cursor after the node
     * @returns fake invisible textnode. After insert it can be removed
     */
    setCursorAfter(node) {
        return this.setCursorNearWith(node, false);
    }
    /**
     * Set cursor before the node
     * @returns fake invisible textnode. After insert it can be removed
     */
    setCursorBefore(node) {
        return this.setCursorNearWith(node, true);
    }
    /**
     * Add fake node for new cursor position
     */
    setCursorNearWith(node, inStart) {
        var _a, _b;
        this.errorNode(node);
        if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.up(node, (elm) => elm === this.area || (elm && elm.parentNode === this.area), this.area)) {
            throw (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.error)('Node element must be in editor');
        }
        const range = this.createRange();
        let fakeNode = null;
        if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(node)) {
            fakeNode = this.j.createInside.fake();
            inStart ? range.setStartBefore(node) : range.setEndAfter(node);
            range.collapse(inStart);
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeInsertNode(range, fakeNode);
            range.selectNode(fakeNode);
        }
        else {
            if (inStart) {
                range.setStart(node, 0);
            }
            else {
                range.setEnd(node, (_b = (_a = node.nodeValue) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0);
            }
        }
        range.collapse(inStart);
        this.selectRange(range);
        return fakeNode;
    }
    /**
     * Set cursor in the node
     * @param inStart - set cursor in start of element
     */
    setCursorIn(node, inStart = false) {
        this.errorNode(node);
        if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.up(node, (elm) => elm === this.area || (elm && elm.parentNode === this.area), this.area)) {
            throw (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.error)('Node element must be in editor');
        }
        const range = this.createRange();
        let start = node, last = node;
        do {
            if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(start) || jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTag(start, jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.INSEPARABLE_TAGS)) {
                break;
            }
            last = start;
            start = inStart ? start.firstChild : start.lastChild;
        } while (start);
        if (!start) {
            const fakeNode = this.j.createInside.text(jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.INVISIBLE_SPACE);
            if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTag(last, jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.INSEPARABLE_TAGS)) {
                last.appendChild(fakeNode);
                last = fakeNode;
            }
            else {
                start = last;
            }
        }
        const workElm = start || last;
        if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTag(workElm, jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.INSEPARABLE_TAGS)) {
            range.selectNodeContents(workElm);
            range.collapse(inStart);
        }
        else {
            inStart || jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTag(workElm, 'br')
                ? range.setStartBefore(workElm)
                : range.setEndAfter(workElm);
            range.collapse(inStart);
        }
        this.selectRange(range);
        return last;
    }
    /**
     * Set range selection
     */
    selectRange(range, focus = true) {
        const sel = this.sel;
        if (focus && !this.isFocused()) {
            this.focus();
        }
        if (sel) {
            sel.removeAllRanges();
            sel.addRange(range);
        }
        /**
         * Fired after change selection
         */
        this.j.e.fire('changeSelection');
        return this;
    }
    /**
     * Select node
     * @param inward - select all inside
     */
    select(node, inward = false) {
        this.errorNode(node);
        if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.up(node, (elm) => elm === this.area || (elm && elm.parentNode === this.area), this.area)) {
            throw (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.error)('Node element must be in editor');
        }
        const range = this.createRange();
        range[inward ? 'selectNodeContents' : 'selectNode'](node);
        return this.selectRange(range);
    }
    /**
     * Return current selected HTML
     * @example
     * ```javascript
     * const editor = Jodit.make();
     * console.log(editor.s.html); // html
     * console.log(Jodit.modules.Helpers.stripTags(editor.s.html)); // plain text
     * ```
     */
    get html() {
        const sel = this.sel;
        if (sel && sel.rangeCount > 0) {
            const range = sel.getRangeAt(0);
            const clonedSelection = range.cloneContents();
            const div = this.j.createInside.div();
            div.appendChild(clonedSelection);
            return div.innerHTML;
        }
        return '';
    }
    /**
     * Wrap all selected fragments inside Tag or apply some callback
     */
    *wrapInTagGen(fakes) {
        if (this.isCollapsed()) {
            const font = this.jodit.createInside.element('font', jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.INVISIBLE_SPACE);
            this.insertNode(font, false, false);
            if (fakes && fakes[0]) {
                font.appendChild(fakes[0]);
            }
            yield font;
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.unwrap(font);
            return;
        }
        // fix issue https://github.com/xdan/jodit/issues/65
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.$$)('*[style*=font-size]', this.area).forEach(elm => {
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.attr)(elm, 'data-font-size', elm.style.fontSize.toString());
            elm.style.removeProperty('font-size');
        });
        this.j.nativeExecCommand('fontsize', false, '7');
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.$$)('*[data-font-size]', this.area).forEach(elm => {
            const fontSize = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.attr)(elm, 'data-font-size');
            if (fontSize) {
                elm.style.fontSize = fontSize;
                (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.attr)(elm, 'data-font-size', null);
            }
        });
        const elms = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.$$)('font[size="7"]', this.area);
        for (const font of elms) {
            const { firstChild, lastChild } = font;
            if (firstChild &&
                firstChild === lastChild &&
                (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_6__/* .isMarker */ ._V)(firstChild)) {
                jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.unwrap(font);
                continue;
            }
            if (firstChild && (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_6__/* .isMarker */ ._V)(firstChild)) {
                jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.before(font, firstChild);
            }
            if (lastChild && (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_6__/* .isMarker */ ._V)(lastChild)) {
                jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.after(font, lastChild);
            }
            yield font;
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.unwrap(font);
        }
        return;
    }
    /**
     * Wrap all selected fragments inside Tag or apply some callback
     */
    wrapInTag(tagOrCallback) {
        const result = [];
        for (const font of this.wrapInTagGen()) {
            try {
                if (font.firstChild &&
                    font.firstChild === font.lastChild &&
                    (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_6__/* .isMarker */ ._V)(font.firstChild)) {
                    continue;
                }
                if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_6__/* .isFunction */ .mf)(tagOrCallback)) {
                    tagOrCallback(font);
                }
                else {
                    result.push(jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.replace(font, tagOrCallback, this.j.createInside));
                }
            }
            finally {
                const pn = font.parentNode;
                if (pn) {
                    jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.unwrap(font);
                    if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isEmpty(pn)) {
                        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.unwrap(pn);
                    }
                }
            }
        }
        return result;
    }
    /**
     * Apply some css rules for all selections. It method wraps selections in nodeName tag.
     * @example
     * ```js
     * const editor = Jodit.make('#editor');
     * editor.value = 'test';
     * editor.execCommand('selectall');
     *
     * editor.s.commitStyle({
     * 	style: {color: 'red'}
     * }) // will wrap `text` in `span` and add style `color:red`
     * editor.s.commitStyle({
     * 	style: {color: 'red'}
     * }) // will remove `color:red` from `span`
     * ```
     */
    commitStyle(options) {
        void 0;
        const styleElm = new _style_commit_style__WEBPACK_IMPORTED_MODULE_7__/* .CommitStyle */ .RP(options);
        styleElm.apply(this.j);
    }
    /**
     * Split selection on two parts: left and right
     */
    splitSelection(currentBox, edge) {
        if (!this.isCollapsed()) {
            return null;
        }
        const leftRange = this.createRange();
        const range = this.range;
        leftRange.setStartBefore(currentBox);
        const cursorOnTheRight = this.cursorOnTheRight(currentBox, edge);
        const cursorOnTheLeft = this.cursorOnTheLeft(currentBox, edge);
        const br = this.j.createInside.element('br'), prevFake = this.j.createInside.fake(), nextFake = prevFake.cloneNode();
        try {
            if (cursorOnTheRight || cursorOnTheLeft) {
                if (edge) {
                    jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.before(edge, br);
                }
                else {
                    jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeInsertNode(range, br);
                }
                const clearBR = (start, getNext) => {
                    let next = getNext(start);
                    while (next) {
                        const nextSib = getNext(next);
                        if (next &&
                            (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTag(next, 'br') || jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isEmptyTextNode(next))) {
                            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(next);
                        }
                        else {
                            break;
                        }
                        next = nextSib;
                    }
                };
                clearBR(br, (n) => n.nextSibling);
                clearBR(br, (n) => n.previousSibling);
                jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.after(br, nextFake);
                jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.before(br, prevFake);
                if (cursorOnTheRight) {
                    leftRange.setEndBefore(br);
                    range.setEndBefore(br);
                }
                else {
                    leftRange.setEndAfter(br);
                    range.setEndAfter(br);
                }
            }
            else {
                leftRange.setEnd(range.startContainer, range.startOffset);
            }
            const fragment = leftRange.extractContents();
            const clearEmpties = (node) => jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.each(node, node => jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isEmptyTextNode(node) && jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(node));
            void 0;
            try {
                clearEmpties(fragment);
                clearEmpties(currentBox);
                currentBox.parentNode.insertBefore(fragment, currentBox);
                if (!edge && cursorOnTheRight && (br === null || br === void 0 ? void 0 : br.parentNode)) {
                    const range = this.createRange();
                    range.setStartBefore(br);
                    this.selectRange(range);
                }
            }
            catch (e) {
                if (!jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.IS_PROD) {
                    throw e;
                }
            }
            // After splitting some part can be empty
            const fillFakeParent = (fake) => {
                var _a, _b, _c;
                if (((_a = fake === null || fake === void 0 ? void 0 : fake.parentNode) === null || _a === void 0 ? void 0 : _a.firstChild) === ((_b = fake === null || fake === void 0 ? void 0 : fake.parentNode) === null || _b === void 0 ? void 0 : _b.lastChild)) {
                    (_c = fake === null || fake === void 0 ? void 0 : fake.parentNode) === null || _c === void 0 ? void 0 : _c.appendChild(br.cloneNode());
                }
            };
            fillFakeParent(prevFake);
            fillFakeParent(nextFake);
        }
        finally {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(prevFake);
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(nextFake);
        }
        return currentBox.previousElementSibling;
    }
    expandSelection() {
        if (this.isCollapsed()) {
            return this;
        }
        const { range } = this;
        const c = range.cloneRange();
        if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isOrContains(this.j.editor, range.commonAncestorContainer, true)) {
            return this;
        }
        const moveMaxEdgeFake = (start) => {
            const fake = this.j.createInside.fake();
            const r = range.cloneRange();
            r.collapse(start);
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeInsertNode(r, fake);
            (0,jodit_core_selection_helpers_move_the_node_along_the_edge_outward__WEBPACK_IMPORTED_MODULE_4__/* .moveTheNodeAlongTheEdgeOutward */ .f)(fake, start, this.j.editor);
            return fake;
        };
        const leftFake = moveMaxEdgeFake(true);
        const rightFake = moveMaxEdgeFake(false);
        c.setStartAfter(leftFake);
        c.setEndBefore(rightFake);
        const leftBox = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.findSibling(leftFake, false);
        const rightBox = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.findSibling(rightFake, true);
        if (leftBox !== rightBox) {
            const rightInsideLeft = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isElement(leftBox) && jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isOrContains(leftBox, rightFake);
            const leftInsideRight = !rightInsideLeft &&
                jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isElement(rightBox) &&
                jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isOrContains(rightBox, leftFake);
            if (rightInsideLeft || leftInsideRight) {
                let child = (rightInsideLeft ? leftBox : rightBox), container = child;
                while (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isElement(child)) {
                    child = rightInsideLeft
                        ? child.firstElementChild
                        : child.lastElementChild;
                    if (child) {
                        const isInside = rightInsideLeft
                            ? jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isOrContains(child, rightFake)
                            : jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isOrContains(child, leftFake);
                        if (isInside) {
                            container = child;
                        }
                    }
                }
                if (rightInsideLeft) {
                    c.setStart(container, 0);
                }
                else {
                    c.setEnd(container, container.childNodes.length);
                }
            }
        }
        this.selectRange(c);
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(leftFake, rightFake);
        if (this.isCollapsed()) {
            throw (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.error)('Selection is collapsed');
        }
        return this;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__.autobind
], Selection.prototype, "createRange", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__.autobind
], Selection.prototype, "focus", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__.autobind
], Selection.prototype, "setCursorAfter", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__.autobind
], Selection.prototype, "setCursorBefore", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__.autobind
], Selection.prototype, "setCursorIn", null);


/***/ }),

/***/ 76785:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   i: function() { return /* binding */ extractSelectedPart; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(87398);
/* harmony import */ var jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76562);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers_checker_is_marker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(29894);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




/**
 * If the selection area is inside an element that matches the commit (suitable relative),
 * but does not completely fill it.
 * Then the method cuts the parent and leaves itself in a copy of the parent (suitable relative) in the middle.
 *
 * @example
 * Apply strong to
 * ```html
 * 	<strong><span>some<font>SELECTED</font>text</span></strong>
 * ```
 * Should extract selection from parent `strong`
 * ```html
 * `<strong><span>some</span></strong><strong><span><font>SELECTED</font></span></strong><strong><span>test</span></strong>
 * ```
 * @private
 */
function extractSelectedPart(wrapper, font, jodit) {
    const range = jodit.s.createRange();
    // Left part
    const leftEdge = (0,jodit_core_helpers_checker_is_marker__WEBPACK_IMPORTED_MODULE_3__/* .isMarker */ ._)(font.previousSibling)
        ? font.previousSibling
        : font;
    range.setStartBefore(wrapper);
    range.setEndBefore(leftEdge);
    extractAndMove(wrapper, range, true);
    // Right part
    const rightEdge = (0,jodit_core_helpers_checker_is_marker__WEBPACK_IMPORTED_MODULE_3__/* .isMarker */ ._)(font.nextSibling) ? font.nextSibling : font;
    range.setStartAfter(rightEdge);
    range.setEndAfter(wrapper);
    extractAndMove(wrapper, range, false);
}
/**
 * Retrieves content before after the selected area, clears it if it is empty, and inserts before after the framed selection
 */
function extractAndMove(wrapper, range, left) {
    const fragment = range.extractContents();
    if ((!fragment.textContent || !(0,jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_1__/* .trim */ .fy)(fragment.textContent).length) &&
        fragment.firstChild) {
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.unwrap(fragment.firstChild);
    }
    if (wrapper.parentNode) {
        (0,jodit_core_helpers_utils_utils__WEBPACK_IMPORTED_MODULE_0__/* .call */ .RE)(left ? jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.before : jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.after, wrapper, fragment);
    }
}


/***/ }),

/***/ 71413:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   _: function() { return /* binding */ FiniteStateMachine; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52378);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62924);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



/**
 * A state machine implementation for applying styles.
 */
class FiniteStateMachine {
    setState(state) {
        void 0;
        this.__previewsStates.add(state);
        this.__state = state;
    }
    getState() {
        return this.__state;
    }
    disableSilent() {
        this.silent = false;
    }
    constructor(state, transitions) {
        this.transitions = transitions;
        this.silent = true;
        this.__previewsStates = new Set();
        this.setState(state);
    }
    dispatch(actionName, value) {
        const action = this.transitions[this.getState()][actionName];
        if (action) {
            const res = action.call(this, value);
            void 0;
            void 0;
            void 0;
            this.setState(res.next);
            if (!jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.IS_PROD && !this.silent) {
                console.log(`State: ${this.getState()}`);
            }
            return res;
        }
        throw new Error(`invalid action: ${this.getState()}.${actionName.toString()}`);
    }
}


/***/ }),

/***/ 95135:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   e: function() { return /* binding */ getSuitChild; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var _is_normal_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(68004);
/* harmony import */ var _is_suit_element__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26978);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



/**
 * Checks if child elements are suitable for applying styles.
 * An element is suitable for us only if it is the only significant child.
 * If the child matches then returns it.
 * @example
 * `<font><strong>selected</strong></font>`
 * @private
 */
function getSuitChild(style, font) {
    let { firstChild: child } = font;
    while (child && !(0,_is_normal_node__WEBPACK_IMPORTED_MODULE_1__/* .isNormalNode */ .c)(child)) {
        child = child.nextSibling;
        if (!child) {
            return null;
        }
    }
    if (child &&
        !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.next(child, _is_normal_node__WEBPACK_IMPORTED_MODULE_1__/* .isNormalNode */ .c, font) &&
        (0,_is_suit_element__WEBPACK_IMPORTED_MODULE_2__/* .isSuitElement */ .fB)(style, child, false)) {
        return child;
    }
    return null;
}


/***/ }),

/***/ 8953:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   H: function() { return /* binding */ getSuitParent; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var _is_normal_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(68004);
/* harmony import */ var _is_suit_element__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26978);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



/**
 * Checks if the parent of an element is suitable for applying styles, if applicable, then returns the parent *
 *
 * @param style - styles to be applied
 * @param node - checked item
 * @param root - editor root
 * @private
 */
function getSuitParent(style, node, root) {
    const { parentNode } = node;
    if (parentNode === root ||
        !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isHTMLElement(parentNode) ||
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.next(node, _is_normal_node__WEBPACK_IMPORTED_MODULE_1__/* .isNormalNode */ .c, parentNode) ||
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.prev(node, _is_normal_node__WEBPACK_IMPORTED_MODULE_1__/* .isNormalNode */ .c, parentNode)) {
        return null;
    }
    // <h3><span style="color:red">|test|</span></h3> => apply <h2>
    if (style.isElementCommit &&
        style.elementIsBlock &&
        !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isBlock(parentNode)) {
        return getSuitParent(style, parentNode, root);
    }
    if ((0,_is_suit_element__WEBPACK_IMPORTED_MODULE_2__/* .isSuitElement */ .fB)(style, parentNode, false) &&
        (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isBlock(parentNode) || style.elementIsBlock)) {
        return parentNode;
    }
    // <strong style="color:red"><em>|test|</em></strong> => apply <strong>
    if (style.isElementCommit && !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isBlock(parentNode)) {
        return getSuitParent(style, parentNode, root);
    }
    return null;
}


/***/ }),

/***/ 74485:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Y: function() { return /* binding */ hasSameStyleKeys; },
/* harmony export */   k: function() { return /* binding */ hasSameStyle; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(71737);
/* harmony import */ var jodit_core_helpers_checker_is_void__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(41240);
/* harmony import */ var jodit_core_helpers_normalize_normalize_css_value__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(21642);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(52378);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_1__);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */





/**
 * Element has the same styles as in the commit
 * @private
 */
function hasSameStyle(elm, rules) {
    return Boolean(!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(elm, 'font') &&
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isHTMLElement(elm) &&
        Object.keys(rules).every(property => {
            const value = (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_2__/* .css */ .i)(elm, property, true);
            if (value === '' &&
                (rules[property] === '' || rules[property] == null)) {
                return true;
            }
            return (!(0,jodit_core_helpers_checker_is_void__WEBPACK_IMPORTED_MODULE_3__/* .isVoid */ .n)(value) &&
                value !== '' &&
                !(0,jodit_core_helpers_checker_is_void__WEBPACK_IMPORTED_MODULE_3__/* .isVoid */ .n)(rules[property]) &&
                (0,jodit_core_helpers_normalize_normalize_css_value__WEBPACK_IMPORTED_MODULE_4__/* .normalizeCssValue */ .Zh)(property, rules[property])
                    .toString()
                    .toLowerCase() === value.toString().toLowerCase());
        }));
}
const elm = document.createElement('div');
elm.style.color = 'red';
void 0;
void 0;
void 0;
/**
 * Element has the similar styles keys
 */
function hasSameStyleKeys(elm, rules) {
    return Boolean(!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(elm, 'font') &&
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isHTMLElement(elm) &&
        Object.keys(rules).every(property => {
            const value = (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_2__/* .css */ .i)(elm, property, true);
            return value !== '';
        }));
}
const elm2 = document.createElement('div');
elm2.style.color = 'red';
void 0;
void 0;
void 0;


/***/ }),

/***/ 93000:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   D_: function() { return /* reexport safe */ _is_inside_invisible_element__WEBPACK_IMPORTED_MODULE_8__.D; },
/* harmony export */   HB: function() { return /* reexport safe */ _get_suit_parent__WEBPACK_IMPORTED_MODULE_7__.H; },
/* harmony export */   JL: function() { return /* reexport safe */ _list_toggle_ordered_list__WEBPACK_IMPORTED_MODULE_1__.J; },
/* harmony export */   Mh: function() { return /* reexport safe */ _unwrap_children__WEBPACK_IMPORTED_MODULE_12__.M; },
/* harmony export */   QS: function() { return /* reexport safe */ _is_same_attributes__WEBPACK_IMPORTED_MODULE_9__.Q; },
/* harmony export */   _H: function() { return /* reexport safe */ _finite_state_machine__WEBPACK_IMPORTED_MODULE_5__._; },
/* harmony export */   e: function() { return /* reexport safe */ _get_suit_child__WEBPACK_IMPORTED_MODULE_6__.e; },
/* harmony export */   iN: function() { return /* reexport safe */ _toggle_attributes__WEBPACK_IMPORTED_MODULE_0__.i; },
/* harmony export */   ig: function() { return /* reexport safe */ _extract__WEBPACK_IMPORTED_MODULE_4__.i; },
/* harmony export */   pe: function() { return /* reexport safe */ _is_same_attributes__WEBPACK_IMPORTED_MODULE_9__.p; },
/* harmony export */   qb: function() { return /* reexport safe */ _is_suit_element__WEBPACK_IMPORTED_MODULE_11__.qb; },
/* harmony export */   re: function() { return /* reexport safe */ _wrap__WEBPACK_IMPORTED_MODULE_13__.r; }
/* harmony export */ });
/* harmony import */ var _toggle_attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(79982);
/* harmony import */ var _list_toggle_ordered_list__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62621);
/* harmony import */ var _list_wrap_list__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(51738);
/* harmony import */ var _has_same_style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(74485);
/* harmony import */ var _extract__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(76785);
/* harmony import */ var _finite_state_machine__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(71413);
/* harmony import */ var _get_suit_child__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(95135);
/* harmony import */ var _get_suit_parent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(8953);
/* harmony import */ var _is_inside_invisible_element__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(88381);
/* harmony import */ var _is_same_attributes__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(90203);
/* harmony import */ var _is_normal_node__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(68004);
/* harmony import */ var _is_suit_element__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(26978);
/* harmony import */ var _unwrap_children__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(13381);
/* harmony import */ var _wrap__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(72570);
/* harmony import */ var _wrap_unwrapped_text__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(11738);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

















/***/ }),

/***/ 88381:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   D: function() { return /* binding */ isInsideInvisibleElement; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * Check if FONT inside STYLE or SCRIPT element
 * @private
 */
function isInsideInvisibleElement(font, root) {
    return Boolean(jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.closest(font, ['style', 'script'], root));
}


/***/ }),

/***/ 68004:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c: function() { return /* binding */ isNormalNode; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers_checker_is_marker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29894);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/**
 * Is normal usual element
 * @private
 */
function isNormalNode(elm) {
    return Boolean(elm &&
        !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isEmptyTextNode(elm) &&
        !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTemporary(elm) &&
        !(0,jodit_core_helpers_checker_is_marker__WEBPACK_IMPORTED_MODULE_1__/* .isMarker */ ._)(elm));
}


/***/ }),

/***/ 90203:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Q: function() { return /* binding */ isSameAttributes; },
/* harmony export */   p: function() { return /* binding */ elementsEqualAttributes; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(86284);
/* harmony import */ var jodit_core_helpers_size_object_size__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(31982);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(52378);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _has_same_style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(74485);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




/**
 * Compares whether the given attributes match the element's own attributes
 * @private
 */
function isSameAttributes(elm, attrs) {
    if (!elm.attributes.length && !(0,jodit_core_helpers_size_object_size__WEBPACK_IMPORTED_MODULE_1__/* .size */ .d)(attrs)) {
        return true;
    }
    if (!(0,jodit_core_helpers_size_object_size__WEBPACK_IMPORTED_MODULE_1__/* .size */ .d)(attrs)) {
        return true;
    }
    void 0;
    return Object.keys(attrs).every(key => {
        if (key === 'class' || key === 'className') {
            return elm.classList.contains(attrs[key]);
        }
        if (key === 'style') {
            return (0,_has_same_style__WEBPACK_IMPORTED_MODULE_3__/* .hasSameStyle */ .k)(elm, attrs[key]);
        }
        return (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_0__.attr)(elm, key) === attrs[key];
    });
}
function elementsEqualAttributes(elm1, elm2) {
    return (elm1.attributes.length === elm2.attributes.length &&
        Array.from(elm1.attributes).every(attr => elm2.hasAttribute(attr.name) &&
            elm2.getAttribute(attr.name) === attr.value));
}


/***/ }),

/***/ 26978:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Dd: function() { return /* binding */ isSameStyleChild; },
/* harmony export */   fB: function() { return /* binding */ isSuitElement; },
/* harmony export */   qb: function() { return /* binding */ suitableClosest; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var _is_normal_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(68004);
/* harmony import */ var _has_same_style__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(74485);



/**
 * Checks if an item is suitable for applying a commit. The element suits us if it
 *  - has the same styles as in the commit (commitStyle.options.style)
 *  - has the same tag as in the commit (commitStyle.options.element)
 *
 * @param commitStyle - style commit
 * @param elm - checked item
 * @param strict - strict mode - false - the default tag is suitable for us if it is also in the commit
 * @param strictStyle - strict style mode - true - the element has the same style keys as in the commit, but not their values
 * @private
 */
function isSuitElement(commitStyle, elm, strict, strictStyle = true) {
    var _a;
    if (!elm || !(0,_is_normal_node__WEBPACK_IMPORTED_MODULE_1__/* .isNormalNode */ .c)(elm)) {
        return false;
    }
    const { element, elementIsDefault, options } = commitStyle;
    if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isList(elm) && commitStyle.elementIsList) {
        return true;
    }
    const elmIsSame = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(elm, element);
    if (elmIsSame && !(elementIsDefault && strict)) {
        return true;
    }
    const elmHasSameStyle = Boolean(((_a = options.attributes) === null || _a === void 0 ? void 0 : _a.style) &&
        (strictStyle
            ? (0,_has_same_style__WEBPACK_IMPORTED_MODULE_2__/* .hasSameStyle */ .k)(elm, options.attributes.style)
            : (0,_has_same_style__WEBPACK_IMPORTED_MODULE_2__/* .hasSameStyleKeys */ .Y)(elm, options.attributes.style)));
    if (elmHasSameStyle && !commitStyle.elementIsList) {
        return true;
    }
    return !elmIsSame && !strict && elementIsDefault && jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isInlineBlock(elm);
}
/**
 * @private
 */
function suitableClosest(commitStyle, element, root) {
    return jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.closest(element, node => isSuitElement(commitStyle, node, true, false), root);
}
/**
 * Inside the parent element there is a block with the same styles
 * @example
 * For selection:
 * ```html
 * <p>|test<strong>test</strong>|</p>
 * ```
 * Apply `{element:'strong'}`
 * @private
 */
function isSameStyleChild(commitStyle, elm) {
    var _a, _b;
    const { element, options } = commitStyle;
    if (!elm || !(0,_is_normal_node__WEBPACK_IMPORTED_MODULE_1__/* .isNormalNode */ .c)(elm)) {
        return false;
    }
    const elmIsSame = elm.nodeName.toLowerCase() === element;
    const elmHasSameStyle = Boolean(((_a = options.attributes) === null || _a === void 0 ? void 0 : _a.style) &&
        (0,_has_same_style__WEBPACK_IMPORTED_MODULE_2__/* .hasSameStyleKeys */ .Y)(elm, (_b = options.attributes) === null || _b === void 0 ? void 0 : _b.style));
    return elmIsSame && elmHasSameStyle;
}


/***/ }),

/***/ 62621:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   J: function() { return /* binding */ toggleOrderedList; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(52378);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var jodit_core_selection_style_api_extract__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76785);
/* harmony import */ var jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(41254);
/* harmony import */ var jodit_core_selection_style_api_toggle_attributes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(79982);
/* harmony import */ var _wrap_list__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(51738);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */






/**
 * Replaces `ul->ol` or `ol->ul`, apply styles to the list, or remove a list item from it
 * @private
 */
function toggleOrderedList(commitStyle, li, jodit, mode) {
    if (!li) {
        return mode;
    }
    const list = li.parentElement;
    if (!list) {
        return mode;
    }
    const result = jodit.e.fire(`${jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_3__/* ._PREFIX */ .IM}BeforeToggleList`, mode, commitStyle, list);
    if (result !== undefined) {
        return result;
    }
    const hook = jodit.e.fire.bind(jodit.e, `${jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_3__/* ._PREFIX */ .IM}AfterToggleList`);
    if (mode !== jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_3__/* .UNWRAP */ .Nc) {
        const isChangeMode = (0,jodit_core_selection_style_api_toggle_attributes__WEBPACK_IMPORTED_MODULE_4__/* .toggleAttributes */ .i)(commitStyle, li.parentElement, jodit, jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_3__/* .INITIAL */ ._X, true) === jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_3__/* .CHANGE */ .Ve;
        // ul => ol, ol => ul or ul => ul.class1
        if (mode === jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_3__/* .REPLACE */ .J5 ||
            isChangeMode ||
            list.tagName.toLowerCase() !== commitStyle.element) {
            const wrapper = unwrapList(jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_3__/* .REPLACE */ .J5, list, li, jodit, commitStyle);
            const newList = (0,_wrap_list__WEBPACK_IMPORTED_MODULE_5__/* .wrapList */ .h)(commitStyle, wrapper, jodit);
            hook(jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_3__/* .REPLACE */ .J5, newList, commitStyle);
            return jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_3__/* .REPLACE */ .J5;
        }
    }
    const wrapper = unwrapList(jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_3__/* .UNWRAP */ .Nc, list, li, jodit, commitStyle);
    hook(jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_3__/* .UNWRAP */ .Nc, wrapper, commitStyle);
    return jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_3__/* .UNWRAP */ .Nc;
}
function unwrapList(mode, list, li, jodit, cs) {
    const result = jodit.e.fire(`${jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_3__/* ._PREFIX */ .IM}BeforeUnwrapList`, mode, list, cs);
    if (result) {
        void 0;
        return result;
    }
    (0,jodit_core_selection_style_api_extract__WEBPACK_IMPORTED_MODULE_2__/* .extractSelectedPart */ .i)(list, li, jodit);
    void 0;
    jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.unwrap(li.parentElement);
    return jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.replace(li, jodit.o.enter, jodit.createInside);
}


/***/ }),

/***/ 51738:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   h: function() { return /* binding */ wrapList; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(41254);
/* harmony import */ var jodit_core_selection_style_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(93000);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



/**
 * Replaces non-leaf items with leaf items and either creates a new list or
 * adds a new item to the nearest old list
 * @private
 */
function wrapList(commitStyle, wrapper, jodit) {
    const result = jodit.e.fire(`${jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_1__/* ._PREFIX */ .IM}BeforeWrapList`, jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_1__/* .REPLACE */ .J5, wrapper, commitStyle);
    const newWrapper = result !== null && result !== void 0 ? result : jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.replace(wrapper, 'li', jodit.createInside);
    const prev = newWrapper.previousElementSibling;
    const next = newWrapper.nextElementSibling;
    let list = jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(prev, commitStyle.element) ? prev : null;
    list !== null && list !== void 0 ? list : (list = jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(next, commitStyle.element) ? next : null);
    if (!jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isList(list) ||
        !(0,jodit_core_selection_style_api__WEBPACK_IMPORTED_MODULE_2__/* .isSameAttributes */ .QS)(list, commitStyle.options.attributes)) {
        list = jodit.createInside.element(commitStyle.element);
        (0,jodit_core_selection_style_api__WEBPACK_IMPORTED_MODULE_2__/* .toggleAttributes */ .iN)(commitStyle, list, jodit, jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_1__/* .INITIAL */ ._X);
        jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.before(newWrapper, list);
    }
    if (prev === list) {
        jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.append(list, newWrapper);
    }
    else {
        jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.prepend(list, newWrapper);
    }
    if (jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(list.nextElementSibling, commitStyle.element) &&
        (0,jodit_core_selection_style_api__WEBPACK_IMPORTED_MODULE_2__/* .elementsEqualAttributes */ .pe)(list, list.nextElementSibling)) {
        jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.append(list, Array.from(list.nextElementSibling.childNodes));
        jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(list.nextElementSibling);
    }
    jodit.e.fire(`${jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_1__/* ._PREFIX */ .IM}AfterWrapList`, jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_1__/* .WRAP */ .Qu, list, commitStyle);
    return list;
}


/***/ }),

/***/ 79982:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   i: function() { return /* binding */ toggleAttributes; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(86284);
/* harmony import */ var jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(71737);
/* harmony import */ var jodit_core_helpers_utils_data_bind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25920);
/* harmony import */ var jodit_core_helpers_string_kebab_case__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(13929);
/* harmony import */ var jodit_core_helpers_normalize_normalize_css_value__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(21642);
/* harmony import */ var jodit_core_helpers_size_object_size__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(31982);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(41254);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(79102);
/* harmony import */ var jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(78157);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */










const tak = 'toggleAttributes';
/**
 * Toggles attributes
 * @private
 */
function toggleAttributes(commitStyle, elm, jodit, mode, dry = false) {
    if (!dry && commitStyle.isApplied(elm, tak)) {
        return mode;
    }
    !dry && commitStyle.setApplied(elm, tak);
    const { attributes } = commitStyle.options;
    if (attributes && (0,jodit_core_helpers_size_object_size__WEBPACK_IMPORTED_MODULE_2__/* .size */ .d)(attributes) > 0) {
        Object.keys(attributes).forEach((key) => {
            const value = attributes[key];
            switch (key) {
                case 'style': {
                    mode = toggleStyle(commitStyle, jodit, value, elm, dry, mode);
                    break;
                }
                case 'className':
                case 'class':
                    mode = toggleClass(jodit, value, elm, mode, dry);
                    break;
                default:
                    mode = toggleAttribute(jodit, value, elm, key, dry, mode);
            }
        });
    }
    return mode;
}
function toggleStyle(commitStyle, jodit, style, elm, dry, mode) {
    void 0;
    Object.keys(style).forEach((rule) => {
        const inlineValue = elm.style.getPropertyValue((0,jodit_core_helpers_string_kebab_case__WEBPACK_IMPORTED_MODULE_7__/* .kebabCase */ .G)(rule));
        const newValue = style[rule];
        if (inlineValue === '' && newValue == null) {
            return;
        }
        if (getNativeCSSValue(jodit, elm, rule) ===
            (0,jodit_core_helpers_normalize_normalize_css_value__WEBPACK_IMPORTED_MODULE_8__/* .normalizeCssValue */ .Zh)(rule, newValue)) {
            if (!inlineValue) {
                return;
            }
            !dry && (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_9__/* .css */ .i)(elm, rule, null);
            mode = jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_4__/* .UNSET */ .p;
            mode = removeExtraStyleAttribute(commitStyle, elm, mode);
            return;
        }
        mode = jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_4__/* .CHANGE */ .Ve;
        if (!dry) {
            (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_9__/* .css */ .i)(elm, rule, newValue);
            mode = removeExtraStyleAttribute(commitStyle, elm, mode);
        }
    });
    return mode;
}
function toggleClass(jodit, value, elm, mode, dry) {
    void 0;
    const hook = jodit.e.fire.bind(jodit.e, `${jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_4__/* ._PREFIX */ .IM}AfterToggleAttribute`);
    if (elm.classList.contains(value.toString())) {
        mode = jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_4__/* .UNSET */ .p;
        if (!dry) {
            elm.classList.remove(value);
            if (elm.classList.length === 0) {
                (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_0__.attr)(elm, 'class', null);
                hook(mode, elm, 'class', null);
            }
        }
    }
    else {
        mode = jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_4__/* .CHANGE */ .Ve;
        if (!dry) {
            elm.classList.add(value);
            hook(mode, elm, 'class', value);
        }
    }
    return mode;
}
function toggleAttribute(jodit, value, elm, key, dry, mode) {
    void 0;
    const hook = jodit.e.fire.bind(jodit.e, `${jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_4__/* ._PREFIX */ .IM}AfterToggleAttribute`);
    if ((0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_0__.attr)(elm, key) === value) {
        !dry && (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_0__.attr)(elm, key, null);
        mode = jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_4__/* .UNSET */ .p;
        !dry && hook(mode, elm, key, value);
        return mode;
    }
    mode = jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_4__/* .CHANGE */ .Ve;
    if (!dry) {
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_0__.attr)(elm, key, value);
        hook(mode, elm, key, value);
    }
    return mode;
}
/**
 * If the element has an empty style attribute, it removes the attribute,
 * and if it is default, it removes the element itself
 */
function removeExtraStyleAttribute(commitStyle, elm, mode) {
    if (!(0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_0__.attr)(elm, 'style')) {
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_0__.attr)(elm, 'style', null);
        if (elm.tagName.toLowerCase() === commitStyle.defaultTag) {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_3__/* .Dom */ .i.unwrap(elm);
            mode = jodit_core_selection_style_commit_style__WEBPACK_IMPORTED_MODULE_4__/* .UNWRAP */ .Nc;
        }
    }
    return mode;
}
/**
 * Creates an iframe into which elements will be inserted to test their default styles in the browser
 */
function getShadowRoot(jodit) {
    var _a;
    if ((0,jodit_core_helpers_utils_data_bind__WEBPACK_IMPORTED_MODULE_1__/* .dataBind */ .q)(jodit, 'shadowRoot') !== undefined) {
        return (0,jodit_core_helpers_utils_data_bind__WEBPACK_IMPORTED_MODULE_1__/* .dataBind */ .q)(jodit, 'shadowRoot');
    }
    const container = (0,jodit_core_global__WEBPACK_IMPORTED_MODULE_5__/* .getContainer */ .ZO)(jodit);
    const iframe = document.createElement('iframe');
    (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_9__/* .css */ .i)(iframe, {
        width: 0,
        height: 0,
        position: 'absolute',
        border: 0
    });
    iframe.src = 'about:blank';
    container.appendChild(iframe);
    const doc = (_a = iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.document;
    const shadowRoot = !doc ? jodit.od.body : doc.body;
    (0,jodit_core_helpers_utils_data_bind__WEBPACK_IMPORTED_MODULE_1__/* .dataBind */ .q)(jodit, 'shadowRoot', shadowRoot);
    return shadowRoot;
}
/**
 * `strong -> fontWeight 700`
 */
function getNativeCSSValue(jodit, elm, key) {
    const newElm = jodit.create.element(elm.tagName.toLowerCase());
    newElm.style.cssText = elm.style.cssText;
    const root = getShadowRoot(jodit);
    root.appendChild(newElm);
    const result = (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_9__/* .css */ .i)(newElm, key);
    jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_3__/* .Dom */ .i.safeRemove(newElm);
    return result;
}


/***/ }),

/***/ 13381:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   M: function() { return /* binding */ unwrapChildren; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(86284);
/* harmony import */ var jodit_core_selection_style_api_has_same_style__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(74485);
/* harmony import */ var _is_suit_element__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(26978);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




/**
 * Unwrap all suit elements inside
 * @private
 */
function unwrapChildren(style, font) {
    var _a;
    const needUnwrap = [];
    const needChangeStyle = [];
    let firstElementSuit;
    const cssStyle = (_a = style.options.attributes) === null || _a === void 0 ? void 0 : _a.style;
    if (font.firstChild) {
        const gen = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.eachGen(font);
        let item = gen.next();
        while (!item.done) {
            const elm = item.value;
            if ((0,_is_suit_element__WEBPACK_IMPORTED_MODULE_3__/* .isSuitElement */ .fB)(style, elm, true) &&
                (!cssStyle || (0,jodit_core_selection_style_api_has_same_style__WEBPACK_IMPORTED_MODULE_2__/* .hasSameStyleKeys */ .Y)(elm, cssStyle))) {
                if (firstElementSuit === undefined) {
                    firstElementSuit = true;
                }
                needUnwrap.push(elm);
            }
            else if (cssStyle && (0,_is_suit_element__WEBPACK_IMPORTED_MODULE_3__/* .isSameStyleChild */ .Dd)(style, elm)) {
                if (firstElementSuit === undefined) {
                    firstElementSuit = false;
                }
                needChangeStyle.push(() => {
                    (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.css)(elm, Object.keys(cssStyle).reduce((acc, key) => {
                        acc[key] = null;
                        return acc;
                    }, {}));
                    if (!(0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.attr)(elm, 'style')) {
                        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.attr)(elm, 'style', null);
                    }
                    if (!(0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.attr)(elm, 'style') &&
                        elm.nodeName.toLowerCase() === style.element) {
                        needUnwrap.push(elm);
                    }
                });
            }
            else if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isEmptyTextNode(elm)) {
                if (firstElementSuit === undefined) {
                    firstElementSuit = false;
                }
            }
            item = gen.next();
        }
    }
    needChangeStyle.forEach(clb => clb());
    needUnwrap.forEach(jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.unwrap);
    return Boolean(firstElementSuit);
}


/***/ }),

/***/ 11738:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   h: function() { return /* binding */ wrapUnwrappedText; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers_checker_is_marker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29894);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/**
 * Wrap text or inline elements inside Block element
 * @private
 */
function wrapUnwrappedText(style, elm, jodit) {
    const root = jodit.editor, ci = jodit.createInside, edge = (n, key = 'previousSibling') => {
        let edgeNode = n, node = n;
        while (node && !(0,jodit_core_helpers_checker_is_marker__WEBPACK_IMPORTED_MODULE_1__/* .isMarker */ ._)(node)) {
            if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(node, jodit.o.enter)) {
                break;
            }
            edgeNode = node;
            if (node[key]) {
                node = node[key];
            }
            else {
                node =
                    node.parentNode &&
                        !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isBlock(node.parentNode) &&
                        node.parentNode !== root
                        ? node.parentNode
                        : null;
            }
            if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isBlock(node)) {
                break;
            }
        }
        return edgeNode;
    };
    const start = edge(elm), end = edge(elm, 'nextSibling');
    const range = jodit.s.createRange();
    range.setStartBefore(start);
    range.setEndAfter(end);
    const fragment = range.extractContents();
    const wrapper = ci.element(style.element);
    wrapper.appendChild(fragment);
    jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeInsertNode(range, wrapper);
    if (style.elementIsBlock) {
        if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isEmpty(wrapper) &&
            !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(wrapper.firstElementChild, 'br')) {
            wrapper.appendChild(ci.element('br'));
        }
    }
    return wrapper;
}


/***/ }),

/***/ 72570:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   r: function() { return /* binding */ wrap; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_helpers_utils_attr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(23144);
/* harmony import */ var _wrap_unwrapped_text__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(11738);
/* harmony import */ var _list_wrap_list__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(51738);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




/**
 * Replaces the parent tag with the applicable one, or wraps the text and also replaces the tag
 * @private
 */
function wrap(commitStyle, font, jodit) {
    const wrapper = findOrCreateWrapper(commitStyle, font, jodit);
    return commitStyle.elementIsList
        ? (0,_list_wrap_list__WEBPACK_IMPORTED_MODULE_3__/* .wrapList */ .h)(commitStyle, wrapper, jodit)
        : jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.replace(wrapper, commitStyle.element, jodit.createInside, true);
}
const WRAP_NODES = new Set([
    'td',
    'th',
    'tr',
    'tbody',
    'table',
    'li',
    'ul',
    'ol'
]);
/**
 * If we apply a block element, then it finds the closest block parent (exclude table cell etc.),
 * otherwise it wraps free text in an element.
 */
function findOrCreateWrapper(commitStyle, font, jodit) {
    if (commitStyle.elementIsBlock) {
        const box = jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.up(font, node => jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isBlock(node) && !jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(node, WRAP_NODES), jodit.editor);
        if (box) {
            return box;
        }
        return (0,_wrap_unwrapped_text__WEBPACK_IMPORTED_MODULE_2__/* .wrapUnwrappedText */ .h)(commitStyle, font, jodit);
    }
    (0,jodit_core_helpers_utils_attr__WEBPACK_IMPORTED_MODULE_1__/* .attr */ .L)(font, 'size', null);
    return font;
}


/***/ }),

/***/ 86314:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Y: function() { return /* binding */ ApplyStyle; }
/* harmony export */ });
/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(93000);
/* harmony import */ var _transactions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(77532);
/* harmony import */ var _commit_style__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(41254);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



/** @internal */
function ApplyStyle(jodit, cs) {
    var _a;
    const { s: sel, editor } = jodit;
    // sel.save();
    (_a = editor.firstChild) === null || _a === void 0 ? void 0 : _a.normalize(); // FF fix for test "commandsTest - Exec command "bold"
    const fakes = sel.fakes();
    const gen = jodit.s.wrapInTagGen(fakes);
    let font = gen.next();
    if (font.done) {
        return;
    }
    let state = {
        collapsed: sel.isCollapsed(),
        mode: _commit_style__WEBPACK_IMPORTED_MODULE_2__/* .INITIAL */ ._X,
        element: font.value,
        next: _transactions__WEBPACK_IMPORTED_MODULE_1__/* .states */ .$.START,
        jodit,
        style: cs
    };
    while (font && !font.done) {
        const machine = new _api__WEBPACK_IMPORTED_MODULE_0__/* .FiniteStateMachine */ ._H(_transactions__WEBPACK_IMPORTED_MODULE_1__/* .states */ .$.START, _transactions__WEBPACK_IMPORTED_MODULE_1__/* .transactions */ .d);
        state.element = font.value;
        // machine.disableSilent();
        while (machine.getState() !== _transactions__WEBPACK_IMPORTED_MODULE_1__/* .states */ .$.END) {
            // console.log(machine.getState(), state);
            state = machine.dispatch('exec', state);
        }
        // console.log('-------------------');
        font = gen.next();
    }
    // sel.restore();
    sel.restoreFakes(fakes);
}


/***/ }),

/***/ 41254:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IM: function() { return /* binding */ _PREFIX; },
/* harmony export */   J5: function() { return /* binding */ REPLACE; },
/* harmony export */   Nc: function() { return /* binding */ UNWRAP; },
/* harmony export */   Qu: function() { return /* binding */ WRAP; },
/* harmony export */   RP: function() { return /* binding */ CommitStyle; },
/* harmony export */   Ve: function() { return /* binding */ CHANGE; },
/* harmony export */   _X: function() { return /* binding */ INITIAL; },
/* harmony export */   p: function() { return /* binding */ UNSET; }
/* harmony export */ });
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_helpers_string_camel_case__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(33683);
/* harmony import */ var _apply_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(86314);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



/** @internal */
const WRAP = 'wrap';
/** @internal */
const UNWRAP = 'unwrap';
/** @internal */
const CHANGE = 'change';
/** @internal */
const UNSET = 'unset';
/** @internal */
const INITIAL = 'initial';
/** @internal */
const REPLACE = 'replace';
/** @internal */
const _PREFIX = 'commitStyle';
class CommitStyle {
    isApplied(elm, key) {
        const data = this.__applyMap.get(elm);
        if (!data) {
            return false;
        }
        return data[key];
    }
    setApplied(elm, key) {
        var _a;
        const data = (_a = this.__applyMap.get(elm)) !== null && _a !== void 0 ? _a : {};
        data[key] = true;
        this.__applyMap.set(elm, data);
    }
    get elementIsList() {
        return Boolean(this.options.element && jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.LIST_TAGS.has(this.options.element));
    }
    get element() {
        return this.options.element || this.defaultTag;
    }
    /**
     * New element is block
     */
    get elementIsBlock() {
        return Boolean(this.options.element && jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.IS_BLOCK.test(this.options.element));
    }
    /**
     * The commit applies the tag change
     */
    get isElementCommit() {
        return Boolean(this.options.element &&
            this.options.element !== this.options.defaultTag);
    }
    get defaultTag() {
        if (this.options.defaultTag) {
            return this.options.defaultTag;
        }
        return this.elementIsBlock ? 'p' : 'span';
    }
    get elementIsDefault() {
        return this.element === this.defaultTag;
    }
    constructor(options) {
        this.options = options;
        this.__applyMap = new WeakMap();
    }
    apply(jodit) {
        const { hooks } = this.options;
        try {
            hooks &&
                Object.keys(hooks).forEach(key => {
                    // @ts-ignore
                    jodit.e.on((0,jodit_core_helpers_string_camel_case__WEBPACK_IMPORTED_MODULE_2__/* .camelCase */ .e)(_PREFIX + '_' + key), hooks[key]);
                });
            (0,_apply_style__WEBPACK_IMPORTED_MODULE_1__/* .ApplyStyle */ .Y)(jodit, this);
        }
        finally {
            hooks &&
                Object.keys(hooks).forEach(key => {
                    // @ts-ignore
                    jodit.e.off((0,jodit_core_helpers_string_camel_case__WEBPACK_IMPORTED_MODULE_2__/* .camelCase */ .e)(_PREFIX + '_' + key), hooks[key]);
                });
            this.__applyMap = new WeakMap();
        }
        jodit.synchronizeValues();
        jodit.e.fire('afterCommitStyle', this);
    }
}


/***/ }),

/***/ 77532:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $: function() { return /* binding */ states; },
/* harmony export */   d: function() { return /* binding */ transactions; }
/* harmony export */ });
/* harmony import */ var jodit_core_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(64815);
/* harmony import */ var jodit_core_selection_style_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(93000);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(52378);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(62924);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */






const states = {
    START: 'START',
    ELEMENT: 'ELEMENT',
    UNWRAP: 'UNWRAP',
    UNWRAP_CHILDREN: 'UNWRAP_CHILDREN',
    CHANGE: 'CHANGE',
    REPLACE_DEFAULT: 'REPLACE_DEFAULT',
    LIST: 'LIST',
    TOGGLE_LIST: 'TOGGLE_LIST',
    WRAP: 'WRAP',
    EXTRACT: 'EXTRACT',
    END: 'END'
};
const transactions = {
    [states.START]: {
        exec(value) {
            const { element, jodit, style, mode, collapsed } = value;
            if ((0,jodit_core_selection_style_api__WEBPACK_IMPORTED_MODULE_1__/* .isInsideInvisibleElement */ .D_)(element, jodit.editor) ||
                (!collapsed && jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isEmptyContent(element))) {
                return Object.assign(Object.assign({}, value), { next: states.END });
            }
            const elm = (0,jodit_core_selection_style_api__WEBPACK_IMPORTED_MODULE_1__/* .getSuitParent */ .HB)(style, element, jodit.editor) ||
                (0,jodit_core_selection_style_api__WEBPACK_IMPORTED_MODULE_1__/* .getSuitChild */ .e)(style, element);
            if (elm) {
                return Object.assign(Object.assign({}, value), { next: states.ELEMENT, element: elm });
            }
            const suit = (0,jodit_core_selection_style_api__WEBPACK_IMPORTED_MODULE_1__/* .suitableClosest */ .qb)(style, element, jodit.editor);
            if (style.elementIsList && jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isList(suit)) {
                return Object.assign(Object.assign({}, value), { next: states.LIST });
            }
            if (suit) {
                return Object.assign(Object.assign({}, value), { next: states.EXTRACT });
            }
            return Object.assign(Object.assign({}, value), { next: mode !== jodit_core_selection__WEBPACK_IMPORTED_MODULE_0__/* .UNWRAP */ .Nc ? states.UNWRAP_CHILDREN : states.END });
        }
    },
    [states.LIST]: {
        exec(value) {
            const { element, jodit, mode } = value;
            if (mode !== jodit_core_selection__WEBPACK_IMPORTED_MODULE_0__/* .INITIAL */ ._X && mode !== jodit_core_selection__WEBPACK_IMPORTED_MODULE_0__/* .UNWRAP */ .Nc && mode !== jodit_core_selection__WEBPACK_IMPORTED_MODULE_0__/* .REPLACE */ .J5) {
                return Object.assign(Object.assign({}, value), { next: states.END });
            }
            const li = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.closest(element, 'li', jodit.editor);
            if (!li) {
                return Object.assign(Object.assign({}, value), { next: states.END });
            }
            const list = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.closest(element, jodit_core_constants__WEBPACK_IMPORTED_MODULE_4__.LIST_TAGS, jodit.editor);
            if (list) {
                return Object.assign(Object.assign({}, value), { element: li, next: states.TOGGLE_LIST });
            }
            return Object.assign(Object.assign({}, value), { next: states.END });
        }
    },
    [states.TOGGLE_LIST]: {
        exec(value) {
            return Object.assign(Object.assign({}, value), { mode: (0,jodit_core_selection_style_api__WEBPACK_IMPORTED_MODULE_1__/* .toggleOrderedList */ .JL)(value.style, value.element, value.jodit, value.mode), next: states.END });
        }
    },
    [states.EXTRACT]: {
        exec(value) {
            const { element, jodit, style } = value;
            const suit = (0,jodit_core_selection_style_api__WEBPACK_IMPORTED_MODULE_1__/* .suitableClosest */ .qb)(style, element, jodit.editor);
            void 0;
            if (!style.elementIsBlock) {
                (0,jodit_core_selection_style_api__WEBPACK_IMPORTED_MODULE_1__/* .extractSelectedPart */ .ig)(suit, element, jodit);
            }
            return Object.assign(Object.assign({}, value), { element: suit, next: states.ELEMENT });
        }
    },
    [states.UNWRAP_CHILDREN]: {
        exec(value) {
            const { element, style } = value;
            if (!(0,jodit_core_selection_style_api__WEBPACK_IMPORTED_MODULE_1__/* .unwrapChildren */ .Mh)(style, element)) {
                return Object.assign(Object.assign({}, value), { next: states.WRAP });
            }
            return Object.assign(Object.assign({}, value), { mode: jodit_core_selection__WEBPACK_IMPORTED_MODULE_0__/* .UNWRAP */ .Nc, next: states.END });
        }
    },
    [states.WRAP]: {
        exec(value) {
            const { element, jodit, style } = value;
            const wrapper = (0,jodit_core_selection_style_api__WEBPACK_IMPORTED_MODULE_1__/* .wrap */ .re)(style, element, jodit);
            return Object.assign(Object.assign({}, value), { next: style.elementIsList ? states.END : states.CHANGE, mode: jodit_core_selection__WEBPACK_IMPORTED_MODULE_0__/* .WRAP */ .Qu, element: wrapper });
        }
    },
    [states.ELEMENT]: {
        exec(value) {
            const { style, element, jodit } = value;
            if ((0,jodit_core_selection_style_api__WEBPACK_IMPORTED_MODULE_1__/* .toggleAttributes */ .iN)(style, element, jodit, jodit_core_selection__WEBPACK_IMPORTED_MODULE_0__/* .INITIAL */ ._X, true) !==
                jodit_core_selection__WEBPACK_IMPORTED_MODULE_0__/* .INITIAL */ ._X) {
                return Object.assign(Object.assign({}, value), { next: states.CHANGE });
            }
            // Apply same color for anchor https://github.com/xdan/jodit/issues/936
            if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isTag(element, style.element)) {
                return Object.assign(Object.assign({}, value), { next: states.END });
            }
            return Object.assign(Object.assign({}, value), { next: states.UNWRAP });
        }
    },
    [states.CHANGE]: {
        exec(value) {
            const { style, element, jodit, mode } = value;
            const newMode = (0,jodit_core_selection_style_api__WEBPACK_IMPORTED_MODULE_1__/* .toggleAttributes */ .iN)(style, element, jodit, value.mode);
            if (mode !== jodit_core_selection__WEBPACK_IMPORTED_MODULE_0__/* .WRAP */ .Qu &&
                newMode === jodit_core_selection__WEBPACK_IMPORTED_MODULE_0__/* .UNSET */ .p &&
                !element.attributes.length &&
                jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isTag(element, style.element)) {
                return Object.assign(Object.assign({}, value), { next: states.UNWRAP });
            }
            return Object.assign(Object.assign({}, value), { mode: newMode, next: states.END });
        }
    },
    [states.UNWRAP]: {
        exec(value) {
            if (value.element.attributes.length &&
                jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isTag(value.element, value.style.element)) {
                return Object.assign(Object.assign({}, value), { next: states.REPLACE_DEFAULT });
            }
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.unwrap(value.element);
            return Object.assign(Object.assign({}, value), { mode: jodit_core_selection__WEBPACK_IMPORTED_MODULE_0__/* .UNWRAP */ .Nc, next: states.END });
        }
    },
    [states.REPLACE_DEFAULT]: {
        exec(value) {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.replace(value.element, value.style.defaultTag, value.jodit.createInside, true);
            return Object.assign(Object.assign({}, value), { mode: jodit_core_selection__WEBPACK_IMPORTED_MODULE_0__/* .REPLACE */ .J5, next: states.END });
        }
    },
    [states.END]: {
        exec(value) {
            return value;
        }
    }
};


/***/ }),

/***/ 65186:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   L: function() { return /* binding */ canUsePersistentStorage; },
/* harmony export */   P: function() { return /* binding */ LocalStorageProvider; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * Check if user disable local storages/cookie etc.
 */
const canUsePersistentStorage = (() => {
    const canUse = () => {
        const tmpKey = '___Jodit___' + Math.random().toString();
        try {
            localStorage.setItem(tmpKey, '1');
            const result = localStorage.getItem(tmpKey) === '1';
            localStorage.removeItem(tmpKey);
            return result;
        }
        catch (_a) { }
        return false;
    };
    let result;
    return () => {
        if (result === undefined) {
            result = canUse();
        }
        return result;
    };
})();
/**
 * Persistent storage in localStorage
 */
class LocalStorageProvider {
    set(key, value) {
        try {
            const buffer = localStorage.getItem(this.rootKey);
            const json = buffer ? JSON.parse(buffer) : {};
            json[key] = value;
            localStorage.setItem(this.rootKey, JSON.stringify(json));
        }
        catch (_a) { }
        return this;
    }
    delete(key) {
        try {
            localStorage.removeItem(this.rootKey);
        }
        catch (_a) { }
        return this;
    }
    get(key) {
        try {
            const buffer = localStorage.getItem(this.rootKey);
            const json = buffer ? JSON.parse(buffer) : {};
            return json[key] !== undefined ? json[key] : null;
        }
        catch (_a) { }
    }
    exists(key) {
        return this.get(key) != null;
    }
    constructor(rootKey) {
        this.rootKey = rootKey;
    }
    clear() {
        try {
            localStorage.removeItem(this.rootKey);
        }
        catch (_a) { }
        return this;
    }
}


/***/ }),

/***/ 70959:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   m: function() { return /* binding */ MemoryStorageProvider; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
class MemoryStorageProvider {
    constructor() {
        this.data = new Map();
    }
    set(key, value) {
        this.data.set(key, value);
        return this;
    }
    delete(key) {
        this.data.delete(key);
        return this;
    }
    get(key) {
        return this.data.get(key);
    }
    exists(key) {
        return this.data.has(key);
    }
    clear() {
        this.data.clear();
        return this;
    }
}


/***/ }),

/***/ 81039:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Ke: function() { return /* reexport safe */ _storage__WEBPACK_IMPORTED_MODULE_1__.K; }
/* harmony export */ });
/* harmony import */ var _engines_local_storage_provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(65186);
/* harmony import */ var _storage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(83747);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module storage
 */





/***/ }),

/***/ 83747:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   K: function() { return /* binding */ Storage; }
/* harmony export */ });
/* unused harmony export StorageKey */
/* harmony import */ var jodit_core_helpers_string_camel_case__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(33683);
/* harmony import */ var _engines_local_storage_provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(65186);
/* harmony import */ var _engines_memory_storage_provider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(70959);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



const StorageKey = 'Jodit_';
class Storage {
    set(key, value) {
        this.provider.set((0,jodit_core_helpers_string_camel_case__WEBPACK_IMPORTED_MODULE_1__/* .camelCase */ .e)(this.prefix + key), value);
        return this;
    }
    delete(key) {
        this.provider.delete((0,jodit_core_helpers_string_camel_case__WEBPACK_IMPORTED_MODULE_1__/* .camelCase */ .e)(this.prefix + key));
        return this;
    }
    get(key) {
        return this.provider.get((0,jodit_core_helpers_string_camel_case__WEBPACK_IMPORTED_MODULE_1__/* .camelCase */ .e)(this.prefix + key));
    }
    exists(key) {
        return this.provider.exists((0,jodit_core_helpers_string_camel_case__WEBPACK_IMPORTED_MODULE_1__/* .camelCase */ .e)(this.prefix + key));
    }
    clear() {
        this.provider.clear();
        return this;
    }
    constructor(provider, suffix) {
        this.provider = provider;
        this.prefix = StorageKey;
        if (suffix) {
            this.prefix += suffix;
        }
    }
    static makeStorage(persistent = false, suffix) {
        let provider;
        if (persistent && (0,_engines_local_storage_provider__WEBPACK_IMPORTED_MODULE_0__/* .canUsePersistentStorage */ .L)()) {
            provider = new _engines_local_storage_provider__WEBPACK_IMPORTED_MODULE_0__/* .LocalStorageProvider */ .P(StorageKey + suffix);
        }
        if (!provider) {
            provider = new _engines_memory_storage_provider__WEBPACK_IMPORTED_MODULE_2__/* .MemoryStorageProvider */ .m();
        }
        return new Storage(provider, suffix);
    }
}


/***/ }),

/***/ 42297:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   l: function() { return /* binding */ Dlgs; }
/* harmony export */ });
/* harmony import */ var jodit_modules_dialog__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(39093);
/* harmony import */ var jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78157);
/* harmony import */ var jodit_core_helpers_utils_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(87398);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



class Dlgs {
    dlg(options) {
        const dialog = new jodit_modules_dialog__WEBPACK_IMPORTED_MODULE_0__/* .Dialog */ .Vq(Object.assign({ language: this.o.language, shadowRoot: this.o.shadowRoot, ownerWindow: this.o.ownerWindow, defaultTimeout: this.o.defaultTimeout, theme: this.o.theme, globalFullSize: this.o.globalFullSize }, options));
        (0,jodit_core_helpers_utils_utils__WEBPACK_IMPORTED_MODULE_2__/* .markOwner */ .MN)(this, dialog.container);
        dialog.parent = this;
        return dialog.bindDestruct(this);
    }
    confirm(msg, title, callback) {
        msg = processTitle(msg, this);
        title = processTitle(title, this);
        return jodit_modules_dialog__WEBPACK_IMPORTED_MODULE_0__/* .Confirm */ .I4.call(this.dlg({ closeOnClickOverlay: true }), msg, title, callback);
    }
    prompt(msg, title, callback, placeholder, defaultValue) {
        msg = processTitle(msg, this);
        title = processTitle(title, this);
        placeholder = processTitle(placeholder, this);
        return jodit_modules_dialog__WEBPACK_IMPORTED_MODULE_0__/* .Prompt */ .NL.call(this.dlg({ closeOnClickOverlay: true }), msg, title, callback, placeholder, defaultValue);
    }
    alert(msg, title, callback, className) {
        msg = processTitle(msg, this);
        title = processTitle(title, this);
        return jodit_modules_dialog__WEBPACK_IMPORTED_MODULE_0__/* .Alert */ .bZ.call(this.dlg({ closeOnClickOverlay: true }), msg, title, callback, className);
    }
}
function processTitle(title, self) {
    if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isString */ .HD)(title) && !(0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isHTML */ .FP)(title)) {
        title = self.i18n(title);
    }
    return title;
}


/***/ }),

/***/ 23839:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   F: function() { return /* binding */ Elms; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_array_to_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(24174);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

class Elms {
    /**
     * Return element with BEM class name
     */
    getElm(elementName) {
        return this.container.querySelector(`.${this.getFullElName(elementName)}`);
    }
    /**
     * Return elements with BEM class name
     */
    getElms(elementName) {
        return (0,jodit_core_helpers_array_to_array__WEBPACK_IMPORTED_MODULE_0__/* .toArray */ .q)(this.container.querySelectorAll(`.${this.getFullElName(elementName)}`));
    }
}


/***/ }),

/***/ 53795:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $: function() { return /* binding */ Mods; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_void__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(41240);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

class Mods {
    afterSetMod(name, value) { }
    /**
     * Set/remove BEM class modification
     *
     * @param value - if null, mod will be removed
     */
    setMod(name, value, container) {
        name = name.toLowerCase();
        const oldValue = this.mods[name];
        if (oldValue === value) {
            return this;
        }
        const mod = `${this.componentName}_${name}_`, cl = (container || this.container).classList;
        if (oldValue != null) {
            cl.remove(`${mod}${oldValue.toString().toLowerCase()}`);
        }
        !(0,jodit_core_helpers_checker_is_void__WEBPACK_IMPORTED_MODULE_0__/* .isVoid */ .n)(value) &&
            value !== '' &&
            cl.add(`${mod}${value.toString().toLowerCase()}`);
        this.mods[name] = value;
        this.afterSetMod(name, value);
        return this;
    }
    /**
     * Get BEM class modification value
     */
    getMod(name) {
        var _a;
        return (_a = this.mods[name]) !== null && _a !== void 0 ? _a : null;
    }
}


/***/ }),

/***/ 22003:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Yc: function() { return /* binding */ UIButtonState; },
/* harmony export */   y3: function() { return /* binding */ UIButton; },
/* harmony export */   zx: function() { return /* binding */ Button; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_ui_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18970);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(86284);
/* harmony import */ var jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(2926);
/* harmony import */ var jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(69099);
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(30052);
/* harmony import */ var jodit_core_ui_group_list__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7628);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_component_statuses__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(74028);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * @module ui/button
 */










const UIButtonState = () => ({
    size: 'middle',
    type: 'button',
    name: '',
    value: '',
    variant: 'initial',
    disabled: false,
    activated: false,
    icon: {
        name: 'empty',
        fill: '',
        iconURL: ''
    },
    tooltip: '',
    text: '',
    tabIndex: undefined
});
let UIButton = class UIButton extends jodit_core_ui_element__WEBPACK_IMPORTED_MODULE_0__/* .UIElement */ .u {
    /** @override */
    className() {
        return 'UIButton';
    }
    /**
     * Set state
     */
    setState(state) {
        Object.assign(this.state, state);
        return this;
    }
    /**
     * DOM container for text content
     */
    get text() {
        const text = this.getElm('text');
        void 0;
        return text;
    }
    /**
     * DOM container for icon
     */
    get icon() {
        const icon = this.getElm('icon');
        void 0;
        return icon;
    }
    onChangeSize() {
        this.setMod('size', this.state.size);
    }
    onChangeType() {
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_2__.attr)(this.container, 'type', this.state.type);
    }
    /**
     * Set size from parent list
     */
    updateSize() {
        const pe = this.closest(jodit_core_ui_group_list__WEBPACK_IMPORTED_MODULE_4__/* .UIList */ .b);
        if (pe) {
            this.state.size = pe.buttonSize;
            return;
        }
    }
    onChangeStatus() {
        this.setMod('variant', this.state.variant);
    }
    onChangeText() {
        this.text.textContent = this.jodit.i18n(this.state.text);
    }
    onChangeTextSetMode() {
        this.setMod('text-icons', Boolean(this.state.text.trim().length));
    }
    onChangeDisabled() {
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_2__.attr)(this.container, 'disabled', this.state.disabled || null);
    }
    onChangeActivated() {
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_2__.attr)(this.container, 'aria-pressed', this.state.activated);
    }
    onChangeName() {
        this.container.classList.add(`${this.componentName}_${this.clearName(this.state.name)}`);
        this.name = this.state.name;
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_2__.attr)(this.container, 'data-ref', this.state.name);
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_2__.attr)(this.container, 'ref', this.state.name);
    }
    onChangeTooltip() {
        if (this.get('j.o.useNativeTooltip')) {
            (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_2__.attr)(this.container, 'title', this.state.tooltip);
        }
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_2__.attr)(this.container, 'aria-label', this.state.tooltip);
    }
    onChangeTabIndex() {
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_2__.attr)(this.container, 'tabindex', this.state.tabIndex);
    }
    onChangeIcon() {
        const textIcons = this.get('j.o.textIcons');
        if (textIcons === true ||
            ((0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_7__/* .isFunction */ .m)(textIcons) && textIcons(this.state.name))) {
            return;
        }
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.detach(this.icon);
        const iconElement = jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_3__/* .Icon */ .J.makeIcon(this.j, this.state.icon);
        iconElement && this.icon.appendChild(iconElement);
    }
    /**
     * Set focus on element
     */
    focus() {
        this.container.focus();
    }
    /**
     * Element has focus
     */
    isFocused() {
        const { activeElement } = this.od;
        return Boolean(activeElement && jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isOrContains(this.container, activeElement));
    }
    /** @override */
    createContainer() {
        const cn = this.componentName;
        const button = this.j.c.element('button', {
            class: cn,
            type: 'button',
            role: 'button',
            ariaPressed: false
        });
        const icon = this.j.c.span(cn + '__icon');
        const text = this.j.c.span(cn + '__text');
        button.appendChild(icon);
        button.appendChild(text);
        return button;
    }
    constructor(jodit, state) {
        super(jodit);
        /**
         * Marker for buttons
         */
        this.isButton = true;
        this.state = UIButtonState();
        this.actionHandlers = [];
        this.button = this.container;
        this.updateSize();
        this.onChangeSize();
        this.onChangeStatus();
        if (state) {
            this.hookStatus(jodit_core_component_statuses__WEBPACK_IMPORTED_MODULE_6__/* .STATUSES */ .n.ready, () => {
                this.setState(state);
            });
        }
    }
    destruct() {
        this.j.e.off(this.container);
        return super.destruct();
    }
    /**
     * Add action handler
     */
    onAction(callback) {
        this.actionHandlers.push(callback);
        return this;
    }
    /**
     * Fire all click handlers
     */
    __onActionFire(e) {
        e.buffer = {
            actionTrigger: this
        };
        this.actionHandlers.forEach(callback => callback.call(this, e));
    }
};
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.cache
], UIButton.prototype, "text", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.cache
], UIButton.prototype, "icon", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.watch)('state.size', { immediately: false })
], UIButton.prototype, "onChangeSize", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.watch)('state.type', { immediately: false })
], UIButton.prototype, "onChangeType", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.watch)('parentElement')
], UIButton.prototype, "updateSize", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.watch)('state.variant', { immediately: false })
], UIButton.prototype, "onChangeStatus", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.watch)('state.text', { immediately: false })
], UIButton.prototype, "onChangeText", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.watch)('state.text', { immediately: false })
], UIButton.prototype, "onChangeTextSetMode", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.watch)('state.disabled')
], UIButton.prototype, "onChangeDisabled", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.watch)('state.activated')
], UIButton.prototype, "onChangeActivated", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.watch)('state.name', { immediately: false })
], UIButton.prototype, "onChangeName", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.watch)('state.tooltip', { immediately: false })
], UIButton.prototype, "onChangeTooltip", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.watch)('state.tabIndex', { immediately: false })
], UIButton.prototype, "onChangeTabIndex", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.watch)('state.icon', { immediately: false })
], UIButton.prototype, "onChangeIcon", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.cacheHTML
], UIButton.prototype, "createContainer", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.watch)('button:click')
], UIButton.prototype, "__onActionFire", null);
UIButton = (0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.component
], UIButton);

function Button(jodit, stateOrText, text, variant) {
    const button = new UIButton(jodit);
    button.state.tabIndex = jodit.o.allowTabNavigation ? 0 : -1;
    if ((0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_9__/* .isString */ .H)(stateOrText)) {
        button.state.icon.name = stateOrText;
        button.state.name = stateOrText;
        if (variant) {
            button.state.variant = variant;
        }
        if (text) {
            button.state.text = text;
        }
    }
    else {
        button.setState(stateOrText);
    }
    return button;
}


/***/ }),

/***/ 40740:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   B: function() { return /* binding */ UIButtonGroup; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_ui_group_group__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(82622);
/* harmony import */ var jodit_core_decorators_component_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(75042);
/* harmony import */ var jodit_core_ui_button_button_button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(22003);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(52378);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_2__);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * @module ui/button
 */





let UIButtonGroup = class UIButtonGroup extends jodit_core_ui_group_group__WEBPACK_IMPORTED_MODULE_0__/* .UIGroup */ .q {
    /** @override */
    className() {
        return 'UIButtonGroup';
    }
    /** @override */
    render(options) {
        return `<div>
			<div class="&__label">~${options.label}~</div>
			<div class="&__options"></div>
		</div>`;
    }
    /** @override */
    appendChildToContainer(childContainer) {
        const options = this.getElm('options');
        void 0;
        options.appendChild(childContainer);
    }
    constructor(jodit, options = {
        radio: true
    }) {
        var _a, _b;
        super(jodit, (_a = options.options) === null || _a === void 0 ? void 0 : _a.map(opt => {
            const btn = new jodit_core_ui_button_button_button__WEBPACK_IMPORTED_MODULE_1__/* .UIButton */ .y3(jodit, {
                text: opt.text,
                value: opt.value,
                variant: 'primary'
            });
            btn.onAction(() => {
                this.select(opt.value);
            });
            return btn;
        }), options);
        this.options = options;
        this.select((_b = options.value) !== null && _b !== void 0 ? _b : 0);
    }
    select(indexOrValue) {
        var _a, _b;
        this.elements.forEach((elm, index) => {
            if (index === indexOrValue || elm.state.value === indexOrValue) {
                elm.state.activated = true;
            }
            else if (this.options.radio) {
                elm.state.activated = false;
            }
        });
        const result = this.elements
            .filter(elm => elm.state.activated)
            .map(elm => ({
            text: elm.state.text,
            value: elm.state.value
        }));
        this.jodit.e.fire(this, 'select', result);
        (_b = (_a = this.options).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, result);
    }
};
UIButtonGroup = (0,tslib__WEBPACK_IMPORTED_MODULE_3__/* .__decorate */ .gn)([
    jodit_core_decorators_component_component__WEBPACK_IMPORTED_MODULE_4__/* .component */ .w
], UIButtonGroup);



/***/ }),

/***/ 64856:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BO: function() { return /* reexport safe */ _group_group__WEBPACK_IMPORTED_MODULE_1__.B; },
/* harmony export */   Ne: function() { return /* reexport safe */ _tooltip_tooltip__WEBPACK_IMPORTED_MODULE_2__.N; },
/* harmony export */   Yc: function() { return /* reexport safe */ _button_button__WEBPACK_IMPORTED_MODULE_0__.Yc; },
/* harmony export */   y3: function() { return /* reexport safe */ _button_button__WEBPACK_IMPORTED_MODULE_0__.y3; },
/* harmony export */   zx: function() { return /* reexport safe */ _button_button__WEBPACK_IMPORTED_MODULE_0__.zx; }
/* harmony export */ });
/* harmony import */ var _button_button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(22003);
/* harmony import */ var _group_group__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(40740);
/* harmony import */ var _tooltip_tooltip__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(13878);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * [[include:core/ui/button/README.md]]
 * @packageDocumentation
 * @module ui/button
 */





/***/ }),

/***/ 13878:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   N: function() { return /* binding */ UITooltip; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(86284);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(79102);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_ui_element__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(18970);
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_helpers_size_position__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(31080);
/* harmony import */ var jodit_core_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(2581);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
var UITooltip_1;

/**
 * [[include:core/ui/button/tooltip/README.md]]
 * @packageDocumentation
 * @module ui/button
 */








let UITooltip = UITooltip_1 = class UITooltip extends jodit_core_ui_element__WEBPACK_IMPORTED_MODULE_3__/* .UIElement */ .u {
    className() {
        return 'UITooltip';
    }
    render() {
        return '<div><div class="&__content"></div></div>';
    }
    constructor(view) {
        super(view);
        this.__isOpened = false;
        this.__listenClose = false;
        this.__currentTarget = null;
        this.__delayShowTimeout = 0;
        this.__hideTimeout = 0;
        if (!view.o.textIcons &&
            view.o.showTooltip &&
            !view.o.useNativeTooltip) {
            view.hookStatus(jodit_core_component__WEBPACK_IMPORTED_MODULE_5__/* .STATUSES */ .n$.ready, () => {
                (0,jodit_core_global__WEBPACK_IMPORTED_MODULE_1__/* .getContainer */ .ZO)(view, UITooltip_1).appendChild(this.container);
                view.e.on(view.container, 'mouseenter.tooltip', this.__onMouseEnter, {
                    capture: true
                });
            });
        }
    }
    __addListenersOnClose() {
        if (this.__listenClose) {
            return;
        }
        this.__listenClose = true;
        const view = this.j;
        view.e
            .on(view.ow, 'scroll.tooltip', this.__hide)
            .on(view.container, 'mouseleave.tooltip', this.__hide)
            .on([
            'escape.tooltip',
            'change.tooltip',
            'changePlace.tooltip',
            'afterOpenPopup.tooltip',
            'hidePopup.tooltip',
            'closeAllPopups.tooltip'
        ], this.__hide)
            .on(view.container, 'mouseleave', this.__onMouseLeave, {
            capture: true
        });
    }
    __removeListenersOnClose() {
        if (!this.__listenClose) {
            return;
        }
        this.__listenClose = false;
        const view = this.j;
        view.e
            .off(view.ow, 'scroll.tooltip', this.__hide)
            .off([
            'escape.tooltip',
            'change.tooltip',
            'changePlace.tooltip',
            'afterOpenPopup.tooltip',
            'hidePopup.tooltip',
            'closeAllPopups.tooltip'
        ], this.__hide)
            .off(view.container, 'mouseleave.tooltip', this.__onMouseLeave);
    }
    __onMouseLeave(e) {
        if (this.__currentTarget === e.target) {
            this.__hideDelay();
            this.__currentTarget = null;
        }
    }
    __onMouseEnter(e) {
        if (!jodit_core_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.isHTMLElement(e.target)) {
            return;
        }
        const tooltip = (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_0__.attr)(e.target, 'aria-label');
        if (!tooltip) {
            return;
        }
        const disabled = Boolean((0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_0__.attr)(e.target, 'disabled'));
        if (disabled) {
            return;
        }
        const isOwn = e.target.className.includes('jodit');
        if (!isOwn) {
            return;
        }
        this.__currentTarget = e.target;
        const pos = (0,jodit_core_helpers_size_position__WEBPACK_IMPORTED_MODULE_6__/* .position */ .F)(e.target);
        this.__addListenersOnClose();
        this.__delayOpen(() => ({
            x: pos.left + pos.width / 2,
            y: pos.top + pos.height
        }), tooltip);
    }
    __delayOpen(getPoint, content) {
        const to = this.j.o.showTooltipDelay || this.j.defaultTimeout;
        this.j.async.clearTimeout(this.__hideTimeout);
        this.j.async.clearTimeout(this.__delayShowTimeout);
        this.__delayShowTimeout = this.j.async.setTimeout(() => this.__open(getPoint, content), {
            timeout: to,
            label: 'tooltip'
        });
    }
    __open(getPoint, content) {
        this.setMod('visible', true);
        this.getElm('content').innerHTML = content;
        this.__isOpened = true;
        this.__setPosition(getPoint);
    }
    __setPosition(getPoint) {
        const point = getPoint();
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_0__.css)(this.container, {
            left: point.x,
            top: point.y
        });
    }
    __hide() {
        this.j.async.clearTimeout(this.__delayShowTimeout);
        this.j.async.clearTimeout(this.__hideTimeout);
        this.__removeListenersOnClose();
        if (this.__isOpened) {
            this.__isOpened = false;
            this.setMod('visible', false);
            (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_0__.css)(this.container, {
                left: -5000
            });
        }
    }
    __hideDelay() {
        if (!this.__isOpened) {
            return;
        }
        this.j.async.clearTimeout(this.__delayShowTimeout);
        this.__hideTimeout = this.async.setTimeout(this.__hide, this.j.defaultTimeout);
    }
    destruct() {
        this.j.e.off(this.j.container, 'mouseenter', this.__onMouseEnter);
        this.__hide();
        super.destruct();
    }
};
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_2__.autobind
], UITooltip.prototype, "__onMouseLeave", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_2__.autobind
], UITooltip.prototype, "__onMouseEnter", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_2__.autobind
], UITooltip.prototype, "__delayOpen", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_2__.autobind
], UITooltip.prototype, "__hide", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_2__.autobind
], UITooltip.prototype, "__hideDelay", null);
UITooltip = UITooltip_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_2__.component
], UITooltip);



/***/ }),

/***/ 18970:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   u: function() { return /* binding */ UIElement; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2581);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_traits_mods__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(53795);
/* harmony import */ var jodit_core_traits_elms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(23839);
/* harmony import */ var jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2926);
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(30052);
/* harmony import */ var jodit_core_decorators_derive_derive__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(17174);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
var UIElement_1;








let UIElement = UIElement_1 = class UIElement extends jodit_core_component__WEBPACK_IMPORTED_MODULE_0__/* .ViewComponent */ .Hr {
    get parentElement() {
        return this.__parentElement;
    }
    set parentElement(parentElement) {
        this.__parentElement = parentElement;
        if (parentElement) {
            parentElement.hookStatus('beforeDestruct', () => this.destruct());
        }
        this.updateParentElement(this);
    }
    bubble(callback) {
        let parent = this.parentElement;
        while (parent) {
            callback(parent);
            parent = parent.parentElement;
        }
        return this;
    }
    updateParentElement(target) {
        var _a;
        (_a = this.__parentElement) === null || _a === void 0 ? void 0 : _a.updateParentElement(target);
        return this;
    }
    /** @override */
    get(chain, obj) {
        return super.get(chain, obj) || this.getElm(chain);
    }
    /**
     * Find match parent
     */
    closest(type) {
        const c = typeof type === 'object'
            ? (pe) => pe === type
            : (pe) => jodit_core_component__WEBPACK_IMPORTED_MODULE_0__/* .Component */ .wA.isInstanceOf(pe, type);
        let pe = this.__parentElement;
        while (pe) {
            if (c(pe)) {
                return pe;
            }
            if (!pe.parentElement && pe.container.parentElement) {
                pe = UIElement_1.closestElement(pe.container.parentElement, UIElement_1);
            }
            else {
                pe = pe.parentElement;
            }
        }
        return null;
    }
    /**
     * Find closest UIElement in DOM
     */
    static closestElement(node, type) {
        const elm = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.up(node, elm => {
            if (elm) {
                const { component } = elm;
                return component && jodit_core_component__WEBPACK_IMPORTED_MODULE_0__/* .Component */ .wA.isInstanceOf(component, type);
            }
            return false;
        });
        return elm ? elm === null || elm === void 0 ? void 0 : elm.component : null;
    }
    /**
     * Update UI from state
     */
    update() {
        // empty
    }
    /**
     * Append container to element
     */
    appendTo(element) {
        element.appendChild(this.container);
        return this;
    }
    /**
     * Valid name only with valid chars
     */
    clearName(name) {
        return name.replace(/[^a-zA-Z0-9]/g, '_');
    }
    /**
     * Method create only box
     */
    render(options) {
        return this.j.c.div(this.componentName);
    }
    /**
     * Create main HTML container
     */
    createContainer(options) {
        const result = this.render(options);
        if ((0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_4__/* .isString */ .H)(result)) {
            const elm = this.parseTemplate(result);
            elm.classList.add(this.componentName);
            return elm;
        }
        return result;
    }
    parseTemplate(result) {
        return this.j.c.fromHTML(result
            .replace(/\*([^*]+?)\*/g, (_, name) => jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_3__/* .Icon */ .J.get(name) || '')
            .replace(/&__/g, this.componentName + '__')
            .replace(/~([^~]+?)~/g, (_, s) => this.i18n(s)));
    }
    /** @override */
    constructor(jodit, options) {
        super(jodit);
        this.name = '';
        this.__parentElement = null;
        this.mods = {};
        this.container = this.createContainer(options);
        Object.defineProperty(this.container, 'component', {
            value: this,
            configurable: true
        });
    }
    /** @override */
    destruct() {
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(this.container);
        this.parentElement = null;
        return super.destruct();
    }
};
UIElement = UIElement_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_5__/* .__decorate */ .gn)([
    (0,jodit_core_decorators_derive_derive__WEBPACK_IMPORTED_MODULE_6__/* .derive */ .s)(jodit_core_traits_mods__WEBPACK_IMPORTED_MODULE_7__/* .Mods */ .$, jodit_core_traits_elms__WEBPACK_IMPORTED_MODULE_2__/* .Elms */ .F)
], UIElement);



/***/ }),

/***/ 15543:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   e: function() { return /* binding */ UIBlock; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_ui_group_group__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(82622);
/* harmony import */ var jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(86284);
/* harmony import */ var jodit_core_decorators_component_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(75042);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * @module ui/form
 */




let UIBlock = class UIBlock extends jodit_core_ui_group_group__WEBPACK_IMPORTED_MODULE_0__/* .UIGroup */ .q {
    /** @override */
    className() {
        return 'UIBlock';
    }
    constructor(jodit, elements, options = {
        align: 'left'
    }) {
        super(jodit, elements);
        this.options = options;
        this.setMod('align', this.options.align || 'left');
        this.setMod('width', this.options.width || '');
        this.options.mod && this.setMod(this.options.mod, true);
        this.options.className &&
            this.container.classList.add(this.options.className);
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.attr)(this.container, 'data-ref', options.ref);
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.attr)(this.container, 'ref', options.ref);
    }
};
UIBlock = (0,tslib__WEBPACK_IMPORTED_MODULE_2__/* .__decorate */ .gn)([
    jodit_core_decorators_component_component__WEBPACK_IMPORTED_MODULE_3__/* .component */ .w
], UIBlock);



/***/ }),

/***/ 99048:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   x: function() { return /* binding */ UIForm; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_ui_group_group__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(82622);
/* harmony import */ var jodit_core_ui_form_inputs_input_input__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(87451);
/* harmony import */ var jodit_core_ui_form_inputs_select_select__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(58942);
/* harmony import */ var jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(86284);
/* harmony import */ var jodit_core_decorators_component_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(75042);
/* harmony import */ var jodit_core_component_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(91003);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */







let UIForm = class UIForm extends jodit_core_ui_group_group__WEBPACK_IMPORTED_MODULE_0__/* .UIGroup */ .q {
    /** @override */
    className() {
        return 'UIForm';
    }
    submit() {
        this.j.e.fire(this.container, 'submit');
    }
    validate() {
        const inputs = this.allChildren.filter(elm => jodit_core_component_component__WEBPACK_IMPORTED_MODULE_4__/* .Component */ .w.isInstanceOf(elm, jodit_core_ui_form_inputs_input_input__WEBPACK_IMPORTED_MODULE_1__/* .UIInput */ .u));
        for (const input of inputs) {
            if (!input.validate()) {
                return false;
            }
        }
        const selects = this.allChildren.filter(elm => jodit_core_component_component__WEBPACK_IMPORTED_MODULE_4__/* .Component */ .w.isInstanceOf(elm, jodit_core_ui_form_inputs_select_select__WEBPACK_IMPORTED_MODULE_2__/* .UISelect */ .C));
        for (const select of selects) {
            if (!select.validate()) {
                return false;
            }
        }
        return true;
    }
    onSubmit(handler) {
        this.j.e.on(this.container, 'submit', () => {
            const inputs = this.allChildren.filter(elm => jodit_core_component_component__WEBPACK_IMPORTED_MODULE_4__/* .Component */ .w.isInstanceOf(elm, jodit_core_ui_form_inputs_input_input__WEBPACK_IMPORTED_MODULE_1__/* .UIInput */ .u));
            if (!this.validate()) {
                return false;
            }
            handler(inputs.reduce((res, item) => {
                res[item.state.name] = item.value;
                return res;
            }, {}));
            return false;
        });
    }
    /** @override */
    createContainer() {
        const form = this.j.c.element('form');
        form.classList.add(this.componentName);
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_3__.attr)(form, 'dir', this.j.o.direction || 'auto');
        return form;
    }
    constructor(...args) {
        var _a, _b;
        super(...args);
        if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.className) {
            this.container.classList.add((_b = this.options) === null || _b === void 0 ? void 0 : _b.className);
        }
    }
};
UIForm = (0,tslib__WEBPACK_IMPORTED_MODULE_5__/* .__decorate */ .gn)([
    jodit_core_decorators_component_component__WEBPACK_IMPORTED_MODULE_6__/* .component */ .w
], UIForm);



/***/ }),

/***/ 79000:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Cj: function() { return /* reexport safe */ _inputs__WEBPACK_IMPORTED_MODULE_1__.Cj; },
/* harmony export */   GJ: function() { return /* reexport safe */ _inputs__WEBPACK_IMPORTED_MODULE_1__.GJ; },
/* harmony export */   Z: function() { return /* reexport safe */ _inputs__WEBPACK_IMPORTED_MODULE_1__.Z; },
/* harmony export */   eC: function() { return /* reexport safe */ _block_block__WEBPACK_IMPORTED_MODULE_2__.e; },
/* harmony export */   mA: function() { return /* reexport safe */ _inputs__WEBPACK_IMPORTED_MODULE_1__.mA; },
/* harmony export */   u3: function() { return /* reexport safe */ _inputs__WEBPACK_IMPORTED_MODULE_1__.u3; },
/* harmony export */   x4: function() { return /* reexport safe */ _form__WEBPACK_IMPORTED_MODULE_0__.x; }
/* harmony export */ });
/* harmony import */ var _form__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(99048);
/* harmony import */ var _inputs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(75878);
/* harmony import */ var _block_block__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(15543);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module ui/form
 */





/***/ }),

/***/ 92919:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   G: function() { return /* binding */ UITextArea; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_ui_form_inputs_input_input__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(87451);
/* harmony import */ var jodit_core_decorators_component_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(75042);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(13666);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
var UITextArea_1;

/**
 * @module ui/form
 */




let UITextArea = UITextArea_1 = class UITextArea extends jodit_core_ui_form_inputs_input_input__WEBPACK_IMPORTED_MODULE_0__/* .UIInput */ .u {
    /** @override */
    className() {
        return 'UITextArea';
    }
    createNativeInput(options) {
        return this.j.create.element('textarea');
    }
    constructor(jodit, state) {
        super(jodit, state);
        /** @override */
        this.state = Object.assign({}, UITextArea_1.defaultState);
        Object.assign(this.state, state);
        if (this.state.resizable === false) {
            this.nativeInput.style.resize = 'none';
        }
    }
    onChangeStateSize() {
        const { size, resizable } = this.state;
        this.nativeInput.style.resize = resizable ? 'auto' : 'none';
        this.nativeInput.rows = size !== null && size !== void 0 ? size : 5;
    }
};
/** @override */
UITextArea.defaultState = Object.assign(Object.assign({}, jodit_core_ui_form_inputs_input_input__WEBPACK_IMPORTED_MODULE_0__/* .UIInput */ .u.defaultState), { size: 5, resizable: true });
(0,tslib__WEBPACK_IMPORTED_MODULE_2__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.watch)(['state.size', 'state.resizable'])
], UITextArea.prototype, "onChangeStateSize", null);
UITextArea = UITextArea_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_2__/* .__decorate */ .gn)([
    jodit_core_decorators_component_component__WEBPACK_IMPORTED_MODULE_3__/* .component */ .w
], UITextArea);



/***/ }),

/***/ 45637:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   m: function() { return /* binding */ UICheckbox; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_ui_form_inputs_input_input__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(87451);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9162);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
var UICheckbox_1;

/**
 * @module ui/form
 */




let UICheckbox = UICheckbox_1 = class UICheckbox extends jodit_core_ui_form_inputs_input_input__WEBPACK_IMPORTED_MODULE_0__/* .UIInput */ .u {
    /** @override */
    className() {
        return 'UICheckbox';
    }
    /** @override */
    render() {
        return this.j.c.element('label', {
            className: this.componentName
        });
    }
    /** @override **/
    constructor(jodit, options) {
        super(jodit, Object.assign(Object.assign({}, options), { type: 'checkbox' }));
        /** @override */
        this.state = Object.assign({}, UICheckbox_1.defaultState);
        Object.assign(this.state, options);
    }
    onChangeChecked() {
        this.value = this.state.checked.toString();
        this.nativeInput.checked = this.state.checked;
        this.setMod('checked', this.state.checked);
    }
    onChangeNativeCheckBox() {
        this.state.checked = this.nativeInput.checked;
    }
    onChangeSwitch() {
        this.setMod('switch', this.state.switch);
        let slider = this.getElm('switch-slider');
        if (this.state.switch) {
            if (!slider) {
                slider = this.j.c.div(this.getFullElName('switch-slider'));
            }
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.after(this.nativeInput, slider);
        }
        else {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.safeRemove(slider);
        }
    }
};
/** @override */
UICheckbox.defaultState = Object.assign(Object.assign({}, jodit_core_ui_form_inputs_input_input__WEBPACK_IMPORTED_MODULE_0__/* .UIInput */ .u.defaultState), { checked: false, switch: false });
(0,tslib__WEBPACK_IMPORTED_MODULE_3__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.watch)('state.checked'),
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.hook)('ready')
], UICheckbox.prototype, "onChangeChecked", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.watch)('nativeInput:change')
], UICheckbox.prototype, "onChangeNativeCheckBox", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.watch)('state.switch'),
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.hook)('ready')
], UICheckbox.prototype, "onChangeSwitch", null);
UICheckbox = UICheckbox_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.component
], UICheckbox);



/***/ }),

/***/ 21447:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ UIFileInput; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_ui_form_inputs_input_input__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(87451);
/* harmony import */ var jodit_core_decorators_component_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(75042);
/* harmony import */ var jodit_core_ui_button_button_button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(22003);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * @module ui/form
 */




let UIFileInput = class UIFileInput extends jodit_core_ui_form_inputs_input_input__WEBPACK_IMPORTED_MODULE_0__/* .UIInput */ .u {
    /** @override */
    className() {
        return 'UIFileInput';
    }
    createContainer(options) {
        this.button = new jodit_core_ui_button_button_button__WEBPACK_IMPORTED_MODULE_1__/* .UIButton */ .y3(this.j, {
            icon: {
                name: 'plus'
            }
        });
        const { container } = this.button;
        if (!this.nativeInput) {
            this.nativeInput = this.createNativeInput(options);
        }
        const { nativeInput } = this;
        nativeInput.classList.add(this.getFullElName('input'));
        container.classList.add(this.componentName);
        container.appendChild(nativeInput);
        return container;
    }
    createNativeInput(options) {
        return this.j.create.fromHTML(`<input
			type="file"
			accept="${options.onlyImages ? 'image/*' : '*'}"
			tabindex="-1"
			dir="auto"
			multiple=""
		/>`);
    }
    constructor(jodit, options) {
        super(jodit, Object.assign({ type: 'file' }, options));
        this.state = Object.assign(Object.assign({}, jodit_core_ui_form_inputs_input_input__WEBPACK_IMPORTED_MODULE_0__/* .UIInput */ .u.defaultState), { type: 'file', onlyImages: true });
    }
};
UIFileInput = (0,tslib__WEBPACK_IMPORTED_MODULE_2__/* .__decorate */ .gn)([
    jodit_core_decorators_component_component__WEBPACK_IMPORTED_MODULE_3__/* .component */ .w
], UIFileInput);



/***/ }),

/***/ 75878:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Cj: function() { return /* reexport safe */ _select_select__WEBPACK_IMPORTED_MODULE_3__.C; },
/* harmony export */   GJ: function() { return /* reexport safe */ _area_area__WEBPACK_IMPORTED_MODULE_1__.G; },
/* harmony export */   Z: function() { return /* reexport safe */ _file_file__WEBPACK_IMPORTED_MODULE_4__.Z; },
/* harmony export */   mA: function() { return /* reexport safe */ _checkbox_checkbox__WEBPACK_IMPORTED_MODULE_2__.m; },
/* harmony export */   u3: function() { return /* reexport safe */ _input_input__WEBPACK_IMPORTED_MODULE_0__.u; }
/* harmony export */ });
/* harmony import */ var _input_input__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(87451);
/* harmony import */ var _area_area__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(92919);
/* harmony import */ var _checkbox_checkbox__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(45637);
/* harmony import */ var _select_select__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(58942);
/* harmony import */ var _file_file__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(21447);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module ui/form
 */







/***/ }),

/***/ 87451:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   u: function() { return /* binding */ UIInput; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_ui_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18970);
/* harmony import */ var jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(86284);
/* harmony import */ var jodit_core_helpers_array_to_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(24174);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(30052);
/* harmony import */ var jodit_core_ui_form_validators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(13839);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
var UIInput_1;

/**
 * @module ui/form
 */








let UIInput = UIInput_1 = class UIInput extends jodit_core_ui_element__WEBPACK_IMPORTED_MODULE_0__/* .UIElement */ .u {
    /** @override */
    className() {
        return 'UIInput';
    }
    onChangeClear() {
        if (this.state.clearButton) {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_3__/* .Dom */ .i.after(this.nativeInput, this.clearButton);
        }
        else {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_3__/* .Dom */ .i.safeRemove(this.clearButton);
        }
    }
    onChangeClassName(ignore, oldClassName) {
        oldClassName && this.container.classList.remove(oldClassName);
        this.state.className &&
            this.container.classList.add(this.state.className);
    }
    onChangeState() {
        this.name = this.state.name;
        const input = this.nativeInput, { name, icon, type, ref, required, placeholder, autocomplete, label } = this.state;
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.attr)(input, 'name', name);
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.attr)(input, 'type', type);
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.attr)(input, 'data-ref', ref || name);
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.attr)(input, 'ref', ref || name);
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.attr)(input, 'required', required || null);
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.attr)(input, 'autocomplete', !autocomplete ? 'off' : null);
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.attr)(input, 'placeholder', placeholder ? this.j.i18n(placeholder) : '');
        if (icon && jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_5__/* .Icon */ .J.exists(icon)) {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_3__/* .Dom */ .i.before(input, this.icon);
            this.icon.innerHTML = jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_5__/* .Icon */ .J.get(icon);
        }
        else {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_3__/* .Dom */ .i.safeRemove(this.icon);
        }
        if (label) {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_3__/* .Dom */ .i.before(this.wrapper, this.label);
            this.label.innerText = this.j.i18n(label);
        }
        else {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_3__/* .Dom */ .i.safeRemove(this.label);
        }
        this.updateValidators();
    }
    updateValidators() {
        var _a;
        this.validators.clear();
        if (this.state.required) {
            this.validators.add(jodit_core_ui_form_validators__WEBPACK_IMPORTED_MODULE_6__/* .inputValidators.required */ .g.required);
        }
        (_a = this.state.validators) === null || _a === void 0 ? void 0 : _a.forEach(name => {
            const validator = jodit_core_ui_form_validators__WEBPACK_IMPORTED_MODULE_6__/* .inputValidators */ .g[name];
            validator && this.validators.add(validator);
        });
    }
    set error(value) {
        this.setMod('has-error', Boolean(value));
        if (!value) {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_3__/* .Dom */ .i.safeRemove(this.__errorBox);
        }
        else {
            this.__errorBox.innerText = this.j.i18n(value, this.j.i18n(this.state.label || ''));
            this.container.appendChild(this.__errorBox);
        }
    }
    get value() {
        return this.nativeInput.value;
    }
    set value(value) {
        if (this.value !== value) {
            this.nativeInput.value = value;
            this.onChangeValue();
        }
    }
    /**
     * Call on every state value changed
     */
    onChangeStateValue() {
        const value = this.state.value.toString();
        if (value !== this.value) {
            this.value = value;
        }
    }
    /**
     * Call on every native value changed
     */
    onChangeValue() {
        var _a, _b;
        const { value } = this;
        if (this.state.value !== value) {
            this.state.value = value;
            this.j.e.fire(this, 'change', value);
            (_b = (_a = this.state).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, value);
        }
    }
    validate() {
        this.error = '';
        return (0,jodit_core_helpers_array_to_array__WEBPACK_IMPORTED_MODULE_2__/* .toArray */ .q)(this.validators).every(validator => validator(this));
    }
    /** @override **/
    createContainer(options) {
        const container = super.createContainer();
        this.wrapper = this.j.c.div(this.getFullElName('wrapper'));
        if (!this.nativeInput) {
            this.nativeInput = this.createNativeInput();
        }
        const { nativeInput } = this;
        nativeInput.classList.add(this.getFullElName('input'));
        this.wrapper.appendChild(nativeInput);
        container.appendChild(this.wrapper);
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.attr)(nativeInput, 'dir', this.j.o.direction || 'auto');
        return container;
    }
    /**
     * Create native input element
     */
    createNativeInput(options) {
        return this.j.create.element('input');
    }
    /** @override **/
    constructor(jodit, options) {
        super(jodit, options);
        this.label = this.j.c.span(this.getFullElName('label'));
        this.icon = this.j.c.span(this.getFullElName('icon'));
        this.clearButton = this.j.c.span(this.getFullElName('clear'), jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_5__/* .Icon */ .J.get('cancel'));
        this.state = Object.assign({}, UIInput_1.defaultState);
        this.__errorBox = this.j.c.span(this.getFullElName('error'));
        this.validators = new Set([]);
        if ((options === null || options === void 0 ? void 0 : options.value) !== undefined) {
            options.value = options.value.toString();
        }
        Object.assign(this.state, options);
        if (this.state.clearButton !== undefined) {
            this.j.e
                .on(this.clearButton, 'click', (e) => {
                e.preventDefault();
                this.nativeInput.value = '';
                this.j.e.fire(this.nativeInput, 'input');
                this.focus();
            })
                .on(this.nativeInput, 'input', () => {
                this.state.clearButton = Boolean(this.value.length);
            });
            this.state.clearButton = Boolean(this.value.length);
        }
        this.j.e
            .on(this.nativeInput, 'focus blur', () => {
            this.onChangeFocus();
        })
            .on(this.nativeInput, 'input change', this.onChangeValue);
        this.onChangeState();
        this.onChangeClassName();
        this.onChangeStateValue();
    }
    focus() {
        this.nativeInput.focus();
    }
    get isFocused() {
        return this.nativeInput === this.j.od.activeElement;
    }
    /**
     * Set `focused` mod on change focus
     */
    onChangeFocus() {
        this.setMod('focused', this.isFocused);
    }
};
UIInput.defaultState = {
    className: '',
    autocomplete: true,
    name: '',
    value: '',
    icon: '',
    label: '',
    ref: '',
    type: 'text',
    placeholder: '',
    required: false,
    validators: []
};
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__.watch)('state.clearButton')
], UIInput.prototype, "onChangeClear", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__.watch)('state.className')
], UIInput.prototype, "onChangeClassName", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__.watch)([
        'state.name',
        'state.type',
        'state.label',
        'state.placeholder',
        'state.autocomplete',
        'state.icon'
    ], { immediately: false }),
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__.debounce)()
], UIInput.prototype, "onChangeState", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__.watch)('state.value')
], UIInput.prototype, "onChangeStateValue", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__.autobind
], UIInput.prototype, "onChangeValue", null);
UIInput = UIInput_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__.component
], UIInput);



/***/ }),

/***/ 58942:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C: function() { return /* binding */ UISelect; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_helpers_utils_attr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(23144);
/* harmony import */ var jodit_core_decorators_component_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(75042);
/* harmony import */ var jodit_core_ui_form_inputs_input_input__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(87451);
/* harmony import */ var jodit_core_ui_form_validators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(13839);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
var UISelect_1;

/**
 * @module ui/form
 */





let UISelect = UISelect_1 = class UISelect extends jodit_core_ui_form_inputs_input_input__WEBPACK_IMPORTED_MODULE_1__/* .UIInput */ .u {
    /** @override */
    className() {
        return 'UISelect';
    }
    /** @override **/
    createContainer(state) {
        var _a;
        const container = super.createContainer(state);
        const { j } = this, { nativeInput } = this;
        const opt = () => j.create.element('option');
        if (state.placeholder !== undefined) {
            const option = opt();
            option.value = '';
            option.text = j.i18n(state.placeholder);
            nativeInput.add(option);
        }
        (_a = state.options) === null || _a === void 0 ? void 0 : _a.forEach(element => {
            const option = opt();
            option.value = element.value.toString();
            option.text = j.i18n(element.text);
            nativeInput.add(option);
        });
        if (state.size && state.size > 0) {
            (0,jodit_core_helpers_utils_attr__WEBPACK_IMPORTED_MODULE_0__/* .attr */ .L)(nativeInput, 'size', state.size);
        }
        if (state.multiple) {
            (0,jodit_core_helpers_utils_attr__WEBPACK_IMPORTED_MODULE_0__/* .attr */ .L)(nativeInput, 'multiple', '');
        }
        return container;
    }
    /** @override **/
    createNativeInput() {
        return this.j.create.element('select');
    }
    /** @override **/
    updateValidators() {
        super.updateValidators();
        if (this.state.required) {
            this.validators.delete(jodit_core_ui_form_validators__WEBPACK_IMPORTED_MODULE_2__/* .inputValidators.required */ .g.required);
            this.validators.add(jodit_core_ui_form_validators__WEBPACK_IMPORTED_MODULE_2__/* .selectValidators.required */ .s.C);
        }
    }
    constructor(jodit, state) {
        super(jodit, state);
        /** @override */
        this.state = Object.assign({}, UISelect_1.defaultState);
        Object.assign(this.state, state);
    }
};
/** @override */
UISelect.defaultState = Object.assign(Object.assign({}, jodit_core_ui_form_inputs_input_input__WEBPACK_IMPORTED_MODULE_1__/* .UIInput */ .u.defaultState), { options: [], size: 1, multiple: false });
UISelect = UISelect_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__/* .__decorate */ .gn)([
    jodit_core_decorators_component_component__WEBPACK_IMPORTED_MODULE_4__/* .component */ .w
], UISelect);



/***/ }),

/***/ 13839:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   g: function() { return /* reexport module object */ _input__WEBPACK_IMPORTED_MODULE_0__; },
/* harmony export */   s: function() { return /* reexport module object */ _select__WEBPACK_IMPORTED_MODULE_1__; }
/* harmony export */ });
/* harmony import */ var _input__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(72209);
/* harmony import */ var _select__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(50251);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module ui/form
 */




/***/ }),

/***/ 72209:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   required: function() { return /* binding */ required; },
/* harmony export */   url: function() { return /* binding */ url; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62268);
/* harmony import */ var jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76562);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/**
 * Input is required
 */
const required = function (input) {
    if (!(0,jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_0__/* .trim */ .fy)(input.value).length) {
        input.error = 'Please fill out this field';
        return false;
    }
    return true;
};
/**
 * Input value should be valid URL
 */
const url = function (input) {
    if (!(0,jodit_core_helpers_checker_is_url__WEBPACK_IMPORTED_MODULE_1__/* .isURL */ .P)((0,jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_0__/* .trim */ .fy)(input.value))) {
        input.error = 'Please enter a web address';
        return false;
    }
    return true;
};


/***/ }),

/***/ 50251:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C: function() { return /* binding */ required; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76562);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * Select is required
 */
const required = function (select) {
    if (!(0,jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_0__/* .trim */ .fy)(select.value).length) {
        select.error = 'Please fill out this field';
        return false;
    }
    return true;
};


/***/ }),

/***/ 82622:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   q: function() { return /* binding */ UIGroup; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_ui_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18970);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(52378);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_component_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(91003);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
var UIGroup_1;

/**
 * [[include:core/ui/group/README.md]]
 * @packageDocumentation
 * @module ui/group
 */







let UIGroup = UIGroup_1 = class UIGroup extends jodit_core_ui_element__WEBPACK_IMPORTED_MODULE_0__/* .UIElement */ .u {
    className() {
        return 'UIGroup';
    }
    /**
     * All group children
     */
    get allChildren() {
        const result = [];
        const stack = [
            ...this.elements
        ];
        while (stack.length) {
            const elm = stack.shift();
            if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.isArray)(elm)) {
                stack.push(...elm);
            }
            else if (jodit_core_component_component__WEBPACK_IMPORTED_MODULE_5__/* .Component */ .w.isInstanceOf(elm, UIGroup_1)) {
                stack.push(...elm.elements);
            }
            else {
                elm && result.push(elm);
            }
        }
        return result;
    }
    /**
     * Update all children
     */
    update() {
        this.elements.forEach(elm => elm.update());
        this.setMod('size', this.buttonSize);
    }
    /**
     * Append new element into group
     */
    append(elm, distElement) {
        if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.isArray)(elm)) {
            elm.forEach(item => this.append(item, distElement));
            return this;
        }
        this.elements.push(elm);
        if (elm.name) {
            elm.container.classList.add(this.getFullElName(elm.name));
        }
        if (distElement) {
            const distElm = this.getElm(distElement);
            void 0;
            distElm.appendChild(elm.container);
        }
        else {
            this.appendChildToContainer(elm.container);
        }
        elm.parentElement = this;
        return this;
    }
    /** @override */
    afterSetMod(name, value) {
        if (this.syncMod) {
            this.elements.forEach(elm => elm.setMod(name, value));
        }
    }
    /**
     * Allow set another container for the box of all children
     */
    appendChildToContainer(childContainer) {
        this.container.appendChild(childContainer);
    }
    /**
     * Remove element from group
     */
    remove(elm) {
        const index = this.elements.indexOf(elm);
        if (index !== -1) {
            this.elements.splice(index, 1);
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.safeRemove(elm.container);
            elm.parentElement = null;
        }
        return this;
    }
    /**
     * Clear group
     */
    clear() {
        this.elements.forEach(elm => elm.destruct());
        this.elements.length = 0;
        return this;
    }
    /**
     * @param elements - Items of group
     */
    constructor(jodit, elements, options) {
        super(jodit, options);
        this.options = options;
        /**
         * Synchronize mods to all children
         */
        this.syncMod = false;
        this.elements = [];
        this.buttonSize = 'middle';
        elements === null || elements === void 0 ? void 0 : elements.forEach(elm => elm && this.append(elm));
        if (options === null || options === void 0 ? void 0 : options.name) {
            this.name = options.name;
        }
    }
    /** @override */
    destruct() {
        this.clear();
        return super.destruct();
    }
};
(0,tslib__WEBPACK_IMPORTED_MODULE_6__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.watch)('buttonSize')
], UIGroup.prototype, "update", null);
UIGroup = UIGroup_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_6__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.component
], UIGroup);



/***/ }),

/***/ 27503:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WT: function() { return /* reexport safe */ _spacer__WEBPACK_IMPORTED_MODULE_3__.W; },
/* harmony export */   bz: function() { return /* reexport safe */ _list__WEBPACK_IMPORTED_MODULE_1__.b; },
/* harmony export */   lU: function() { return /* reexport safe */ _separator__WEBPACK_IMPORTED_MODULE_2__.l; },
/* harmony export */   qe: function() { return /* reexport safe */ _group__WEBPACK_IMPORTED_MODULE_0__.q; }
/* harmony export */ });
/* harmony import */ var _group__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(82622);
/* harmony import */ var _list__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7628);
/* harmony import */ var _separator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(33127);
/* harmony import */ var _spacer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(96489);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module ui/group
 */






/***/ }),

/***/ 7628:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   b: function() { return /* binding */ UIList; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_ui_helpers_get_strong_control_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(91640);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_ui_group_group__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(82622);
/* harmony import */ var jodit_core_ui_group_separator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(33127);
/* harmony import */ var jodit_core_ui_group_spacer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(96489);
/* harmony import */ var jodit_core_ui_button_button_button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(22003);
/* harmony import */ var jodit_core_ui_helpers_buttons__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(79392);
/* harmony import */ var jodit_core_ui_helpers_get_control_type__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(90160);
/* harmony import */ var jodit_core_helpers_array_split_array__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(83893);
/* harmony import */ var jodit_core_component_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(91003);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * @module ui/group
 */











let UIList = class UIList extends jodit_core_ui_group_group__WEBPACK_IMPORTED_MODULE_2__/* .UIGroup */ .q {
    /** @override */
    className() {
        return 'UIList';
    }
    __onChangeMode() {
        this.setMod('mode', this.mode);
    }
    constructor(jodit) {
        super(jodit);
        this.mode = 'horizontal';
        this.removeButtons = [];
    }
    /**
     * Make new group and append it in list of elements
     */
    makeGroup() {
        return new jodit_core_ui_group_group__WEBPACK_IMPORTED_MODULE_2__/* .UIGroup */ .q(this.jodit);
    }
    /**
     * All buttons from list
     */
    get buttons() {
        return this.allChildren.filter(elm => jodit_core_component_component__WEBPACK_IMPORTED_MODULE_7__/* .Component */ .w.isInstanceOf(elm, jodit_core_ui_button_button_button__WEBPACK_IMPORTED_MODULE_5__/* .UIButton */ .y3));
    }
    /**
     * Helper for getting full plain button list
     */
    getButtonsNames() {
        return this.buttons
            .map(a => (a instanceof jodit_core_ui_button_button_button__WEBPACK_IMPORTED_MODULE_5__/* .UIButton */ .y3 && a.state.name) || '')
            .filter(a => a !== '');
    }
    setRemoveButtons(removeButtons) {
        this.removeButtons = removeButtons || [];
        return this;
    }
    build(items, target = null) {
        items = (0,jodit_core_helpers_array_split_array__WEBPACK_IMPORTED_MODULE_8__/* .splitArray */ .C)(items);
        this.clear();
        let lastBtnSeparator = false;
        let line = this.makeGroup();
        this.append(line);
        line.setMod('line', true);
        let group;
        const addButton = (control) => {
            let elm = null;
            switch (control.name) {
                case '\n':
                    line = this.makeGroup();
                    line.setMod('line', true);
                    group = this.makeGroup();
                    line.append(group);
                    this.append(line);
                    break;
                case '|':
                    if (!lastBtnSeparator) {
                        lastBtnSeparator = true;
                        elm = new jodit_core_ui_group_separator__WEBPACK_IMPORTED_MODULE_3__/* .UISeparator */ .l(this.j);
                    }
                    break;
                case '---': {
                    group.setMod('before-spacer', true);
                    const space = new jodit_core_ui_group_spacer__WEBPACK_IMPORTED_MODULE_4__/* .UISpacer */ .W(this.j);
                    line.append(space);
                    group = this.makeGroup();
                    line.append(group);
                    lastBtnSeparator = false;
                    break;
                }
                default:
                    lastBtnSeparator = false;
                    switch (control.component) {
                        case 'select':
                            elm = this.makeSelect(control, target);
                            break;
                        case 'button':
                        default:
                            elm = this.makeButton(control, target);
                    }
            }
            if (elm) {
                if (!group) {
                    group = this.makeGroup();
                    line.append(group);
                }
                group.append(elm);
            }
        };
        const isNotRemoved = (b) => !this.removeButtons.includes(b.name);
        items.forEach(item => {
            if ((0,jodit_core_ui_helpers_buttons__WEBPACK_IMPORTED_MODULE_9__/* .isButtonGroup */ .A)(item)) {
                const buttons = item.buttons.filter(b => b);
                if (buttons.length) {
                    group = this.makeGroup();
                    group.setMod('separated', true).setMod('group', item.group);
                    line.append(group);
                    (0,jodit_core_ui_helpers_get_strong_control_types__WEBPACK_IMPORTED_MODULE_0__/* .getStrongControlTypes */ .Q)(buttons, this.j.o.controls)
                        .filter(isNotRemoved)
                        .forEach(addButton);
                }
            }
            else {
                if (!group) {
                    group = this.makeGroup();
                    line.append(group);
                }
                const control = (0,jodit_core_ui_helpers_get_control_type__WEBPACK_IMPORTED_MODULE_6__/* .getControlType */ .Y)(item, this.j.o.controls);
                isNotRemoved(control) && addButton(control);
            }
        });
        this.update();
        return this;
    }
    makeSelect(control, target) {
        throw new Error('Not implemented behaviour');
    }
    /**
     * Create button instance
     */
    makeButton(control, target) {
        return new jodit_core_ui_button_button_button__WEBPACK_IMPORTED_MODULE_5__/* .UIButton */ .y3(this.j, {
            name: control.name
        });
    }
};
(0,tslib__WEBPACK_IMPORTED_MODULE_10__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.watch)('mode'),
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.hook)('ready')
], UIList.prototype, "__onChangeMode", null);
UIList = (0,tslib__WEBPACK_IMPORTED_MODULE_10__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.component
], UIList);



/***/ }),

/***/ 33127:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   l: function() { return /* binding */ UISeparator; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_ui_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18970);
/* harmony import */ var jodit_core_decorators_component_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75042);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * @module ui/group
 */


let UISeparator = class UISeparator extends jodit_core_ui_element__WEBPACK_IMPORTED_MODULE_0__/* .UIElement */ .u {
    className() {
        return 'UISeparator';
    }
};
UISeparator = (0,tslib__WEBPACK_IMPORTED_MODULE_1__/* .__decorate */ .gn)([
    jodit_core_decorators_component_component__WEBPACK_IMPORTED_MODULE_2__/* .component */ .w
], UISeparator);



/***/ }),

/***/ 96489:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   W: function() { return /* binding */ UISpacer; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_ui_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18970);
/* harmony import */ var jodit_core_decorators_component_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75042);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * @module ui/group
 */


let UISpacer = class UISpacer extends jodit_core_ui_element__WEBPACK_IMPORTED_MODULE_0__/* .UIElement */ .u {
    className() {
        return 'UISpacer';
    }
};
UISpacer = (0,tslib__WEBPACK_IMPORTED_MODULE_1__/* .__decorate */ .gn)([
    jodit_core_decorators_component_component__WEBPACK_IMPORTED_MODULE_2__/* .component */ .w
], UISpacer);



/***/ }),

/***/ 79392:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: function() { return /* binding */ isButtonGroup; },
/* harmony export */   q: function() { return /* binding */ flatButtonsSet; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(63738);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * @private
 */
const isButtonGroup = (item) => {
    return (0,jodit_core_helpers_checker_is_array__WEBPACK_IMPORTED_MODULE_0__/* .isArray */ .k)(item.buttons);
};
/**
 * @private
 */
function flatButtonsSet(buttons, jodit) {
    const groups = jodit.getRegisteredButtonGroups();
    return new Set(buttons.reduce((acc, item) => {
        var _a;
        if (isButtonGroup(item)) {
            acc = acc.concat([
                ...item.buttons,
                ...((_a = groups[item.group]) !== null && _a !== void 0 ? _a : [])
            ]);
        }
        else {
            acc.push(item);
        }
        return acc;
    }, []));
}


/***/ }),

/***/ 90160:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Y: function() { return /* binding */ getControlType; },
/* harmony export */   z: function() { return /* binding */ findControlType; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76974);
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(37446);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/**
 * Get control for button name
 * @private
 */
function getControlType(button, controls) {
    let buttonControl;
    if (!controls) {
        controls = jodit_config__WEBPACK_IMPORTED_MODULE_1__/* .Config */ .D.defaultOptions.controls;
    }
    if (!(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.isString)(button)) {
        buttonControl = Object.assign({ name: 'empty' }, (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.ConfigFlatten)(button));
        if (controls[buttonControl.name] !== undefined) {
            buttonControl = Object.assign(Object.assign({}, (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.ConfigFlatten)(controls[buttonControl.name])), (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.ConfigFlatten)(buttonControl));
        }
    }
    else {
        buttonControl = findControlType(button, controls) || {
            name: button,
            command: button,
            tooltip: button
        };
    }
    return buttonControl;
}
/**
 * @private
 */
function findControlType(path, controls) {
    var _a;
    // eslint-disable-next-line prefer-const
    let [namespaceOrKey, key] = path.split(/\./);
    let store = controls;
    if (key != null) {
        if (controls[namespaceOrKey] !== undefined) {
            store = controls[namespaceOrKey];
        }
    }
    else {
        key = namespaceOrKey;
    }
    const list = (_a = store[key]) === null || _a === void 0 ? void 0 : _a.list;
    return store[key]
        ? Object.assign(Object.assign({ name: key }, (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.ConfigFlatten)(store[key])), { list: (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.isArray)(list)
                ? list.reduce((acc, k) => {
                    acc[k] = k;
                    return acc;
                }, {})
                : list }) : undefined;
}


/***/ }),

/***/ 91640:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Q: function() { return /* binding */ getStrongControlTypes; }
/* harmony export */ });
/* harmony import */ var _get_control_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(90160);
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_helpers_checker_is_array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(63738);
/* harmony import */ var jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(86284);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




/**
 * @private
 */
function getStrongControlTypes(items, controls) {
    const elements = (0,jodit_core_helpers_checker_is_array__WEBPACK_IMPORTED_MODULE_3__/* .isArray */ .k)(items)
        ? items
        : (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_2__.keys)(items, false).map(key => {
            const value = items[key] || {};
            return (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_2__.ConfigProto)({ name: key }, value);
        });
    return elements.map(item => (0,_get_control_type__WEBPACK_IMPORTED_MODULE_0__/* .getControlType */ .Y)(item, controls || jodit_config__WEBPACK_IMPORTED_MODULE_1__/* .Config */ .D.defaultOptions.controls));
}


/***/ }),

/***/ 30052:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   J: function() { return /* binding */ Icon; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(71737);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62924);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



class Icon {
    static getIcon(name) {
        if (/<svg/i.test(name)) {
            return name;
        }
        const icon = Icon.icons[name] ||
            Icon.icons[name.replace(/-/g, '_')] ||
            Icon.icons[name.replace(/_/g, '-')] ||
            Icon.icons[(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.camelCase)(name)] ||
            Icon.icons[(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.kebabCase)(name)] ||
            Icon.icons[name.toLowerCase()];
        if (!jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.IS_PROD && !icon) {
            console.log(`Icon "${name}" not found`);
        }
        return icon;
    }
    /**
     * Check if icon exist in store
     */
    static exists(name) {
        return this.getIcon(name) !== undefined;
    }
    /**
     * Return SVG icon
     */
    static get(name, defaultValue = '<span></span>') {
        return this.getIcon(name) || defaultValue;
    }
    /**
     * Set SVG in store
     */
    static set(name, value) {
        this.icons[name.replace('_', '-')] = value;
        return this;
    }
    /**
     * Make icon html element
     */
    static makeIcon(jodit, icon) {
        var _a, _b, _c, _d;
        if (!icon) {
            return;
        }
        let iconElement;
        const { name, iconURL, fill } = icon;
        const clearName = name.replace(/[^a-zA-Z0-9]/g, '_');
        let iconFromEvent;
        if (!/<svg/.test(name)) {
            iconFromEvent = (_b = (_a = jodit.o).getIcon) === null || _b === void 0 ? void 0 : _b.call(_a, name, clearName);
        }
        const cacheKey = `${name}${iconURL}${fill}${iconFromEvent !== null && iconFromEvent !== void 0 ? iconFromEvent : ''}`;
        if (jodit.o.cache && this.__cache.has(cacheKey)) {
            return (_c = this.__cache.get(cacheKey)) === null || _c === void 0 ? void 0 : _c.cloneNode(true);
        }
        if (iconURL) {
            iconElement = jodit.c.span();
            (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_2__/* .css */ .i)(iconElement, 'backgroundImage', 'url(' +
                iconURL.replace('{basePath}', (jodit === null || jodit === void 0 ? void 0 : jodit.basePath) || '') +
                ')');
        }
        else {
            const svg = iconFromEvent ||
                Icon.get(name, '') ||
                ((_d = jodit.o.extraIcons) === null || _d === void 0 ? void 0 : _d[name]);
            if (svg) {
                iconElement = jodit.c.fromHTML(svg.trim());
                if (!/^<svg/i.test(name)) {
                    iconElement.classList.add('jodit-icon_' + clearName);
                }
            }
        }
        if (iconElement) {
            iconElement.classList.add('jodit-icon');
            iconElement.style.fill = fill;
            jodit.o.cache &&
                this.__cache.set(cacheKey, iconElement.cloneNode(true));
        }
        return iconElement;
    }
}
Icon.icons = {};
Icon.__cache = new Map();


/***/ }),

/***/ 14712:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BO: function() { return /* reexport safe */ _button__WEBPACK_IMPORTED_MODULE_1__.BO; },
/* harmony export */   Cj: function() { return /* reexport safe */ _form__WEBPACK_IMPORTED_MODULE_4__.Cj; },
/* harmony export */   GI: function() { return /* reexport safe */ _popup__WEBPACK_IMPORTED_MODULE_2__.G; },
/* harmony export */   GJ: function() { return /* reexport safe */ _form__WEBPACK_IMPORTED_MODULE_4__.GJ; },
/* harmony export */   JO: function() { return /* reexport safe */ _icon__WEBPACK_IMPORTED_MODULE_5__.J; },
/* harmony export */   Ne: function() { return /* reexport safe */ _button__WEBPACK_IMPORTED_MODULE_1__.Ne; },
/* harmony export */   WT: function() { return /* reexport safe */ _group__WEBPACK_IMPORTED_MODULE_3__.WT; },
/* harmony export */   Yc: function() { return /* reexport safe */ _button__WEBPACK_IMPORTED_MODULE_1__.Yc; },
/* harmony export */   Z: function() { return /* reexport safe */ _form__WEBPACK_IMPORTED_MODULE_4__.Z; },
/* harmony export */   bz: function() { return /* reexport safe */ _group__WEBPACK_IMPORTED_MODULE_3__.bz; },
/* harmony export */   eC: function() { return /* reexport safe */ _form__WEBPACK_IMPORTED_MODULE_4__.eC; },
/* harmony export */   ko: function() { return /* reexport safe */ _progress_bar_progress_bar__WEBPACK_IMPORTED_MODULE_6__.k; },
/* harmony export */   lU: function() { return /* reexport safe */ _group__WEBPACK_IMPORTED_MODULE_3__.lU; },
/* harmony export */   mA: function() { return /* reexport safe */ _form__WEBPACK_IMPORTED_MODULE_4__.mA; },
/* harmony export */   qe: function() { return /* reexport safe */ _group__WEBPACK_IMPORTED_MODULE_3__.qe; },
/* harmony export */   u1: function() { return /* reexport safe */ _element__WEBPACK_IMPORTED_MODULE_0__.u; },
/* harmony export */   u3: function() { return /* reexport safe */ _form__WEBPACK_IMPORTED_MODULE_4__.u3; },
/* harmony export */   x4: function() { return /* reexport safe */ _form__WEBPACK_IMPORTED_MODULE_4__.x4; },
/* harmony export */   y3: function() { return /* reexport safe */ _button__WEBPACK_IMPORTED_MODULE_1__.y3; },
/* harmony export */   zx: function() { return /* reexport safe */ _button__WEBPACK_IMPORTED_MODULE_1__.zx; }
/* harmony export */ });
/* harmony import */ var _element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18970);
/* harmony import */ var _button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(64856);
/* harmony import */ var _popup__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8855);
/* harmony import */ var _group__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(27503);
/* harmony import */ var _form__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(79000);
/* harmony import */ var _icon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(30052);
/* harmony import */ var _progress_bar_progress_bar__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(4892);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * [[include:core/ui/README.md]]
 * @packageDocumentation
 * @module ui
 */









/***/ }),

/***/ 8855:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   G: function() { return /* reexport safe */ _popup__WEBPACK_IMPORTED_MODULE_0__.G; }
/* harmony export */ });
/* harmony import */ var _popup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80397);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module ui/popup
 */



/***/ }),

/***/ 80397:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   G: function() { return /* binding */ Popup; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(52378);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var jodit_core_ui_group_group__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(82622);
/* harmony import */ var jodit_core_ui_element__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(18970);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_component_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(91003);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(79102);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * [[include:core/ui/popup/README.md]]
 * @packageDocumentation
 * @module ui/popup
 */









const EVENTS_FOR_AUTOCLOSE = [
    'escape',
    'cut',
    'delete',
    'backSpaceAfterDelete',
    'beforeCommandDelete'
];
class Popup extends jodit_core_ui_group_group__WEBPACK_IMPORTED_MODULE_3__/* .UIGroup */ .q {
    className() {
        return 'Popup';
    }
    appendChildToContainer(childContainer) {
        const content = this.getElm('content');
        void 0;
        content.appendChild(childContainer);
    }
    updateParentElement(target) {
        if (target !== this && jodit_core_component_component__WEBPACK_IMPORTED_MODULE_6__/* .Component */ .w.isInstanceOf(target, Popup)) {
            this.__childrenPopups.forEach(popup => {
                if (!target.closest(popup) && popup.isOpened) {
                    popup.close();
                }
            });
            if (!this.__childrenPopups.has(target)) {
                this.j.e.on(target, 'beforeClose', () => {
                    this.__childrenPopups.delete(target);
                });
            }
            this.__childrenPopups.add(target);
        }
        return super.updateParentElement(target);
    }
    /**
     * Set popup content
     */
    setContent(content) {
        if (this.allChildren.length) {
            throw new Error('Remove children');
        }
        if (jodit_core_component_component__WEBPACK_IMPORTED_MODULE_6__/* .Component */ .w.isInstanceOf(content, jodit_core_ui_element__WEBPACK_IMPORTED_MODULE_4__/* .UIElement */ .u)) {
            this.append(content);
        }
        else {
            const elm = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isString)(content)
                ? this.j.c.fromHTML(content)
                : content;
            this.appendChildToContainer(elm);
        }
        this.updatePosition();
        return this;
    }
    /**
     * Open popup near with some bound
     */
    open(getBound, keepPosition = false, parentContainer) {
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.markOwner)(this.jodit, this.container);
        this.__calculateZIndex();
        this.isOpened = true;
        this.__addGlobalListeners();
        this.__targetBound = !keepPosition
            ? getBound
            : this.getKeepBound(getBound);
        if (parentContainer) {
            parentContainer.appendChild(this.container);
        }
        else {
            const popupContainer = (0,jodit_core_global__WEBPACK_IMPORTED_MODULE_7__/* .getContainer */ .ZO)(this.jodit, Popup);
            if (parentContainer !== this.container.parentElement) {
                popupContainer.appendChild(this.container);
            }
        }
        this.updatePosition();
        this.j.e.fire(this, 'afterOpen');
        this.j.e.fire('afterOpenPopup', this);
        return this;
    }
    __calculateZIndex() {
        if (this.container.style.zIndex) {
            return;
        }
        const checkView = (view) => {
            const zIndex = view.container.style.zIndex || view.o.zIndex;
            if (zIndex) {
                this.setZIndex(1 + parseInt(zIndex.toString(), 10));
                return true;
            }
            return false;
        };
        const { j } = this;
        if (checkView(j)) {
            return;
        }
        let pe = this.parentElement;
        while (pe) {
            if (checkView(j)) {
                return;
            }
            if (pe.container.style.zIndex) {
                this.setZIndex(1 + parseInt(pe.container.style.zIndex.toString(), 10));
                return;
            }
            if (!pe.parentElement && pe.container.parentElement) {
                const elm = jodit_core_ui_element__WEBPACK_IMPORTED_MODULE_4__/* .UIElement */ .u.closestElement(pe.container.parentElement, jodit_core_ui_element__WEBPACK_IMPORTED_MODULE_4__/* .UIElement */ .u);
                if (elm) {
                    pe = elm;
                    continue;
                }
            }
            pe = pe.parentElement;
        }
    }
    /**
     * Calculate static bound for point
     */
    getKeepBound(getBound) {
        const oldBound = getBound();
        const elmUnderCursor = this.od.elementFromPoint(oldBound.left, oldBound.top);
        if (!elmUnderCursor) {
            return getBound;
        }
        const element = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isHTMLElement(elmUnderCursor)
            ? elmUnderCursor
            : elmUnderCursor.parentElement;
        const oldPos = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.position)(element, this.j);
        return () => {
            const bound = getBound();
            const newPos = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.position)(element, this.j);
            return Object.assign(Object.assign({}, bound), { top: bound.top + (newPos.top - oldPos.top), left: bound.left + (newPos.left - oldPos.left) });
        };
    }
    /**
     * Update container position
     */
    updatePosition() {
        if (!this.isOpened) {
            return this;
        }
        const [pos, strategy] = this.__calculatePosition(this.__targetBound(), this.viewBound(), (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.position)(this.container, this.j));
        this.setMod('strategy', strategy);
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.css)(this.container, {
            left: pos.left,
            top: pos.top
        });
        this.__childrenPopups.forEach(popup => popup.updatePosition());
        return this;
    }
    __throttleUpdatePosition() {
        this.updatePosition();
    }
    /**
     * Calculate start point
     */
    __calculatePosition(target, view, container, defaultStrategy = this.strategy) {
        const x = {
            left: target.left,
            right: target.left - (container.width - target.width)
        }, y = {
            bottom: target.top + target.height,
            top: target.top - container.height
        };
        const list = Object.keys(x).reduce((keys, xKey) => keys.concat(Object.keys(y).map(yKey => `${xKey}${(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.ucfirst)(yKey)}`)), []);
        const getPointByStrategy = (strategy) => {
            const [xKey, yKey] = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.kebabCase)(strategy).split('-');
            return {
                left: x[xKey],
                top: y[yKey],
                width: container.width,
                height: container.height
            };
        };
        const getMatchStrategy = (inBox) => {
            let strategy = null;
            if (Popup.boxInView(getPointByStrategy(defaultStrategy), inBox)) {
                strategy = defaultStrategy;
            }
            else {
                strategy =
                    list.find((key) => {
                        if (Popup.boxInView(getPointByStrategy(key), inBox)) {
                            return key;
                        }
                        return;
                    }) || null;
            }
            return strategy;
        };
        // Try find match position inside Jodit.container
        let strategy = getMatchStrategy((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.position)(this.j.container, this.j));
        // If not found or is not inside window view
        if (!strategy || !Popup.boxInView(getPointByStrategy(strategy), view)) {
            // Find match strategy inside window view
            strategy = getMatchStrategy(view) || strategy || defaultStrategy;
        }
        return [getPointByStrategy(strategy), strategy];
    }
    /**
     * Check if one box is inside second
     */
    static boxInView(box, view) {
        const accuracy = 2;
        return (box.top - view.top >= -accuracy &&
            box.left - view.left >= -accuracy &&
            view.top + view.height - (box.top + box.height) >= -accuracy &&
            view.left + view.width - (box.left + box.width) >= -accuracy);
    }
    /**
     * Close popup
     */
    close() {
        if (!this.isOpened) {
            return this;
        }
        this.isOpened = false;
        this.__childrenPopups.forEach(popup => popup.close());
        this.j.e.fire(this, 'beforeClose');
        this.j.e.fire('beforePopupClose', this);
        this.__removeGlobalListeners();
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(this.container);
        return this;
    }
    /**
     * Close popup if click was in outside
     */
    __closeOnOutsideClick(e) {
        if (!this.isOpened || this.isOwnClick(e)) {
            return;
        }
        this.close();
    }
    isOwnClick(e) {
        if (!e.target) {
            return false;
        }
        const box = jodit_core_ui_element__WEBPACK_IMPORTED_MODULE_4__/* .UIElement */ .u.closestElement(e.target, Popup);
        return Boolean(box && (this === box || box.closest(this)));
    }
    __addGlobalListeners() {
        const up = this.__throttleUpdatePosition, ow = this.ow;
        jodit_core_global__WEBPACK_IMPORTED_MODULE_7__/* .eventEmitter */ .TB.on('closeAllPopups', this.close);
        if (this.smart) {
            this.j.e
                .on(EVENTS_FOR_AUTOCLOSE, this.close)
                .on('mousedown touchstart', this.__closeOnOutsideClick)
                .on(ow, 'mousedown touchstart', this.__closeOnOutsideClick);
        }
        this.j.e
            .on('closeAllPopups', this.close)
            .on('resize', up)
            .on(this.container, 'scroll mousewheel', up)
            .on(ow, 'scroll', up)
            .on(ow, 'resize', up);
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.up(this.j.container, box => {
            box && this.j.e.on(box, 'scroll mousewheel', up);
        });
    }
    __removeGlobalListeners() {
        const up = this.__throttleUpdatePosition, ow = this.ow;
        jodit_core_global__WEBPACK_IMPORTED_MODULE_7__/* .eventEmitter */ .TB.off('closeAllPopups', this.close);
        if (this.smart) {
            this.j.e
                .off(EVENTS_FOR_AUTOCLOSE, this.close)
                .off('mousedown touchstart', this.__closeOnOutsideClick)
                .off(ow, 'mousedown touchstart', this.__closeOnOutsideClick);
        }
        this.j.e
            .off('closeAllPopups', this.close)
            .off('resize', up)
            .off(this.container, 'scroll mousewheel', up)
            .off(ow, 'scroll', up)
            .off(ow, 'resize', up);
        if (this.j.container.isConnected) {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.up(this.j.container, box => {
                box && this.j.e.off(box, 'scroll mousewheel', up);
            });
        }
    }
    /**
     * Set ZIndex
     */
    setZIndex(index) {
        this.container.style.zIndex = index.toString();
    }
    constructor(jodit, smart = true) {
        super(jodit);
        this.smart = smart;
        this.isOpened = false;
        this.strategy = 'leftBottom';
        this.viewBound = () => ({
            left: 0,
            top: 0,
            width: this.ow.innerWidth,
            height: this.ow.innerHeight
        });
        this.__childrenPopups = new Set();
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(this.container, 'role', 'popup');
    }
    render() {
        return `<div>
			<div class="&__content"></div>
		</div>`;
    }
    /** @override **/
    destruct() {
        this.close();
        return super.destruct();
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.autobind
], Popup.prototype, "updatePosition", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.throttle)(10),
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.autobind
], Popup.prototype, "__throttleUpdatePosition", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.autobind
], Popup.prototype, "close", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.autobind
], Popup.prototype, "__closeOnOutsideClick", null);


/***/ }),

/***/ 4892:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   k: function() { return /* binding */ ProgressBar; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_ui_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18970);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * [[include:core/ui/progress-bar/README.md]]
 * @packageDocumentation
 * @module ui/progress-bar
 */



class ProgressBar extends jodit_core_ui_element__WEBPACK_IMPORTED_MODULE_1__/* .UIElement */ .u {
    /** @override */
    className() {
        return 'ProgressBar';
    }
    /** @override */
    render() {
        return '<div><div></div></div>';
    }
    /**
     * Show progress bar
     */
    show() {
        const container = this.j.workplace || this.j.container;
        container.appendChild(this.container);
        return this;
    }
    hide() {
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(this.container);
        return this;
    }
    progress(percentage) {
        this.container.style.width = percentage.toFixed(2) + '%';
        return this;
    }
    destruct() {
        this.hide();
        return super.destruct();
    }
}


/***/ }),

/***/ 94530:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C: function() { return /* binding */ ViewWithToolbar; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_view_view__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(21731);
/* harmony import */ var jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78157);
/* harmony import */ var jodit_core_helpers_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8131);
/* harmony import */ var jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(86284);
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(46879);
/* harmony import */ var jodit_modules_toolbar_factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(55027);
/* harmony import */ var jodit_core_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(2581);
/* harmony import */ var jodit_core_ui_helpers_buttons__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(79392);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(13666);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * @module view
 */










class ViewWithToolbar extends jodit_core_view_view__WEBPACK_IMPORTED_MODULE_0__/* .View */ .G {
    /**
     * Container for toolbar
     */
    get toolbarContainer() {
        if (!this.o.fullsize &&
            ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isString */ .HD)(this.o.toolbar) || jodit_core_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.isHTMLElement(this.o.toolbar))) {
            return (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_3__.resolveElement)(this.o.toolbar, this.o.shadowRoot || this.od);
        }
        this.o.toolbar &&
            jodit_core_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.appendChildFirst(this.container, this.__defaultToolbarContainer);
        return this.__defaultToolbarContainer;
    }
    /**
     * Change panel container
     */
    setPanel(element) {
        this.o.toolbar = element;
        this.buildToolbar();
    }
    /**
     * Helper for append toolbar in its place
     */
    buildToolbar() {
        var _a;
        if (!this.o.toolbar) {
            return;
        }
        const buttons = this.o.buttons
            ? (0,jodit_core_helpers_array__WEBPACK_IMPORTED_MODULE_2__/* .splitArray */ .C1)(this.o.buttons)
            : [];
        (_a = this.toolbar) === null || _a === void 0 ? void 0 : _a.setRemoveButtons(this.o.removeButtons).build(buttons.concat(this.o.extraButtons || [])).appendTo(this.toolbarContainer);
    }
    getRegisteredButtonGroups() {
        return this.groupToButtons;
    }
    /**
     * Register button for group
     */
    registerButton(btn) {
        var _a;
        this.registeredButtons.add(btn);
        const group = (_a = btn.group) !== null && _a !== void 0 ? _a : 'other';
        if (!this.groupToButtons[group]) {
            this.groupToButtons[group] = [];
        }
        if (btn.position != null) {
            this.groupToButtons[group][btn.position] = btn.name;
        }
        else {
            this.groupToButtons[group].push(btn.name);
        }
        return this;
    }
    /**
     * Remove button from group
     */
    unregisterButton(btn) {
        var _a;
        this.registeredButtons.delete(btn);
        const groupName = (_a = btn.group) !== null && _a !== void 0 ? _a : 'other', group = this.groupToButtons[groupName];
        if (group) {
            const index = group.indexOf(btn.name);
            if (index !== -1) {
                group.splice(index, 1);
            }
            if (group.length === 0) {
                delete this.groupToButtons[groupName];
            }
        }
        return this;
    }
    /**
     * Prepare toolbar items and append buttons in groups
     */
    beforeToolbarBuild(items) {
        if (Object.keys(this.groupToButtons).length) {
            return items.map(item => {
                if ((0,jodit_core_ui_helpers_buttons__WEBPACK_IMPORTED_MODULE_8__/* .isButtonGroup */ .A)(item) &&
                    item.group &&
                    this.groupToButtons[item.group]) {
                    return {
                        group: item.group,
                        buttons: [
                            ...item.buttons,
                            ...this.groupToButtons[item.group]
                        ]
                    };
                }
                return item;
            });
        }
    }
    /** @override **/
    constructor(options, isJodit = false) {
        super(options, isJodit);
        this.toolbar = (0,jodit_modules_toolbar_factory__WEBPACK_IMPORTED_MODULE_5__/* .makeCollection */ .RP)(this);
        this.__defaultToolbarContainer = this.c.div('jodit-toolbar__box');
        this.registeredButtons = new Set();
        this.groupToButtons = {};
        this.isJodit = false;
        this.isJodit = isJodit;
        this.e.on('beforeToolbarBuild', this.beforeToolbarBuild);
    }
    destruct() {
        if (this.isDestructed) {
            return;
        }
        this.setStatus(jodit_core_component__WEBPACK_IMPORTED_MODULE_6__/* .STATUSES */ .n$.beforeDestruct);
        this.e.off('beforeToolbarBuild', this.beforeToolbarBuild);
        this.toolbar.destruct();
        // @ts-ignore After destruct, we are not responsible for anything
        this.toolbar = undefined;
        super.destruct();
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_9__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_7__.autobind
], ViewWithToolbar.prototype, "beforeToolbarBuild", null);


/***/ }),

/***/ 21731:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   G: function() { return /* binding */ View; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81039);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62924);
/* harmony import */ var jodit_modules__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(27801);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(79102);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_traits_mods__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(53795);
/* harmony import */ var jodit_core_traits_elms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(23839);
/* harmony import */ var jodit_core_event_emitter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(47981);
/* harmony import */ var jodit_modules_messages_messages__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(30463);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
var View_1;











let View = View_1 = class View extends jodit_modules__WEBPACK_IMPORTED_MODULE_3__.Component {
    /**
     * Get path for loading extra staff
     */
    get basePath() {
        if (this.o.basePath) {
            return this.o.basePath;
        }
        return jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.BASE_PATH;
    }
    /**
     * Return default timeout period in milliseconds for some debounce or throttle functions.
     * By default, `{history.timeout}` options
     */
    get defaultTimeout() {
        return (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isVoid)(this.o.defaultTimeout) ? 100 : this.o.defaultTimeout;
    }
    /**
     * Some extra data inside editor
     * @see copyformat plugin
     */
    get buffer() {
        return jodit_core_storage__WEBPACK_IMPORTED_MODULE_0__/* .Storage */ .Ke.makeStorage();
    }
    get message() {
        return this.getMessageModule(this.container);
    }
    getMessageModule(container) {
        return new jodit_modules_messages_messages__WEBPACK_IMPORTED_MODULE_8__/* .UIMessages */ .D(this, container);
    }
    /**
     * Container for persistent set/get value
     */
    get storage() {
        return jodit_core_storage__WEBPACK_IMPORTED_MODULE_0__/* .Storage */ .Ke.makeStorage(true, this.id);
    }
    /**
     * Short alias for `create`
     */
    get c() {
        return this.create;
    }
    get container() {
        return this.__container;
    }
    set container(container) {
        this.__container = container;
    }
    /**
     * Short alias for `events`
     */
    get e() {
        return this.events;
    }
    /**
     * progress_bar Progress bar
     */
    get progressbar() {
        return new jodit_modules__WEBPACK_IMPORTED_MODULE_3__.ProgressBar(this);
    }
    get options() {
        return this.__options;
    }
    set options(options) {
        this.__options = options;
    }
    /**
     * Short alias for options
     */
    get o() {
        return this.options;
    }
    /**
     * Internationalization method. Uses Jodit.lang object
     */
    i18n(text, ...params) {
        return (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.i18n)(text, params, this.options);
    }
    toggleFullSize(isFullSize) {
        if (isFullSize === undefined) {
            isFullSize = !this.__isFullSize;
        }
        if (isFullSize === this.__isFullSize) {
            return;
        }
        this.__isFullSize = isFullSize;
        this.e.fire('toggleFullSize', isFullSize);
    }
    /**
     * View is locked
     */
    get isLocked() {
        return this.__whoLocked !== '';
    }
    /**
     * Disable selecting
     */
    lock(name = 'any') {
        if (!this.isLocked) {
            this.__whoLocked = name;
            return true;
        }
        return false;
    }
    /**
     * Enable selecting
     */
    unlock() {
        if (this.isLocked) {
            this.__whoLocked = '';
            return true;
        }
        return false;
    }
    /**
     * View is in fullSize
     */
    get isFullSize() {
        return this.__isFullSize;
    }
    /**
     * Return current version
     */
    getVersion() {
        return View_1.version;
    }
    static getVersion() {
        return View_1.version;
    }
    /** @override */
    initOptions(options) {
        this.options = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.ConfigProto)(options || {}, (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.ConfigProto)(this.options || {}, View_1.defaultOptions));
    }
    /**
     * Can change ownerWindow here
     */
    initOwners() {
        var _a;
        this.ownerWindow = (_a = this.o.ownerWindow) !== null && _a !== void 0 ? _a : window;
    }
    /**
     * Add option's event handlers in emitter
     */
    attachEvents(options) {
        if (!options) {
            return;
        }
        const e = options === null || options === void 0 ? void 0 : options.events;
        e && Object.keys(e).forEach((key) => this.e.on(key, e[key]));
    }
    constructor(options, isJodit = false) {
        super();
        this.isJodit = isJodit;
        this.isView = true;
        this.parent = null;
        this.mods = {};
        /**
         * All created ViewComponent inside this view
         */
        this.components = new Set();
        this.OPTIONS = View_1.defaultOptions;
        this.__isFullSize = false;
        this.__whoLocked = '';
        this.isLockedNotBy = (name) => this.isLocked && this.__whoLocked !== name;
        this.__modulesInstances = new Map();
        this.id = new Date().getTime().toString();
        this.initOptions(options);
        this.initOwners();
        this.events = new jodit_core_event_emitter__WEBPACK_IMPORTED_MODULE_7__/* .EventEmitter */ .vp(this.od);
        this.create = new jodit_modules__WEBPACK_IMPORTED_MODULE_3__.Create(this.od);
        this.container = this.c.div(`jodit ${this.componentName}`);
    }
    getInstance(moduleNameOrConstructor, options) {
        const moduleName = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isFunction)(moduleNameOrConstructor)
            ? moduleNameOrConstructor.prototype.className()
            : moduleNameOrConstructor;
        const instance = this.e.fire((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.camelCase)('getInstance_' + moduleName), options);
        if (instance) {
            return instance;
        }
        const module = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isFunction)(moduleNameOrConstructor)
            ? moduleNameOrConstructor
            : jodit_core_global__WEBPACK_IMPORTED_MODULE_4__/* .modules */ .qz[moduleName], mi = this.__modulesInstances;
        if (!(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isFunction)(module)) {
            throw (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.error)('Need real module name');
        }
        if (!mi.has(moduleName)) {
            const instance = module.prototype instanceof jodit_modules__WEBPACK_IMPORTED_MODULE_3__.ViewComponent
                ? new module(this, options)
                : new module(options);
            this.components.add(instance);
            mi.set(moduleName, instance);
        }
        return mi.get(moduleName);
    }
    /** Add some element to box */
    addDisclaimer(elm) {
        this.container.appendChild(elm);
    }
    /**
     * Call before destruct
     */
    beforeDestruct() {
        this.e.fire(jodit_modules__WEBPACK_IMPORTED_MODULE_3__.STATUSES.beforeDestruct, this);
        this.components.forEach(component => {
            if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isDestructable)(component) && !component.isInDestruct) {
                component.destruct();
            }
        });
        this.components.clear();
    }
    /** @override */
    destruct() {
        if (this.isDestructed) {
            return;
        }
        this.progressbar.destruct();
        this.message.destruct();
        if (this.events) {
            this.events.destruct();
            // @ts-ignore
            this.events = undefined;
        }
        if (this.buffer) {
            this.buffer.clear();
        }
        jodit_modules__WEBPACK_IMPORTED_MODULE_3__.Dom.safeRemove(this.container);
        super.destruct();
    }
};
// from webpack.config.js
View.ES = jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.ES;
View.version = jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.APP_VERSION;
View.esNext = jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.IS_ES_NEXT; // from webpack.config.js
View.esModern = jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.IS_ES_MODERN; // from webpack.config.js
(0,tslib__WEBPACK_IMPORTED_MODULE_9__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.cache
], View.prototype, "buffer", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_9__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.cache
], View.prototype, "message", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_9__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.cache
], View.prototype, "storage", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_9__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.cache
], View.prototype, "c", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_9__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.cache
], View.prototype, "e", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_9__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.cache
], View.prototype, "progressbar", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_9__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.hook)(jodit_modules__WEBPACK_IMPORTED_MODULE_3__.STATUSES.beforeDestruct)
], View.prototype, "beforeDestruct", null);
View = View_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_9__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.derive)(jodit_core_traits_mods__WEBPACK_IMPORTED_MODULE_10__/* .Mods */ .$, jodit_core_traits_elms__WEBPACK_IMPORTED_MODULE_6__/* .Elms */ .F)
], View);

View.defaultOptions = {
    extraButtons: [],
    cache: true,
    textIcons: false,
    namespace: '',
    removeButtons: [],
    zIndex: 100002,
    defaultTimeout: 100,
    fullsize: false,
    showTooltip: true,
    useNativeTooltip: false,
    buttons: [],
    globalFullSize: true,
    language: 'auto'
};


/***/ }),

/***/ 44380:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   h: function() { return /* binding */ Jodit; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(97582);
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62924);
/* harmony import */ var jodit_modules__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(27801);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(79102);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_traits_dlgs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(42297);
/* harmony import */ var jodit_core_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(60072);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
var Jodit_1;










const __defaultStyleDisplayKey = 'data-jodit-default-style-display';
const __defaultClassesKey = 'data-jodit-default-classes';
let Jodit = Jodit_1 = class Jodit extends jodit_modules__WEBPACK_IMPORTED_MODULE_2__.ViewWithToolbar {
    /** @override */
    className() {
        return 'Jodit';
    }
    /**
     * Return promise for ready actions
     * @example
     * ```js
     * const jodit = Jodit.make('#editor');
     * await jodit.waitForReady();
     * jodit.e.fire('someAsyncLoadedPluginEvent', (test) => {
     *   alert(test);
     * });
     * ```
     */
    waitForReady() {
        if (this.isReady) {
            return Promise.resolve(this);
        }
        return this.async.promise(resolve => {
            this.hookStatus('ready', () => resolve(this));
        });
    }
    static get ready() {
        return new Promise(resolve => {
            jodit_core_global__WEBPACK_IMPORTED_MODULE_4__/* .eventEmitter */ .TB.on('oditready', resolve);
        });
    }
    /**
     * Plain text editor's value
     */
    get text() {
        if (this.editor) {
            return this.editor.innerText || '';
        }
        const div = this.createInside.div();
        div.innerHTML = this.getElementValue();
        return div.innerText || '';
    }
    /**
     * Return default timeout period in milliseconds for some debounce or throttle functions.
     * By default, `{history.timeout}` options
     */
    get defaultTimeout() {
        return (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isNumber)(this.o.defaultTimeout)
            ? this.o.defaultTimeout
            : jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.defaultOptions.defaultTimeout;
    }
    /**
     * Method wrap usual Has Object in Object helper for prevent deep object merging in options*
     */
    static atom(object) {
        return (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.markAsAtomic)(object);
    }
    /**
     * Factory for creating Jodit instance
     */
    static make(element, options) {
        return new this(element, options);
    }
    /**
     * Checks if the element has already been initialized when for Jodit
     */
    static isJoditAssigned(element) {
        return (element &&
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isJoditObject)(element.component) &&
            !element.component.isInDestruct);
    }
    /**
     * Default settings
     */
    static get defaultOptions() {
        return jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.defaultOptions;
    }
    get createInside() {
        return new jodit_modules__WEBPACK_IMPORTED_MODULE_2__.Create(() => this.ed, this.o.createAttributes);
    }
    __setPlaceField(field, value) {
        if (!this.currentPlace) {
            this.currentPlace = {};
            this.places = [this.currentPlace];
        }
        this.currentPlace[field] = value;
    }
    /**
     * element It contains source element
     */
    get element() {
        return this.currentPlace.element;
    }
    /**
     * editor It contains the root element editor
     */
    get editor() {
        return this.currentPlace.editor;
    }
    set editor(editor) {
        this.__setPlaceField('editor', editor);
    }
    /**
     * Container for all staff
     */
    get container() {
        return this.currentPlace.container;
    }
    set container(container) {
        this.__setPlaceField('container', container);
    }
    /**
     * workplace It contains source and wysiwyg editors
     */
    get workplace() {
        return this.currentPlace.workplace;
    }
    get message() {
        return this.getMessageModule(this.workplace);
    }
    /**
     * Statusbar module
     */
    get statusbar() {
        return this.currentPlace.statusbar;
    }
    /**
     * iframe Iframe for iframe mode
     */
    get iframe() {
        return this.currentPlace.iframe;
    }
    set iframe(iframe) {
        this.__setPlaceField('iframe', iframe);
    }
    get history() {
        return this.currentPlace.history;
    }
    /**
     * In iframe mode editor's window can be different by owner
     */
    get editorWindow() {
        return this.currentPlace.editorWindow;
    }
    set editorWindow(win) {
        this.__setPlaceField('editorWindow', win);
    }
    /**
     * Alias for this.ew
     */
    get ew() {
        return this.editorWindow;
    }
    /**
     * In iframe mode editor's window can be different by owner
     */
    get editorDocument() {
        return this.currentPlace.editorWindow.document;
    }
    /**
     * Alias for this.ew
     */
    get ed() {
        return this.editorDocument;
    }
    /**
     * options All Jodit settings default + second arguments of constructor
     */
    get options() {
        return this.currentPlace.options;
    }
    set options(opt) {
        this.__setPlaceField('options', opt);
    }
    /**
     * Alias for this.selection
     */
    get s() {
        return this.selection;
    }
    get uploader() {
        return this.getInstance('Uploader', this.o.uploader);
    }
    get filebrowser() {
        const jodit = this;
        const options = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.ConfigProto)({
            defaultTimeout: jodit.defaultTimeout,
            uploader: jodit.o.uploader,
            language: jodit.o.language,
            license: jodit.o.license,
            theme: jodit.o.theme,
            shadowRoot: jodit.o.shadowRoot,
            defaultCallback(data) {
                if (data.files && data.files.length) {
                    data.files.forEach((file, i) => {
                        const url = data.baseurl + file;
                        const isImage = data.isImages
                            ? data.isImages[i]
                            : false;
                        if (isImage) {
                            jodit.s.insertImage(url, null, jodit.o.imageDefaultWidth);
                        }
                        else {
                            jodit.s.insertNode(jodit.createInside.fromHTML(`<a href='${url}' title='${url}'>${url}</a>`));
                        }
                    });
                }
            }
        }, this.o.filebrowser);
        return jodit.getInstance('FileBrowser', options);
    }
    /**
     * Editor's mode
     */
    get mode() {
        return this.__mode;
    }
    set mode(mode) {
        this.setMode(mode);
    }
    /**
     * Return real HTML value from WYSIWYG editor.
     * @internal
     */
    getNativeEditorValue() {
        const value = this.e.fire('beforeGetNativeEditorValue');
        if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isString)(value)) {
            return value;
        }
        if (this.editor) {
            return this.editor.innerHTML;
        }
        return this.getElementValue();
    }
    /**
     * Set value to native editor
     */
    setNativeEditorValue(value) {
        const data = {
            value
        };
        if (this.e.fire('beforeSetNativeEditorValue', data)) {
            return;
        }
        if (this.editor) {
            this.editor.innerHTML = data.value;
        }
    }
    /**
     * HTML value
     */
    get value() {
        return this.getEditorValue();
    }
    set value(html) {
        this.setEditorValue(html);
        // @ts-ignore Internal method
        this.history.__processChanges();
    }
    synchronizeValues() {
        this.__imdSynchronizeValues();
    }
    /**
     * This is an internal method, do not use it in your applications.
     * @private
     * @internal
     */
    __imdSynchronizeValues() {
        this.setEditorValue();
    }
    /**
     * Return editor value
     */
    getEditorValue(removeSelectionMarkers = true, consumer) {
        /**
         * Triggered before getEditorValue executed.
         * If returned not undefined getEditorValue will return this value
         * @example
         * ```javascript
         * var editor = Jodit.make("#redactor");
         * editor.e.on('beforeGetValueFromEditor', function () {
         *     return editor.editor.innerHTML.replace(/a/g, 'b');
         * });
         * ```
         */
        let value;
        value = this.e.fire('beforeGetValueFromEditor', consumer);
        if (value !== undefined) {
            return value;
        }
        value = this.getNativeEditorValue().replace(jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.INVISIBLE_SPACE_REG_EXP(), '');
        if (removeSelectionMarkers) {
            value = value.replace(/<span[^>]+id="jodit-selection_marker_[^>]+><\/span>/g, '');
        }
        if (value === '<br>') {
            value = '';
        }
        /**
         * Triggered after getEditorValue got value from wysiwyg.
         * It can change new_value.value
         *
         * @example
         * ```javascript
         * var editor = Jodit.make("#redactor");
         * editor.e.on('afterGetValueFromEditor', function (new_value) {
         *     new_value.value = new_value.value.replace('a', 'b');
         * });
         * ```
         */
        const new_value = { value };
        this.e.fire('afterGetValueFromEditor', new_value, consumer);
        return new_value.value;
    }
    /**
     * Set editor html value and if set sync fill source element value
     * When method was called without arguments - it is simple way to synchronize editor to element
     */
    setEditorValue(value) {
        /**
         * Triggered before getEditorValue set value to wysiwyg.
         * @example
         * ```javascript
         * var editor = Jodit.make("#redactor");
         * editor.e.on('beforeSetValueToEditor', function (old_value) {
         *     return old_value.value.replace('a', 'b');
         * });
         * editor.e.on('beforeSetValueToEditor', function () {
         *     return false; // disable setEditorValue method
         * });
         * ```
         */
        const newValue = this.e.fire('beforeSetValueToEditor', value);
        if (newValue === false) {
            return;
        }
        if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isString)(newValue)) {
            value = newValue;
        }
        if (!this.editor) {
            if (value !== undefined) {
                this.__setElementValue(value);
            }
            return; // try change value before init or after destruct
        }
        if (!(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isString)(value) && !(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isVoid)(value)) {
            throw (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.error)('value must be string');
        }
        if (!(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isVoid)(value) && this.getNativeEditorValue() !== value) {
            this.setNativeEditorValue(value);
        }
        this.e.fire('postProcessSetEditorValue');
        const old_value = this.getElementValue(), new_value = this.getEditorValue();
        if (!this.__isSilentChange &&
            old_value !== new_value &&
            this.__callChangeCount < jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.SAFE_COUNT_CHANGE_CALL) {
            this.__setElementValue(new_value);
            this.__callChangeCount += 1;
            if (!jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.IS_PROD && this.__callChangeCount > 4) {
                console.warn('Too many recursive changes', new_value, old_value);
            }
            try {
                // @ts-ignore Internal method
                this.history.__upTick();
                this.e.fire('change', new_value, old_value);
                this.e.fire(this.history, 'change', new_value, old_value);
            }
            finally {
                this.__callChangeCount = 0;
            }
        }
    }
    /**
     * If some plugin changes the DOM directly, then you need to update the content of the original element
     */
    updateElementValue() {
        this.__setElementValue(this.getEditorValue());
    }
    /**
     * Return source element value
     */
    getElementValue() {
        return this.element.value !== undefined
            ? this.element.value
            : this.element.innerHTML;
    }
    __setElementValue(value) {
        if (!(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isString)(value)) {
            throw (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.error)('value must be string');
        }
        if (this.element !== this.container &&
            value !== this.getElementValue()) {
            const data = { value };
            const res = this.e.fire('beforeSetElementValue', data);
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.callPromise)(res, () => {
                if (this.element.value !== undefined) {
                    this.element.value = data.value;
                }
                else {
                    this.element.innerHTML = data.value;
                }
                this.e.fire('afterSetElementValue', data);
            });
        }
    }
    /**
     * Register custom handler for command
     *
     * @example
     * ```javascript
     * var jodit = Jodit.make('#editor);
     *
     * jodit.setEditorValue('test test test');
     *
     * jodit.registerCommand('replaceString', function (command, needle, replace) {
     *      var value = this.getEditorValue();
     *      this.setEditorValue(value.replace(needle, replace));
     *      return false; // stop execute native command
     * });
     *
     * jodit.execCommand('replaceString', 'test', 'stop');
     *
     * console.log(jodit.value); // stop test test
     *
     * // and you can add hotkeys for command
     * jodit.registerCommand('replaceString', {
     *    hotkeys: 'ctrl+r',
     *    exec: function (command, needle, replace) {
     *     var value = this.getEditorValue();
     *     this.setEditorValue(value.replace(needle, replace));
     *    }
     * });
     *
     * ```
     */
    registerCommand(commandNameOriginal, command, options) {
        const commandName = commandNameOriginal.toLowerCase();
        let commands = this.commands.get(commandName);
        if (commands === undefined) {
            commands = [];
            this.commands.set(commandName, commands);
        }
        commands.push(command);
        if (!(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isFunction)(command)) {
            const hotkeys = this.o.commandToHotkeys[commandName] ||
                this.o.commandToHotkeys[commandNameOriginal] ||
                command.hotkeys;
            if (hotkeys) {
                this.registerHotkeyToCommand(hotkeys, commandName, options === null || options === void 0 ? void 0 : options.stopPropagation);
            }
        }
        return this;
    }
    /**
     * Register hotkey for command
     */
    registerHotkeyToCommand(hotkeys, commandName, shouldStop = true) {
        const shortcuts = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.asArray)(hotkeys)
            .map(jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.normalizeKeyAliases)
            .map(hotkey => hotkey + '.hotkey')
            .join(' ');
        this.e
            .off(shortcuts)
            .on(shortcuts, (type, stop) => {
            if (stop) {
                stop.shouldStop = shouldStop !== null && shouldStop !== void 0 ? shouldStop : true;
            }
            return this.execCommand(commandName); // because need `beforeCommand`
        });
    }
    /**
     * Execute command editor
     *
     * @param command - command. It supports all the
     * @see https://developer.mozilla.org/ru/docs/Web/API/Document/execCommand#commands and a number of its own
     * for example applyStyleProperty. Comand fontSize receives the second parameter px,
     * formatBlock and can take several options
     * @example
     * ```javascript
     * this.execCommand('fontSize', 12); // sets the size of 12 px
     * this.execCommand('underline');
     * this.execCommand('formatBlock', 'p'); // will be inserted paragraph
     * ```
     */
    execCommand(command, showUI, value, ...args) {
        if (!this.s.isFocused()) {
            this.s.focus();
        }
        if (this.o.readonly &&
            !this.o.allowCommandsInReadOnly.includes(command)) {
            return;
        }
        let result;
        command = command.toLowerCase();
        /**
         * Called before any command
         * @param command - Command name in lowercase
         * @param second - The second parameter for the command
         * @param third - The third option is for the team
         * @example
         * ```javascript
         * parent.e.on('beforeCommand', function (command) {
         *  if (command === 'justifyCenter') {
         *      var p = parent.c.element('p')
         *      parent.s.insertNode(p)
         *      parent.s.setCursorIn(p);
         *      p.style.textAlign = 'justyfy';
         *      return false; // break execute native command
         *  }
         * })
         * ```
         */
        result = this.e.fire(`beforeCommand${(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.ucfirst)(command)}`, showUI, value, ...args);
        if (result !== false) {
            result = this.e.fire('beforeCommand', command, showUI, value, ...args);
        }
        if (result !== false) {
            result = this.__execCustomCommands(command, showUI, value, ...args);
        }
        if (result !== false) {
            this.s.focus();
            try {
                result = this.nativeExecCommand(command, showUI, value);
            }
            catch (e) {
                if (!jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.IS_PROD) {
                    throw e;
                }
            }
        }
        /**
         * It called after any command
         * @param command - name command
         * @param second - The second parameter for the command
         * @param third - The third option is for the team
         */
        this.e.fire('afterCommand', command, showUI, value);
        this.__imdSynchronizeValues(); // synchrony
        return result;
    }
    /**
     * Exec native command
     */
    nativeExecCommand(command, showUI, value) {
        this.__isSilentChange = true;
        try {
            return this.ed.execCommand(command, showUI, value);
        }
        finally {
            this.__isSilentChange = false;
        }
    }
    __execCustomCommands(commandName, second, third, ...args) {
        commandName = commandName.toLowerCase();
        const commands = this.commands.get(commandName);
        if (commands !== undefined) {
            let result;
            commands.forEach((command) => {
                let callback;
                if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isFunction)(command)) {
                    callback = command;
                }
                else {
                    callback = command.exec;
                }
                const resultCurrent = callback.call(this, commandName, second, third, ...args);
                if (resultCurrent !== undefined) {
                    result = resultCurrent;
                }
            });
            return result;
        }
    }
    /**
     * Disable selecting
     */
    lock(name = 'any') {
        if (super.lock(name)) {
            this.__selectionLocked = this.s.save();
            this.s.clear();
            this.editor.classList.add('jodit_lock');
            this.e.fire('lock', true);
            return true;
        }
        return false;
    }
    /**
     * Enable selecting
     */
    unlock() {
        if (super.unlock()) {
            this.editor.classList.remove('jodit_lock');
            if (this.__selectionLocked) {
                this.s.restore();
            }
            this.e.fire('lock', false);
            return true;
        }
        return false;
    }
    /**
     * Return current editor mode: Jodit.MODE_WYSIWYG, Jodit.MODE_SOURCE or Jodit.MODE_SPLIT
     */
    getMode() {
        return this.mode;
    }
    isEditorMode() {
        return this.getRealMode() === jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_WYSIWYG;
    }
    /**
     * Return current real work mode. When editor in MODE_SOURCE or MODE_WYSIWYG it will
     * return them, but then editor in MODE_SPLIT it will return MODE_SOURCE if
     * Textarea(CodeMirror) focused or MODE_WYSIWYG otherwise
     *
     * @example
     * ```javascript
     * var editor = Jodit.make('#editor');
     * console.log(editor.getRealMode());
     * ```
     */
    getRealMode() {
        if (this.getMode() !== jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_SPLIT) {
            return this.getMode();
        }
        const active = this.od.activeElement;
        if (active &&
            (active === this.iframe ||
                jodit_modules__WEBPACK_IMPORTED_MODULE_2__.Dom.isOrContains(this.editor, active) ||
                jodit_modules__WEBPACK_IMPORTED_MODULE_2__.Dom.isOrContains(this.toolbar.container, active))) {
            return jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_WYSIWYG;
        }
        return jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_SOURCE;
    }
    /**
     * Set current mode
     */
    setMode(mode) {
        const oldMode = this.getMode();
        const data = {
            mode: parseInt(mode.toString(), 10)
        }, modeClasses = [
            'jodit-wysiwyg_mode',
            'jodit-source__mode',
            'jodit_split_mode'
        ];
        /**
         * Triggered before setMode executed. If returned false method stopped
         * @param data - PlainObject `{mode: {string}}` In handler you can change data.mode
         * @example
         * ```javascript
         * var editor = Jodit.make("#redactor");
         * editor.e.on('beforeSetMode', function (data) {
         *     data.mode = Jodit.MODE_SOURCE; // not respond to the mode change. Always make the source code mode
         * });
         * ```
         */
        if (this.e.fire('beforeSetMode', data) === false) {
            return;
        }
        this.__mode = [
            jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_SOURCE,
            jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_WYSIWYG,
            jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_SPLIT
        ].includes(data.mode)
            ? data.mode
            : jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_WYSIWYG;
        if (this.o.saveModeInStorage) {
            this.storage.set('jodit_default_mode', this.mode);
        }
        modeClasses.forEach(className => {
            this.container.classList.remove(className);
        });
        this.container.classList.add(modeClasses[this.mode - 1]);
        /**
         * Triggered after setMode executed
         * @example
         * ```javascript
         * var editor = Jodit.make("#redactor");
         * editor.e.on('afterSetMode', function () {
         *     editor.setEditorValue(''); // clear editor's value after change mode
         * });
         * ```
         */
        if (oldMode !== this.getMode()) {
            this.e.fire('afterSetMode');
        }
    }
    /**
     * Toggle editor mode WYSIWYG to TEXTAREA(CodeMirror) to SPLIT(WYSIWYG and TEXTAREA) to again WYSIWYG
     *
     * @example
     * ```javascript
     * var editor = Jodit.make('#editor');
     * editor.toggleMode();
     * ```
     */
    toggleMode() {
        let mode = this.getMode();
        if ([
            jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_SOURCE,
            jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_WYSIWYG,
            this.o.useSplitMode ? jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_SPLIT : 9
        ].includes(mode + 1)) {
            mode += 1;
        }
        else {
            mode = jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_WYSIWYG;
        }
        this.setMode(mode);
    }
    /**
     * Switch on/off the editor into the disabled state.
     * When in disabled, the user is not able to change the editor content
     * This function firing the `disabled` event.
     */
    setDisabled(isDisabled) {
        this.o.disabled = isDisabled;
        const readOnly = this.__wasReadOnly;
        this.setReadOnly(isDisabled || readOnly);
        this.__wasReadOnly = readOnly;
        if (this.editor) {
            this.editor.setAttribute('aria-disabled', isDisabled.toString());
            this.container.classList.toggle('jodit_disabled', isDisabled);
            this.e.fire('disabled', isDisabled);
        }
    }
    /**
     * Return true if editor in disabled mode
     */
    getDisabled() {
        return this.o.disabled;
    }
    /**
     * Switch on/off the editor into the read-only state.
     * When in readonly, the user is not able to change the editor content, but can still
     * use some editor functions (show source code, print content, or seach).
     * This function firing the `readonly` event.
     */
    setReadOnly(isReadOnly) {
        if (this.__wasReadOnly === isReadOnly) {
            return;
        }
        this.__wasReadOnly = isReadOnly;
        this.o.readonly = isReadOnly;
        if (isReadOnly) {
            this.editor && this.editor.removeAttribute('contenteditable');
        }
        else {
            this.editor && this.editor.setAttribute('contenteditable', 'true');
        }
        this.e && this.e.fire('readonly', isReadOnly);
    }
    /**
     * Return true if editor in read-only mode
     */
    getReadOnly() {
        return this.o.readonly;
    }
    focus() {
        if (this.getMode() !== jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_SOURCE) {
            this.s.focus();
        }
    }
    get isFocused() {
        return this.s.isFocused();
    }
    /**
     * Hook before init
     */
    beforeInitHook() {
        // do nothing
    }
    /**
     * Hook after init
     */
    afterInitHook() {
        // do nothing
    }
    /** @override **/
    initOptions(options) {
        this.options = ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.ConfigProto)(options || {}, jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.defaultOptions));
    }
    /** @override **/
    initOwners() {
        // in iframe it can be changed
        this.editorWindow = this.o.ownerWindow;
        this.ownerWindow = this.o.ownerWindow;
    }
    /**
     * Create instance of Jodit
     *
     * @param element - Selector or HTMLElement
     * @param options - Editor's options
     */
    constructor(element, options) {
        super(options, true);
        /**
         * Define if object is Jodit
         */
        this.isJodit = true;
        this.commands = new Map();
        this.__selectionLocked = null;
        this.__wasReadOnly = false;
        /**
         * Editor has focus in this time
         */
        this.editorIsActive = false;
        this.__mode = jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_WYSIWYG;
        this.__callChangeCount = 0;
        /**
         * Don't raise a change event
         */
        this.__isSilentChange = false;
        this.__elementToPlace = new Map();
        try {
            const elementSource = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.resolveElement)(element, this.o.shadowRoot || this.od);
            if (Jodit_1.isJoditAssigned(elementSource)) {
                // @ts-ignore
                return elementSource.component;
            }
        }
        catch (e) {
            this.destruct();
            throw e;
        }
        this.setStatus(jodit_modules__WEBPACK_IMPORTED_MODULE_2__.STATUSES.beforeInit);
        this.id =
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.attr)((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.resolveElement)(element, this.o.shadowRoot || this.od), 'id') ||
                new Date().getTime().toString();
        jodit_core_global__WEBPACK_IMPORTED_MODULE_4__/* .instances */ .as[this.id] = this;
        this.attachEvents(options);
        this.e.on(this.ow, 'resize', () => {
            if (this.e) {
                this.e.fire('resize');
            }
        });
        this.e.on('prepareWYSIWYGEditor', this.__prepareWYSIWYGEditor);
        this.selection = new jodit_modules__WEBPACK_IMPORTED_MODULE_2__.Selection(this);
        const beforeInitHookResult = this.beforeInitHook();
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.callPromise)(beforeInitHookResult, () => {
            this.e.fire('beforeInit', this);
            jodit_core_global__WEBPACK_IMPORTED_MODULE_4__/* .pluginSystem */ .pw.__init(this);
            this.e.fire('afterPluginSystemInit', this);
            this.e.on('changePlace', () => {
                this.setReadOnly(this.o.readonly);
                this.setDisabled(this.o.disabled);
            });
            this.places.length = 0;
            const addPlaceResult = this.addPlace(element, options);
            jodit_core_global__WEBPACK_IMPORTED_MODULE_4__/* .instances */ .as[this.id] = this;
            const init = () => {
                if (this.e) {
                    this.e.fire('afterInit', this);
                }
                this.afterInitHook();
                this.setStatus(jodit_modules__WEBPACK_IMPORTED_MODULE_2__.STATUSES.ready);
                this.e.fire('afterConstructor', this);
            };
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.callPromise)(addPlaceResult, init);
        });
    }
    /**
     * Create and init current editable place
     */
    addPlace(source, options) {
        const element = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.resolveElement)(source, this.o.shadowRoot || this.od);
        this.attachEvents(options);
        if (element.attributes) {
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.toArray)(element.attributes).forEach((attr) => {
                const name = attr.name;
                let value = attr.value;
                if (jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.defaultOptions[name] !== undefined &&
                    (!options || options[name] === undefined)) {
                    if (['readonly', 'disabled'].indexOf(name) !== -1) {
                        value = value === '' || value === 'true';
                    }
                    if (/^[0-9]+(\.)?([0-9]+)?$/.test(value.toString())) {
                        value = Number(value);
                    }
                    this.options[name] = value;
                }
            });
        }
        let container = this.c.div('jodit-container');
        container.classList.add('jodit');
        container.classList.add('jodit-container');
        container.classList.add(`jodit_theme_${this.o.theme || 'default'}`);
        addClassNames(this.o.className, container);
        if (this.o.containerStyle) {
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.css)(container, this.o.containerStyle);
        }
        const { styleValues } = this.o;
        Object.keys(styleValues).forEach(key => {
            const property = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.kebabCase)(key);
            container.style.setProperty(`--jd-${property}`, styleValues[key]);
        });
        container.setAttribute('contenteditable', 'false');
        let buffer = null;
        if (this.o.inline) {
            if (['TEXTAREA', 'INPUT'].indexOf(element.nodeName) === -1) {
                container = element;
                element.setAttribute(__defaultClassesKey, element.className.toString());
                buffer = container.innerHTML;
                container.innerHTML = '';
            }
            container.classList.add('jodit_inline');
            container.classList.add('jodit-container');
        }
        // actual for inline mode
        if (element !== container) {
            // hide source element
            if (element.style.display) {
                element.setAttribute(__defaultStyleDisplayKey, element.style.display);
            }
            element.style.display = 'none';
        }
        const workplace = this.c.div('jodit-workplace', {
            contenteditable: false
        });
        container.appendChild(workplace);
        if (element.parentNode && element !== container) {
            element.parentNode.insertBefore(container, element);
        }
        Object.defineProperty(element, 'component', {
            enumerable: false,
            configurable: true,
            value: this
        });
        const editor = this.c.div('jodit-wysiwyg', {
            contenteditable: true,
            'aria-disabled': false,
            tabindex: this.o.tabIndex
        });
        workplace.appendChild(editor);
        const currentPlace = {
            editor,
            element,
            container,
            workplace,
            statusbar: new jodit_modules__WEBPACK_IMPORTED_MODULE_2__.StatusBar(this, container),
            options: this.isReady
                ? (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.ConfigProto)(options || {}, jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.defaultOptions)
                : this.options,
            history: new jodit_modules__WEBPACK_IMPORTED_MODULE_2__.History(this),
            editorWindow: this.ow
        };
        this.__elementToPlace.set(editor, currentPlace);
        this.setCurrentPlace(currentPlace);
        this.places.push(currentPlace);
        this.setNativeEditorValue(this.getElementValue()); // Init value
        const initResult = this.__initEditor(buffer);
        const opt = this.options;
        const init = () => {
            if (opt.enableDragAndDropFileToEditor &&
                opt.uploader &&
                (opt.uploader.url || opt.uploader.insertImageAsBase64URI)) {
                this.uploader.bind(this.editor);
            }
            // in initEditor - the editor could change
            if (!this.__elementToPlace.get(this.editor)) {
                this.__elementToPlace.set(this.editor, currentPlace);
            }
            this.e.fire('afterAddPlace', currentPlace);
        };
        return (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.callPromise)(initResult, init);
    }
    addDisclaimer(elm) {
        this.workplace.appendChild(elm);
    }
    /**
     * Set current place object
     */
    setCurrentPlace(place) {
        if (this.currentPlace === place) {
            return;
        }
        if (!this.isEditorMode()) {
            this.setMode(jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_WYSIWYG);
        }
        this.currentPlace = place;
        this.buildToolbar();
        if (this.isReady) {
            this.e.fire('changePlace', place);
        }
    }
    __initEditor(buffer) {
        const result = this.__createEditor();
        return (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.callPromise)(result, () => {
            if (this.isInDestruct) {
                return;
            }
            // syncro
            if (this.element !== this.container) {
                const value = this.getElementValue();
                if (value !== this.getEditorValue()) {
                    this.setEditorValue(value);
                }
            }
            else {
                buffer != null && this.setEditorValue(buffer); // inline mode
            }
            let mode = this.o.defaultMode;
            if (this.o.saveModeInStorage) {
                const localMode = this.storage.get('jodit_default_mode');
                if (typeof localMode === 'string') {
                    mode = parseInt(localMode, 10);
                }
            }
            this.setMode(mode);
            if (this.o.readonly) {
                this.__wasReadOnly = false;
                this.setReadOnly(true);
            }
            if (this.o.disabled) {
                this.setDisabled(true);
            }
            // if enter plugin isn't installed
            try {
                this.ed.execCommand('defaultParagraphSeparator', false, this.o.enter.toLowerCase());
            }
            catch (_a) { }
        });
    }
    /**
     * Create main DIV element and replace source textarea
     */
    __createEditor() {
        const defaultEditorArea = this.editor;
        const stayDefault = this.e.fire('createEditor', this);
        return (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.callPromise)(stayDefault, () => {
            if (this.isInDestruct) {
                return;
            }
            if (stayDefault === false || (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isPromise)(stayDefault)) {
                jodit_modules__WEBPACK_IMPORTED_MODULE_2__.Dom.safeRemove(defaultEditorArea);
            }
            addClassNames(this.o.editorClassName, this.editor);
            if (this.o.style) {
                (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.css)(this.editor, this.o.style);
            }
            this.e
                .on('synchro', () => {
                this.setEditorValue();
            })
                .on('focus', () => {
                this.editorIsActive = true;
            })
                .on('blur', () => (this.editorIsActive = false));
            this.__prepareWYSIWYGEditor();
            // direction
            if (this.o.direction) {
                const direction = this.o.direction.toLowerCase() === 'rtl' ? 'rtl' : 'ltr';
                this.container.style.direction = direction;
                this.container.setAttribute('dir', direction);
                this.toolbar.setDirection(direction);
            }
            if (this.o.triggerChangeEvent) {
                this.e.on('change', this.async.debounce(() => {
                    this.e && this.e.fire(this.element, 'change');
                }, this.defaultTimeout));
            }
        });
    }
    /**
     * Attach some native event listeners
     */
    __prepareWYSIWYGEditor() {
        const { editor } = this;
        // direction
        if (this.o.direction) {
            const direction = this.o.direction.toLowerCase() === 'rtl' ? 'rtl' : 'ltr';
            this.editor.style.direction = direction;
            this.editor.setAttribute('dir', direction);
        }
        // proxy events
        this.e
            .on(editor, 'mousedown touchstart focus', () => {
            const place = this.__elementToPlace.get(editor);
            if (place) {
                this.setCurrentPlace(place);
            }
        })
            .on(editor, 'compositionend', this.synchronizeValues)
            .on(editor, 'selectionchange selectionstart keydown keyup input keypress dblclick mousedown mouseup ' +
            'click copy cut dragstart drop dragover paste resize touchstart touchend focus blur', (event) => {
            if (this.o.readonly || this.__isSilentChange) {
                return;
            }
            const w = this.ew;
            if (event instanceof w.KeyboardEvent &&
                event.isComposing) {
                return;
            }
            if (this.e && this.e.fire) {
                if (this.e.fire(event.type, event) === false) {
                    return false;
                }
                this.synchronizeValues();
            }
        });
    }
    fetch(url, options) {
        const ajax = new jodit_core_request__WEBPACK_IMPORTED_MODULE_7__/* .Ajax */ .t(Object.assign({ url }, options), this.o.defaultAjaxOptions);
        const destroy = () => {
            this.e.off('beforeDestruct', destroy);
            this.progressbar.progress(100).hide();
            ajax.destruct();
        };
        this.e.one('beforeDestruct', destroy);
        this.progressbar.show().progress(30);
        const promise = ajax.send();
        promise.finally(destroy).catch(() => null);
        return promise;
    }
    /**
     * Jodit's Destructor. Remove editor, and return source input
     */
    destruct() {
        if (this.isInDestruct) {
            return;
        }
        this.setStatus(jodit_modules__WEBPACK_IMPORTED_MODULE_2__.STATUSES.beforeDestruct);
        this.__elementToPlace.clear();
        if (!this.editor) {
            return;
        }
        const buffer = this.getEditorValue();
        this.storage.clear();
        this.buffer.clear();
        this.commands.clear();
        this.__selectionLocked = null;
        this.e.off(this.ow, 'resize');
        this.e.off(this.ow);
        this.e.off(this.od);
        this.e.off(this.od.body);
        this.places.forEach(({ container, workplace, statusbar, element, iframe, editor, history }) => {
            if (element !== container) {
                if (element.hasAttribute(__defaultStyleDisplayKey)) {
                    const display = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.attr)(element, __defaultStyleDisplayKey);
                    if (display) {
                        element.style.display = display;
                        element.removeAttribute(__defaultStyleDisplayKey);
                    }
                }
                else {
                    element.style.display = '';
                }
            }
            else {
                if (element.hasAttribute(__defaultClassesKey)) {
                    element.className =
                        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.attr)(element, __defaultClassesKey) || '';
                    element.removeAttribute(__defaultClassesKey);
                }
            }
            if (element.hasAttribute('style') && !(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.attr)(element, 'style')) {
                element.removeAttribute('style');
            }
            statusbar.destruct();
            this.e.off(container);
            this.e.off(element);
            this.e.off(editor);
            jodit_modules__WEBPACK_IMPORTED_MODULE_2__.Dom.safeRemove(workplace);
            jodit_modules__WEBPACK_IMPORTED_MODULE_2__.Dom.safeRemove(editor);
            if (container !== element) {
                jodit_modules__WEBPACK_IMPORTED_MODULE_2__.Dom.safeRemove(container);
            }
            Object.defineProperty(element, 'component', {
                enumerable: false,
                configurable: true,
                value: null
            });
            jodit_modules__WEBPACK_IMPORTED_MODULE_2__.Dom.safeRemove(iframe);
            // inline mode
            if (container === element) {
                element.innerHTML = buffer;
            }
            history.destruct();
        });
        this.places.length = 0;
        this.currentPlace = {};
        delete jodit_core_global__WEBPACK_IMPORTED_MODULE_4__/* .instances */ .as[this.id];
        super.destruct();
    }
};
Jodit.fatMode = jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.FAT_MODE;
Jodit.plugins = jodit_core_global__WEBPACK_IMPORTED_MODULE_4__/* .pluginSystem */ .pw;
Jodit.modules = jodit_core_global__WEBPACK_IMPORTED_MODULE_4__/* .modules */ .qz;
Jodit.ns = jodit_core_global__WEBPACK_IMPORTED_MODULE_4__/* .modules */ .qz;
Jodit.decorators = {};
Jodit.constants = jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__;
Jodit.instances = jodit_core_global__WEBPACK_IMPORTED_MODULE_4__/* .instances */ .as;
Jodit.lang = jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.lang;
Jodit.core = {
    Plugin: jodit_modules__WEBPACK_IMPORTED_MODULE_2__.Plugin
};
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.cache
], Jodit.prototype, "createInside", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.cache
], Jodit.prototype, "message", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.cache
], Jodit.prototype, "s", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.cache
], Jodit.prototype, "uploader", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.cache
], Jodit.prototype, "filebrowser", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.throttle)()
], Jodit.prototype, "synchronizeValues", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.watch)(':internalChange')
], Jodit.prototype, "updateElementValue", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.autobind
], Jodit.prototype, "__prepareWYSIWYGEditor", null);
Jodit = Jodit_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.derive)(jodit_core_traits_dlgs__WEBPACK_IMPORTED_MODULE_6__/* .Dlgs */ .l)
], Jodit);

function addClassNames(className, elm) {
    if (className) {
        className.split(/\s+/).forEach(cn => elm.classList.add(cn));
    }
}


/***/ }),

/***/ 10602:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_core_helpers_checker_is_array__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(63738);
/* harmony import */ var jodit_langs_en__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(90544);
/* harmony import */ var jodit_langs_ar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(45143);
/* harmony import */ var jodit_langs_ar__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jodit_langs_ar__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var jodit_langs_cs_cz__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(81958);
/* harmony import */ var jodit_langs_de__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(77143);
/* harmony import */ var jodit_langs_es__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(88347);
/* harmony import */ var jodit_langs_fr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(12414);
/* harmony import */ var jodit_langs_hu__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(23664);
/* harmony import */ var jodit_langs_it__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(94174);
/* harmony import */ var jodit_langs_ja__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(39356);
/* harmony import */ var jodit_langs_nl__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(66604);
/* harmony import */ var jodit_langs_pl__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(79940);
/* harmony import */ var jodit_langs_pt_br__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(6412);
/* harmony import */ var jodit_langs_tr__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(51344);
/* harmony import */ var jodit_langs_zh_cn__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(2308);
/* harmony import */ var jodit_langs_zh_tw__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(51597);
/* harmony import */ var jodit_langs_keys__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(75125);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */






















let exp = {};
exp = {
    ar: (jodit_langs_ar__WEBPACK_IMPORTED_MODULE_1___default()),
    cs_cz: jodit_langs_cs_cz__WEBPACK_IMPORTED_MODULE_2__,
    de: jodit_langs_de__WEBPACK_IMPORTED_MODULE_3__,
    en: jodit_langs_en__WEBPACK_IMPORTED_MODULE_0__,
    es: jodit_langs_es__WEBPACK_IMPORTED_MODULE_4__,
    fr: jodit_langs_fr__WEBPACK_IMPORTED_MODULE_5__,
    he: (jodit_langs_ar__WEBPACK_IMPORTED_MODULE_1___default()),
    hu: jodit_langs_hu__WEBPACK_IMPORTED_MODULE_6__,
    id: (jodit_langs_ar__WEBPACK_IMPORTED_MODULE_1___default()),
    it: jodit_langs_it__WEBPACK_IMPORTED_MODULE_7__,
    ja: jodit_langs_ja__WEBPACK_IMPORTED_MODULE_8__,
    ko: (jodit_langs_ar__WEBPACK_IMPORTED_MODULE_1___default()),
    mn: (jodit_langs_ar__WEBPACK_IMPORTED_MODULE_1___default()),
    nl: jodit_langs_nl__WEBPACK_IMPORTED_MODULE_9__,
    pl: jodit_langs_pl__WEBPACK_IMPORTED_MODULE_10__,
    pt_br: jodit_langs_pt_br__WEBPACK_IMPORTED_MODULE_11__,
    ru: (jodit_langs_ar__WEBPACK_IMPORTED_MODULE_1___default()),
    tr: jodit_langs_tr__WEBPACK_IMPORTED_MODULE_12__,
    zh_cn: jodit_langs_zh_cn__WEBPACK_IMPORTED_MODULE_13__,
    zh_tw: jodit_langs_zh_tw__WEBPACK_IMPORTED_MODULE_14__
};
/* Unpack array to hash */
const get = (value) => value ? value.default || value : {}, hashLang = {};
if ((0,jodit_core_helpers_checker_is_array__WEBPACK_IMPORTED_MODULE_16__/* .isArray */ .k)(get(jodit_langs_keys__WEBPACK_IMPORTED_MODULE_15__))) {
    get(jodit_langs_keys__WEBPACK_IMPORTED_MODULE_15__).forEach((key, index) => {
        hashLang[index] = key;
    });
}
Object.keys(exp).forEach((lang) => {
    const list = get(exp[lang]);
    if ((0,jodit_core_helpers_checker_is_array__WEBPACK_IMPORTED_MODULE_16__/* .isArray */ .k)(list)) {
        exp[lang] = {};
        list.forEach((value, index) => {
            exp[lang][hashLang[index]] = value;
        });
    }
    else {
        exp[lang] = list;
    }
});
/* harmony default export */ __webpack_exports__.Z = (exp);


/***/ }),

/***/ 39021:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   x: function() { return /* binding */ ContextMenu; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_ui_popup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8855);
/* harmony import */ var jodit_core_ui_button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(64856);
/* harmony import */ var jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(78157);
/* harmony import */ var jodit_core_decorators_component_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(75042);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * [[include:modules/context-menu/README.md]]
 * @packageDocumentation
 * @module modules/context-menu
 */





/**
 * Module to generate context menu
 */
let ContextMenu = class ContextMenu extends jodit_core_ui_popup__WEBPACK_IMPORTED_MODULE_0__/* .Popup */ .G {
    /** @override */
    className() {
        return 'ContextMenu';
    }
    /**
     * Generate and show context menu
     *
     * @param x - Global coordinate by X
     * @param y - Global coordinate by Y
     * @param actions - Array with plain objects `{icon: 'bin', title: 'Delete', exec: function () {}}`
     * @example
     * ```javascript
     * parent.show(e.clientX, e.clientY, [{icon: 'bin', title: 'Delete', exec: function () { alert(1) }]);
     * ```
     */
    show(x, y, actions) {
        const self = this;
        self.clear();
        if (!(0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_2__/* .isArray */ .kJ)(actions)) {
            return;
        }
        actions.forEach(item => {
            if (!item) {
                return;
            }
            const action = (0,jodit_core_ui_button__WEBPACK_IMPORTED_MODULE_1__/* .Button */ .zx)(this.jodit, item.icon || 'empty', item.title);
            this.jodit && action.setParentView(this.jodit);
            action.setMod('context', 'menu');
            action.onAction((e) => {
                var _a;
                (_a = item.exec) === null || _a === void 0 ? void 0 : _a.call(self, e);
                self.clear();
                self.close();
                return false;
            });
            this.append(action);
        });
        this.open(() => ({ left: x, top: y, width: 0, height: 0 }), true);
    }
};
ContextMenu = (0,tslib__WEBPACK_IMPORTED_MODULE_3__/* .__decorate */ .gn)([
    jodit_core_decorators_component_component__WEBPACK_IMPORTED_MODULE_4__/* .component */ .w
], ContextMenu);



/***/ }),

/***/ 6625:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   b: function() { return /* binding */ Alert; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(69099);
/* harmony import */ var jodit_core_helpers_array_as_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(67119);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_ui_button_button_button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(22003);
/* harmony import */ var _dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(52364);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */





/**
 * Show `alert` dialog. Work without Jodit object
 * @example
 * ```javascript
 * Jodit.Alert("File was uploaded");
 * Jodit.Alert("File was uploaded", "Message");
 * Jodit.Alert("File was uploaded", function() {
 *    $('form').hide();
 * });
 * Jodit.Alert("File wasn't uploaded", "Error", function() {
 *    $('form').hide();
 * });
 * ```
 */
function Alert(msg, title, callback, className = 'jodit-dialog_alert') {
    if ((0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_3__/* .isFunction */ .m)(title)) {
        callback = title;
        title = undefined;
    }
    const dialog = this instanceof _dialog__WEBPACK_IMPORTED_MODULE_2__/* .Dialog */ .V
        ? this
        : new _dialog__WEBPACK_IMPORTED_MODULE_2__/* .Dialog */ .V({ closeOnClickOverlay: true }), container = dialog.c.div(className), okButton = (0,jodit_core_ui_button_button_button__WEBPACK_IMPORTED_MODULE_1__/* .Button */ .zx)(dialog, 'ok', 'Ok');
    (0,jodit_core_helpers_array_as_array__WEBPACK_IMPORTED_MODULE_4__/* .asArray */ ._)(msg).forEach(oneMessage => {
        container.appendChild(jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isNode(oneMessage) ? oneMessage : dialog.c.fromHTML(oneMessage));
    });
    okButton.onAction(() => {
        if (!callback || !(0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_3__/* .isFunction */ .m)(callback) || callback(dialog) !== false) {
            dialog.close();
        }
    });
    dialog.setFooter([okButton]);
    dialog.open(container, title || '&nbsp;', true, true);
    okButton.focus();
    return dialog;
}


/***/ }),

/***/ 21655:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   I: function() { return /* binding */ Confirm; }
/* harmony export */ });
/* harmony import */ var jodit_modules_dialog_dialog__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52364);
/* harmony import */ var jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(69099);
/* harmony import */ var jodit_core_ui_button_button_button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(22003);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



/**
 * Show `confirm` dialog. Work without Jodit object
 *
 * @param title - Title or callback
 * @param callback - callback. The first argument is the value entered
 * @example
 * ```javascript
 * Jodit.Confirm("Are you sure?", "Confirm Dialog", function (yes) {
 *     if (yes) {
 *         // do something
 *     }
 * });
 * ```
 */
function Confirm(msg, title, callback) {
    const dialog = this instanceof jodit_modules_dialog_dialog__WEBPACK_IMPORTED_MODULE_0__/* .Dialog */ .V
        ? this
        : new jodit_modules_dialog_dialog__WEBPACK_IMPORTED_MODULE_0__/* .Dialog */ .V({ closeOnClickOverlay: true }), $div = dialog.c.fromHTML('<form class="jodit-dialog_prompt"></form>'), $label = dialog.c.element('label');
    if ((0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_2__/* .isFunction */ .m)(title)) {
        callback = title;
        title = undefined;
    }
    $label.appendChild(dialog.c.fromHTML(msg));
    $div.appendChild($label);
    const action = (yes) => () => {
        if (!callback || callback(yes) !== false) {
            dialog.close();
        }
    };
    const $cancel = (0,jodit_core_ui_button_button_button__WEBPACK_IMPORTED_MODULE_1__/* .Button */ .zx)(dialog, 'cancel', 'Cancel');
    const $ok = (0,jodit_core_ui_button_button_button__WEBPACK_IMPORTED_MODULE_1__/* .Button */ .zx)(dialog, 'ok', 'Yes');
    $cancel.onAction(action(false));
    $ok.onAction(action(true));
    dialog.e.on($div, 'submit', () => {
        action(true)();
        return false;
    });
    dialog.setFooter([$ok, $cancel]);
    dialog.open($div, title || '&nbsp;', true, true);
    $ok.focus();
    return dialog;
}


/***/ }),

/***/ 52364:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   V: function() { return /* binding */ Dialog; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(97582);
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(78157);
/* harmony import */ var jodit_core_helpers_array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8131);
/* harmony import */ var jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(86284);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(52378);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var jodit_core_view_view_with_toolbar__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(94530);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(2581);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(79102);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_view_view__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(21731);
/* harmony import */ var jodit_core_ui__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(14712);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
var Dialog_1;

/**
 * @module modules/dialog
 */














jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.dialog = {
    namespace: '',
    extraButtons: [],
    /**
     * This dialog can resize by trigger
     */
    resizable: true,
    /**
     * This dialog can move by header
     */
    draggable: true,
    buttons: ['dialog.close'],
    removeButtons: [],
    toolbarButtonSize: 'middle',
    zIndex: 'inherit'
};
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.dialog = {
    close: {
        icon: 'cancel',
        exec: dialog => {
            dialog.close();
        }
    }
};
/**
 * Module to generate dialog windows
 */
let Dialog = Dialog_1 = class Dialog extends jodit_core_view_view_with_toolbar__WEBPACK_IMPORTED_MODULE_6__/* .ViewWithToolbar */ .C {
    /** @override */
    className() {
        return 'Dialog';
    }
    get destination() {
        var _a;
        return ((_a = this.o.shadowRoot) !== null && _a !== void 0 ? _a : this.od.body);
    }
    setElements(root, elements) {
        const elements_list = [];
        (0,jodit_core_helpers_array__WEBPACK_IMPORTED_MODULE_3__/* .asArray */ ._2)(elements).forEach((elm) => {
            if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_2__/* .isArray */ .kJ)(elm)) {
                const div = this.c.div(this.getFullElName('column'));
                elements_list.push(div);
                root.appendChild(div);
                return this.setElements(div, elm);
            }
            let element;
            if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_2__/* .isString */ .HD)(elm)) {
                element = this.c.fromHTML(elm);
            }
            else {
                element = (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_2__/* .hasContainer */ .Zt)(elm) ? elm.container : elm;
            }
            elements_list.push(element);
            if (element.parentNode !== root) {
                root.appendChild(element);
            }
        });
        (0,jodit_core_helpers_array__WEBPACK_IMPORTED_MODULE_3__/* .toArray */ .qo)(root.childNodes).forEach((elm) => {
            if (elements_list.indexOf(elm) === -1) {
                root.removeChild(elm);
            }
        });
    }
    onMouseUp() {
        if (this.draggable || this.resizable) {
            this.removeGlobalResizeListeners();
            this.draggable = false;
            this.resizable = false;
            this.unlockSelect();
            if (this.e) {
                this.removeGlobalResizeListeners();
                /**
                 * Fired when dialog box is finished to resizing
                 */
                this.e.fire(this, 'endResize endMove');
            }
        }
    }
    /**
     *
     */
    onHeaderMouseDown(e) {
        const target = e.target;
        if (!this.o.draggable ||
            (target && target.nodeName.match(/^(INPUT|SELECT)$/))) {
            return;
        }
        this.draggable = true;
        this.startX = e.clientX;
        this.startY = e.clientY;
        this.startPoint.x = (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_4__.css)(this.dialog, 'left');
        this.startPoint.y = (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_4__.css)(this.dialog, 'top');
        this.setMaxZIndex();
        if (e.cancelable) {
            e.preventDefault();
        }
        this.lockSelect();
        this.addGlobalResizeListeners();
        if (this.e) {
            /**
             * Fired when dialog box is started moving
             */
            this.e.fire(this, 'startMove');
        }
    }
    onMouseMove(e) {
        if (this.draggable && this.o.draggable) {
            this.setPosition(this.startPoint.x + e.clientX - this.startX, this.startPoint.y + e.clientY - this.startY);
            if (this.e) {
                /**
                 * Fired when dialog box is moved
                 */
                this.e.fire(this, 'move', e.clientX - this.startX, e.clientY - this.startY);
            }
            e.stopImmediatePropagation();
        }
        if (this.resizable && this.o.resizable) {
            this.setSize(this.startPoint.w + e.clientX - this.startX, this.startPoint.h + e.clientY - this.startY);
            if (this.e) {
                /**
                 * Fired when dialog box is resized
                 */
                this.e.fire(this, 'resizeDialog', e.clientX - this.startX, e.clientY - this.startY);
            }
        }
    }
    onEsc(e) {
        if (!this.o.closeOnEsc) {
            return;
        }
        if (this.isOpened &&
            e.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.KEY_ESC &&
            this.getMod('static') !== true) {
            const me = this.getMaxZIndexDialog();
            if (me) {
                me.close();
            }
            else {
                this.close();
            }
            e.stopImmediatePropagation();
        }
    }
    onResizerMouseDown(e) {
        this.resizable = true;
        this.startX = e.clientX;
        this.startY = e.clientY;
        this.startPoint.w = this.dialog.offsetWidth;
        this.startPoint.h = this.dialog.offsetHeight;
        this.lockSelect();
        this.addGlobalResizeListeners();
        if (this.e) {
            /**
             * Fired when dialog box is started resizing
             */
            this.e.fire(this, 'startResize');
        }
    }
    addGlobalResizeListeners() {
        const self = this;
        self.e
            .on(self.ow, 'pointermove touchmove', self.onMouseMove)
            .on(self.ow, 'pointerup touchend', self.onMouseUp);
    }
    removeGlobalResizeListeners() {
        const self = this;
        self.e
            .off(self.ow, 'mousemove pointermove', self.onMouseMove)
            .off(self.ow, 'mouseup pointerup', self.onMouseUp);
    }
    /**
     * Specifies the size of the window
     *
     * @param w - The width of the window
     * @param h - The height of the window
     */
    setSize(w, h) {
        if (w == null) {
            w = this.dialog.offsetWidth;
        }
        if (h == null) {
            h = this.dialog.offsetHeight;
        }
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_4__.css)(this.dialog, {
            width: w,
            height: h
        });
        return this;
    }
    /**
     * Recalculate auto sizes
     */
    calcAutoSize() {
        this.setSize('auto', 'auto');
        this.setSize();
        return this;
    }
    /**
     * Specifies the position of the upper left corner of the window . If x and y are specified,
     * the window is centered on the center of the screen
     *
     * @param x - Position px Horizontal
     * @param y - Position px Vertical
     */
    setPosition(x, y) {
        const w = this.ow.innerWidth, h = this.ow.innerHeight;
        let left = w / 2 - this.dialog.offsetWidth / 2, top = h / 2 - this.dialog.offsetHeight / 2;
        if (left < 0) {
            left = 0;
        }
        if (top < 0) {
            top = 0;
        }
        if (x !== undefined && y !== undefined) {
            this.offsetX = x;
            this.offsetY = y;
            this.moved = Math.abs(x - left) > 100 || Math.abs(y - top) > 100;
        }
        this.dialog.style.left = (x || left) + 'px';
        this.dialog.style.top = (y || top) + 'px';
        return this;
    }
    /**
     * Specifies the dialog box title . It can take a string and an array of objects
     *
     * @param content - A string or an HTML element ,
     * or an array of strings and elements
     * @example
     * ```javascript
     * var dialog = new Jodi.modules.Dialog(parent);
     * dialog.setHeader('Hello world');
     * dialog.setHeader(['Hello world', '<button>OK</button>', $('<div>some</div>')]);
     * dialog.open();
     * ```
     */
    setHeader(content) {
        this.setElements(this.dialogbox_header, content);
        return this;
    }
    /**
     * It specifies the contents of the dialog box. It can take a string and an array of objects
     *
     * @param content - A string or an HTML element ,
     * or an array of strings and elements
     * @example
     * ```javascript
     * var dialog = new Jodi.modules.Dialog(parent);
     * dialog.setHeader('Hello world');
     * dialog.setContent('<form onsubmit="alert(1);"><input type="text" /></form>');
     * dialog.open();
     * ```
     */
    setContent(content) {
        this.setElements(this.dialogbox_content, content);
        return this;
    }
    /**
     * Sets the bottom of the dialog. It can take a string and an array of objects
     *
     * @param content - A string or an HTML element ,
     * or an array of strings and elements
     * @example
     * ```javascript
     * var dialog = new Jodi.modules.Dialog(parent);
     * dialog.setHeader('Hello world');
     * dialog.setContent('<form><input id="someText" type="text" /></form>');
     * dialog.setFooter([
     *  $('<a class="jodit-button">OK</a>').click(function () {
     *      alert($('someText').val())
     *      dialog.close();
     *  })
     * ]);
     * dialog.open();
     * ```
     */
    setFooter(content) {
        this.setElements(this.dialogbox_footer, content);
        this.setMod('footer', Boolean(content));
        return this;
    }
    /**
     * Get zIndex from dialog
     */
    getZIndex() {
        return parseInt((0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_4__.css)(this.container, 'zIndex'), 10) || 0;
    }
    /**
     * Get dialog instance with maximum z-index displaying it on top of all the dialog boxes
     */
    getMaxZIndexDialog() {
        let maxZi = 0, dlg, zIndex, res = this;
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_4__.$$)('.jodit-dialog', this.destination).forEach((dialog) => {
            dlg = dialog.component;
            zIndex = parseInt((0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_4__.css)(dialog, 'zIndex'), 10);
            if (dlg.isOpened && !isNaN(zIndex) && zIndex > maxZi) {
                res = dlg;
                maxZi = zIndex;
            }
        });
        return res;
    }
    /**
     * Sets the maximum z-index dialog box, displaying it on top of all the dialog boxes
     */
    setMaxZIndex() {
        if (this.getMod('static'))
            return;
        let maxZIndex = 20000004, zIndex = 0;
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_4__.$$)('.jodit-dialog', this.destination).forEach(dialog => {
            zIndex = parseInt((0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_4__.css)(dialog, 'zIndex'), 10);
            maxZIndex = Math.max(isNaN(zIndex) ? 0 : zIndex, maxZIndex);
        });
        this.container.style.zIndex = (maxZIndex + 1).toString();
    }
    /**
     * Expands the dialog on full browser window
     */
    toggleFullSize(isFullSize) {
        if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_2__/* .isVoid */ .nj)(isFullSize)) {
            isFullSize = !this.getMod('fullsize');
        }
        this.setMod('fullsize', isFullSize);
        super.toggleFullSize(isFullSize);
    }
    /**
     * It opens a dialog box to center it, and causes the two event.
     *
     * @param contentOrClose - specifies the contents of the dialog box.
     * Can be false or undefined. see [[Dialog.setContent]]
     * @param title - specifies the title of the dialog box, @see setHeader
     * @param destroyAfterClose - true - After closing the window , the destructor will be called.
     * @param modal - true window will be opened in modal mode
     */
    open(contentOrClose, titleOrModal, destroyAfterClose, modal) {
        jodit_core_global__WEBPACK_IMPORTED_MODULE_9__/* .eventEmitter */ .TB.fire('closeAllPopups hideHelpers');
        /**
         * Called before the opening of the dialog box
         */
        if (this.e.fire(this, 'beforeOpen') === false) {
            return this;
        }
        if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_2__/* .isBoolean */ .jn)(contentOrClose)) {
            destroyAfterClose = contentOrClose;
        }
        if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_2__/* .isBoolean */ .jn)(titleOrModal)) {
            modal = titleOrModal;
        }
        this.destroyAfterClose = destroyAfterClose === true;
        const content = (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_2__/* .isBoolean */ .jn)(contentOrClose) ? undefined : contentOrClose;
        const title = (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_2__/* .isBoolean */ .jn)(titleOrModal) ? undefined : titleOrModal;
        if (title !== undefined) {
            this.setHeader(title);
        }
        if (content) {
            this.setContent(content);
        }
        this.setMod('active', true);
        this.isOpened = true;
        this.setModal(modal);
        this.destination.appendChild(this.container);
        if (this.getMod('static') !== true) {
            this.setPosition(this.offsetX, this.offsetY);
            this.setMaxZIndex();
        }
        else {
            this.container.style.removeProperty('z-index');
        }
        if (this.o.fullsize) {
            this.toggleFullSize(true);
        }
        /**
         * Called after the opening of the dialog box
         */
        this.e.fire('afterOpen', this);
        return this;
    }
    /**
     * Set modal mode
     */
    setModal(modal) {
        this.isModal = Boolean(modal);
        this.setMod('modal', this.isModal);
        return this;
    }
    /****
     * Closes the dialog box , if you want to call the method `destruct`
     *
     * @see destroy
     * @example
     * ```javascript
     * //You can close dialog two ways
     * var dialog = new Jodit.modules.Dialog();
     * dialog.open('Hello world!', 'Title');
     * var $close = dialog.create.fromHTML('<a href="#" style="float:left;" class="jodit-button">
     *     <i class="icon icon-check"></i>&nbsp;' + Jodit.prototype.i18n('Ok') + '</a>');
     * $close.addEventListener('click', function () {
     *     dialog.close();
     * });
     * dialog.setFooter($close);
     * // and second way, you can close dialog from content
     * dialog.open('<a onclick="var event = doc.createEvent('HTMLEvents'); event.initEvent('close_dialog', true, true);
     * this.dispatchEvent(event)">Close</a>', 'Title');
     * ```
     */
    close() {
        if (this.isDestructed ||
            !this.isOpened ||
            this.getMod('static') === true) {
            return this;
        }
        const { e } = this;
        /**
         * Called up to close the window
         */
        if (e.fire(this, 'beforeClose') === false ||
            e.fire('beforeClose', this) === false) {
            return this;
        }
        this.setMod('active', false);
        this.isOpened = false;
        if (this.isFullSize) {
            this.toggleFullSize(false);
        }
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_7__/* .Dom */ .i.safeRemove(this.container);
        this.removeGlobalResizeListeners();
        /**
         * It called after the window is closed
         */
        e.fire(this, 'afterClose');
        e.fire(this.ow, 'joditCloseDialog');
        if (this.destroyAfterClose) {
            this.destruct();
        }
        return this;
    }
    constructor(options = {}) {
        super(options);
        this.destroyAfterClose = false;
        this.moved = false;
        this.resizable = false;
        this.draggable = false;
        this.startX = 0;
        this.startY = 0;
        this.startPoint = { x: 0, y: 0, w: 0, h: 0 };
        this.lockSelect = () => {
            this.setMod('moved', true);
        };
        this.unlockSelect = () => {
            this.setMod('moved', false);
        };
        this.onResize = () => {
            if (this.options &&
                this.o.resizable &&
                !this.moved &&
                this.isOpened &&
                !this.offsetX &&
                !this.offsetY) {
                this.setPosition();
            }
        };
        this.isModal = false;
        /**
         * True, if dialog was opened
         */
        this.isOpened = false;
        const self = this;
        self.options = (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_4__.ConfigProto)(options, (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_4__.ConfigProto)(jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.dialog, Dialog_1.defaultOptions));
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_7__/* .Dom */ .i.safeRemove(self.container);
        const n = this.getFullElName.bind(this);
        self.container = this.c.fromHTML(`<div class="jodit jodit-dialog ${this.componentName}">
				<div class="${n('overlay')}"></div>
				<div class="${this.getFullElName('panel')}">
					<div class="${n('header')}">
						<div class="${n('header-title')}"></div>
						<div class="${n('header-toolbar')}"></div>
					</div>
					<div class="${n('content')}"></div>
					<div class="${n('footer')}"></div>
					<div class="${n('resizer')}">${jodit_core_ui__WEBPACK_IMPORTED_MODULE_12__/* .Icon */ .JO.get('resize_handler')}</div>
				</div>
			</div>`);
        if (this.o.zIndex) {
            this.container.style.zIndex = this.o.zIndex.toString();
        }
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_4__.attr)(self.container, 'role', 'dialog');
        Object.defineProperty(self.container, 'component', {
            value: this
        });
        self.setMod('theme', self.o.theme || 'default').setMod('resizable', Boolean(self.o.resizable));
        const dialog = self.getElm('panel');
        void 0;
        const resizer = self.getElm('resizer');
        void 0;
        const dialogbox_header = self.getElm('header-title');
        void 0;
        const dialogbox_content = self.getElm('content');
        void 0;
        const dialogbox_footer = self.getElm('footer');
        void 0;
        const dialogbox_toolbar = self.getElm('header-toolbar');
        void 0;
        this.dialog = dialog;
        this.resizer = resizer;
        this.dialogbox_header = dialogbox_header;
        this.dialogbox_content = dialogbox_content;
        this.dialogbox_footer = dialogbox_footer;
        this.dialogbox_toolbar = dialogbox_toolbar;
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_4__.css)(self.dialog, {
            maxWidth: self.options.maxWidth,
            minHeight: self.options.minHeight,
            minWidth: self.options.minWidth
        });
        const headerBox = self.getElm('header');
        headerBox &&
            self.e.on(headerBox, 'pointerdown touchstart', self.onHeaderMouseDown);
        self.e.on(self.resizer, 'mousedown touchstart', self.onResizerMouseDown);
        const fullSize = jodit_core_global__WEBPACK_IMPORTED_MODULE_9__/* .pluginSystem */ .pw.get('fullsize');
        (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_2__/* .isFunction */ .mf)(fullSize) && fullSize(self);
        this.e
            .on(self.container, 'close_dialog', self.close)
            .on(this.ow, 'keydown', this.onEsc)
            .on(this.ow, 'resize', this.onResize);
        if (this.o.closeOnClickOverlay) {
            const overlay = self.getElm('overlay');
            void 0;
            this.e.on(overlay, 'click', self.close);
        }
    }
    /**
     * Build toolbar after ready
     */
    buildToolbar() {
        this.o.buttons &&
            this.toolbar
                .build((0,jodit_core_helpers_array__WEBPACK_IMPORTED_MODULE_3__/* .splitArray */ .C1)(this.o.buttons))
                .setMod('mode', 'header')
                .appendTo(this.dialogbox_toolbar);
    }
    /**
     * It destroys all objects created for the windows and also includes all the handlers for the window object
     */
    destruct() {
        if (this.isInDestruct) {
            return;
        }
        this.setStatus(jodit_core_component__WEBPACK_IMPORTED_MODULE_8__/* .STATUSES */ .n$.beforeDestruct);
        if (this.isOpened) {
            this.close();
        }
        if (this.events) {
            this.removeGlobalResizeListeners();
            this.events
                .off(this.container, 'close_dialog', self.close)
                .off(this.ow, 'keydown', this.onEsc)
                .off(this.ow, 'resize', this.onResize);
        }
        super.destruct();
    }
};
(0,tslib__WEBPACK_IMPORTED_MODULE_13__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_10__.autobind
], Dialog.prototype, "onMouseUp", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_13__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_10__.autobind
], Dialog.prototype, "onHeaderMouseDown", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_13__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_10__.autobind
], Dialog.prototype, "onMouseMove", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_13__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_10__.autobind
], Dialog.prototype, "onEsc", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_13__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_10__.autobind
], Dialog.prototype, "onResizerMouseDown", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_13__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_10__.autobind
], Dialog.prototype, "close", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_13__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_10__.hook)('ready')
], Dialog.prototype, "buildToolbar", null);
Dialog = Dialog_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_13__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_10__.component
], Dialog);

Dialog.defaultOptions = Object.assign(Object.assign({}, jodit_core_view_view__WEBPACK_IMPORTED_MODULE_11__/* .View */ .G.defaultOptions), { closeOnClickOverlay: false, closeOnEsc: true });


/***/ }),

/***/ 39093:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   I4: function() { return /* reexport safe */ _confirm__WEBPACK_IMPORTED_MODULE_3__.I; },
/* harmony export */   NL: function() { return /* reexport safe */ _prompt__WEBPACK_IMPORTED_MODULE_2__.N; },
/* harmony export */   Vq: function() { return /* reexport safe */ _dialog__WEBPACK_IMPORTED_MODULE_0__.V; },
/* harmony export */   bZ: function() { return /* reexport safe */ _alert__WEBPACK_IMPORTED_MODULE_1__.b; }
/* harmony export */ });
/* harmony import */ var _dialog__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52364);
/* harmony import */ var _alert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6625);
/* harmony import */ var _prompt__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(12894);
/* harmony import */ var _confirm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(21655);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * [[include:modules/dialog/README.md]]
 * @packageDocumentation
 * @module modules/dialog
 */






/***/ }),

/***/ 12894:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   N: function() { return /* binding */ Prompt; }
/* harmony export */ });
/* harmony import */ var jodit_core_ui_button_button_button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(22003);
/* harmony import */ var jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(69099);
/* harmony import */ var jodit_core_helpers_utils_attr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(23144);
/* harmony import */ var _dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(52364);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




/**
 * Show `Prompt` dialog. Work without Jodit object
 *
 * @param msg - Dialog content
 * @param title - Title or callback
 * @param callback - callback. The first argument is the value entered
 * @param placeholder - Placeholder for input
 * @example
 * ```javascript
 * Jodit.Prompt("Enter your name", "Prompt Dialog", function (name) {
 *     if (name.length < 3) {
 *         Jodit.Alert("The name must be at least 3 letters");
 *         return false;
 *     }
 *     // do something
 * });
 * ```
 */
function Prompt(msg, title, callback, placeholder, defaultValue) {
    const dialog = this instanceof _dialog__WEBPACK_IMPORTED_MODULE_2__/* .Dialog */ .V
        ? this
        : new _dialog__WEBPACK_IMPORTED_MODULE_2__/* .Dialog */ .V({ closeOnClickOverlay: true }), cancelButton = (0,jodit_core_ui_button_button_button__WEBPACK_IMPORTED_MODULE_0__/* .Button */ .zx)(dialog, 'cancel', 'Cancel'), okButton = (0,jodit_core_ui_button_button_button__WEBPACK_IMPORTED_MODULE_0__/* .Button */ .zx)(dialog, 'ok', 'Ok'), form = dialog.c.element('form', {
        class: 'jodit-dialog_prompt'
    }), inputElement = dialog.c.element('input', {
        autofocus: true,
        class: 'jodit-input'
    }), labelElement = dialog.c.element('label');
    if ((0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_3__/* .isFunction */ .m)(title)) {
        callback = title;
        title = undefined;
    }
    if (placeholder) {
        (0,jodit_core_helpers_utils_attr__WEBPACK_IMPORTED_MODULE_1__/* .attr */ .L)(inputElement, 'placeholder', placeholder);
    }
    labelElement.appendChild(dialog.c.text(msg));
    form.appendChild(labelElement);
    form.appendChild(inputElement);
    cancelButton.onAction(dialog.close);
    const onclick = () => {
        if (!callback ||
            !(0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_3__/* .isFunction */ .m)(callback) ||
            callback(inputElement.value) !== false) {
            dialog.close();
        }
    };
    okButton.onAction(onclick);
    dialog.e.on(form, 'submit', () => {
        onclick();
        return false;
    });
    dialog.setFooter([okButton, cancelButton]);
    dialog.open(form, title || '&nbsp;', true, true);
    inputElement.focus();
    if (defaultValue !== undefined && defaultValue.length) {
        inputElement.value = defaultValue;
        inputElement.select();
    }
    return dialog;
}


/***/ }),

/***/ 96962:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(86284);
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(30052);
/* harmony import */ var jodit_modules_image_editor_image_editor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(59210);
/* harmony import */ var jodit_modules_file_browser_factories__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(17331);
/* harmony import */ var jodit_modules_file_browser_builders_elements_map__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(76068);
/* harmony import */ var jodit_modules_file_browser_fetch_load_tree__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(16612);
/* harmony import */ var jodit_modules_file_browser_fetch_delete_file__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(66636);
/* harmony import */ var jodit_modules_file_browser_listeners_native_listeners__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(83007);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */










const CLASS_PREVIEW = 'jodit-file-browser-preview', preview_tpl_next = (next = 'next', right = 'right') => `<div class="${CLASS_PREVIEW}__navigation ${CLASS_PREVIEW}__navigation_arrow_${next}">` +
    '' +
    jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_2__/* .Icon */ .J.get('angle-' + right) +
    '</a>';
/* harmony default export */ __webpack_exports__.Z = ((self) => {
    if (!self.o.contextMenu) {
        return () => { };
    }
    const contextmenu = (0,jodit_modules_file_browser_factories__WEBPACK_IMPORTED_MODULE_4__/* .makeContextMenu */ .L)(self);
    return (e) => {
        const a = (0,jodit_modules_file_browser_listeners_native_listeners__WEBPACK_IMPORTED_MODULE_7__/* .getItem */ .rV)(e.target, self.container);
        if (!a) {
            return;
        }
        let item = a;
        const opt = self.options, ga = (key) => (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.attr)(item, key) || '';
        self.async.setTimeout(() => {
            const selectedItem = (0,jodit_modules_file_browser_listeners_native_listeners__WEBPACK_IMPORTED_MODULE_7__/* .elementToItem */ .iU)(a, (0,jodit_modules_file_browser_builders_elements_map__WEBPACK_IMPORTED_MODULE_5__/* .elementsMap */ .d)(self));
            if (!selectedItem) {
                return;
            }
            self.state.activeElements = [selectedItem];
            contextmenu.show(e.clientX, e.clientY, [
                ga('data-is-file') !== '1' &&
                    opt.editImage &&
                    (self.dataProvider.canI('ImageResize') ||
                        self.dataProvider.canI('ImageCrop'))
                    ? {
                        icon: 'pencil',
                        title: 'Edit',
                        exec: () => jodit_modules_image_editor_image_editor__WEBPACK_IMPORTED_MODULE_3__/* .openImageEditor */ .r.call(self, ga('href'), ga('data-name'), ga('data-path'), ga('data-source'))
                    }
                    : false,
                self.dataProvider.canI('FileRename')
                    ? {
                        icon: 'italic',
                        title: 'Rename',
                        exec: () => {
                            self.e.fire('fileRename.filebrowser', ga('data-name'), ga('data-path'), ga('data-source'));
                        }
                    }
                    : false,
                self.dataProvider.canI('FileRemove')
                    ? {
                        icon: 'bin',
                        title: 'Delete',
                        exec: () => (0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__awaiter */ .mG)(void 0, void 0, void 0, function* () {
                            try {
                                yield (0,jodit_modules_file_browser_fetch_delete_file__WEBPACK_IMPORTED_MODULE_9__/* .deleteFile */ ._)(self, ga('data-name'), ga('data-source'));
                            }
                            catch (e) {
                                return self.status(e);
                            }
                            self.state.activeElements = [];
                            return (0,jodit_modules_file_browser_fetch_load_tree__WEBPACK_IMPORTED_MODULE_6__/* .loadTree */ .Q)(self).catch(self.status);
                        })
                    }
                    : false,
                opt.preview
                    ? {
                        icon: 'eye',
                        title: 'Preview',
                        exec: () => {
                            const preview = self.dlg({
                                buttons: ['fullsize', 'dialog.close']
                            }), temp_content = self.c.div(CLASS_PREVIEW, '<div class="jodit-icon_loader"></div>'), preview_box = self.c.div(CLASS_PREVIEW + '__box'), next = self.c.fromHTML(preview_tpl_next()), prev = self.c.fromHTML(preview_tpl_next('prev', 'left')), addLoadHandler = (src) => {
                                const image = self.c.element('img');
                                image.setAttribute('src', src);
                                const onload = () => {
                                    var _a;
                                    if (self.isInDestruct) {
                                        return;
                                    }
                                    self.e.off(image, 'load');
                                    jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.detach(temp_content);
                                    if (opt.showPreviewNavigation) {
                                        if (jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.prevWithClass(item, self.files.getFullElName('item'))) {
                                            temp_content.appendChild(prev);
                                        }
                                        if (jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.nextWithClass(item, self.files.getFullElName('item'))) {
                                            temp_content.appendChild(next);
                                        }
                                    }
                                    temp_content.appendChild(preview_box);
                                    preview_box.appendChild(image);
                                    preview.setPosition();
                                    (_a = self === null || self === void 0 ? void 0 : self.events) === null || _a === void 0 ? void 0 : _a.fire('previewOpenedAndLoaded');
                                };
                                self.e.on(image, 'load', onload);
                                if (image.complete) {
                                    onload();
                                }
                            };
                            self.e.on([next, prev], 'click', function () {
                                if (this === next) {
                                    item = jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.nextWithClass(item, self.files.getFullElName('item'));
                                }
                                else {
                                    item = jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.prevWithClass(item, self.files.getFullElName('item'));
                                }
                                if (!item) {
                                    throw (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.error)('Need element');
                                }
                                jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.detach(temp_content);
                                jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.detach(preview_box);
                                temp_content.innerHTML =
                                    '<div class="jodit-icon_loader"></div>';
                                addLoadHandler(ga('href'));
                            });
                            self.e.on('beforeDestruct', () => {
                                preview.destruct();
                            });
                            preview.container.classList.add(CLASS_PREVIEW + '__dialog');
                            preview.setContent(temp_content);
                            preview.setPosition();
                            preview.open();
                            addLoadHandler(ga('href'));
                            self.events
                                .on('beforeDestruct', () => {
                                preview.destruct();
                            })
                                .fire('previewOpened');
                        }
                    }
                    : false,
                {
                    icon: 'upload',
                    title: 'Download',
                    exec: () => {
                        const url = ga('href');
                        if (url) {
                            self.ow.open(url);
                        }
                    }
                }
            ]);
        }, self.defaultTimeout);
        self.e
            .on('beforeClose', () => {
            contextmenu.close();
        })
            .on('beforeDestruct', () => contextmenu.destruct());
        e.stopPropagation();
        e.preventDefault();
        return false;
    };
});


/***/ }),

/***/ 76068:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   d: function() { return /* binding */ elementsMap; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
const map = new WeakMap();
/**
 * Returns a map of the file's key correspondence to its DOM element in the file browser
 * @private
 */
const elementsMap = (view) => {
    let result = map.get(view);
    if (!result) {
        result = {};
        map.set(view, result);
    }
    return result;
};


/***/ }),

/***/ 97373:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ FileBrowserItem; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76974);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

class FileBrowserItem {
    constructor(data) {
        this.data = data;
        // TODO Check with Object.assign
        Object.keys(data).forEach(key => {
            this[key] = data[key];
        });
    }
    static create(data) {
        if (data instanceof FileBrowserItem) {
            return data;
        }
        return new FileBrowserItem(data);
    }
    get path() {
        return (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.normalizePath)(this.data.source.path ? this.data.source.path + '/' : '/');
    }
    get imageURL() {
        const timestamp = this.time || new Date().getTime().toString(), { thumbIsAbsolute, source, thumb, file } = this.data, path = thumb || file;
        return thumbIsAbsolute && path
            ? path
            : (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.normalizeUrl)(source.baseurl, source.path, path || '') +
                '?_tmst=' +
                encodeURIComponent(timestamp);
    }
    get fileURL() {
        let { name } = this.data;
        const { file, fileIsAbsolute, source } = this.data;
        if (file !== undefined) {
            name = file;
        }
        return fileIsAbsolute && name
            ? name
            : (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.normalizeUrl)(source.baseurl, source.path, name || '');
    }
    get time() {
        const { changed } = this.data;
        return ((changed &&
            (typeof changed === 'number'
                ? new Date(changed).toLocaleString()
                : changed)) ||
            '');
    }
    get uniqueHashKey() {
        const data = this.data;
        let key = [
            data.sourceName,
            data.name,
            data.file,
            this.time,
            data.thumb
        ].join('_');
        key = key.toLowerCase().replace(/[^0-9a-z\-.]/g, '-');
        return key;
    }
    toJSON() {
        return this.data;
    }
}


/***/ }),

/***/ 35267:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78157);
/* harmony import */ var jodit_core_ui_form_inputs_file_file__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(21447);
/* harmony import */ var jodit_core_helpers_utils_human_size_to_bytes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(48871);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module modules/file-browser
 */




jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.filebrowser = {
    namespace: '',
    cache: true,
    extraButtons: [],
    filter(item, search) {
        search = search.toLowerCase();
        if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isString */ .HD)(item)) {
            return item.toLowerCase().indexOf(search) !== -1;
        }
        if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isString */ .HD)(item.name)) {
            return item.name.toLowerCase().indexOf(search) !== -1;
        }
        if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isString */ .HD)(item.file)) {
            return item.file.toLowerCase().indexOf(search) !== -1;
        }
        return true;
    },
    sortBy: 'changed-desc',
    sort(a, b, sortBy) {
        const [sortAttr, arrow] = sortBy.toLowerCase().split('-'), asc = arrow === 'asc';
        const compareStr = (f, s) => {
            if (f < s) {
                return asc ? -1 : 1;
            }
            if (f > s) {
                return asc ? 1 : -1;
            }
            return 0;
        };
        if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isString */ .HD)(a)) {
            return compareStr(a.toLowerCase(), b.toLowerCase());
        }
        if (a[sortAttr] === undefined || sortAttr === 'name') {
            if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isString */ .HD)(a.name)) {
                return compareStr(a.name.toLowerCase(), b.name.toLowerCase());
            }
            if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isString */ .HD)(a.file)) {
                return compareStr(a.file.toLowerCase(), b.file.toLowerCase());
            }
            return 0;
        }
        switch (sortAttr) {
            case 'changed': {
                const f = new Date(a.changed).getTime(), s = new Date(b.changed).getTime();
                return asc ? f - s : s - f;
            }
            case 'size': {
                const f = (0,jodit_core_helpers_utils_human_size_to_bytes__WEBPACK_IMPORTED_MODULE_3__/* .humanSizeToBytes */ .w)(a.size), s = (0,jodit_core_helpers_utils_human_size_to_bytes__WEBPACK_IMPORTED_MODULE_3__/* .humanSizeToBytes */ .w)(b.size);
                return asc ? f - s : s - f;
            }
        }
        return 0;
    },
    editImage: true,
    preview: true,
    showPreviewNavigation: true,
    showSelectButtonInPreview: true,
    contextMenu: true,
    howLongShowMsg: 3000,
    createNewFolder: true,
    deleteFolder: true,
    renameFolder: true,
    moveFolder: true,
    moveFile: true,
    permissionsPresets: {
        allowFileDownload: undefined,
        allowFileMove: undefined,
        allowFileRemove: undefined,
        allowFileRename: undefined,
        allowFileUpload: undefined,
        allowFileUploadRemote: undefined,
        allowFiles: undefined,
        allowFolderCreate: undefined,
        allowFolderMove: undefined,
        allowFolderRemove: undefined,
        allowFolderRename: undefined,
        allowFolderTree: undefined,
        allowFolders: undefined,
        allowGeneratePdf: undefined,
        allowImageCrop: undefined,
        allowImageResize: undefined
    },
    showFoldersPanel: true,
    storeLastOpenedFolder: true,
    width: 859,
    height: 400,
    buttons: [
        'filebrowser.upload',
        'filebrowser.remove',
        'filebrowser.update',
        'filebrowser.select',
        'filebrowser.edit',
        '|',
        'filebrowser.tiles',
        'filebrowser.list',
        '|',
        'filebrowser.filter',
        '|',
        'filebrowser.sort'
    ],
    removeButtons: [],
    fullsize: false,
    showTooltip: true,
    view: null,
    isSuccess(resp) {
        return resp.success;
    },
    getMessage(resp) {
        return resp.data.messages !== undefined && (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_1__/* .isArray */ .kJ)(resp.data.messages)
            ? resp.data.messages.join(' ')
            : '';
    },
    showFileName: true,
    showFileSize: true,
    showFileChangeTime: true,
    saveStateInStorage: {
        storeLastOpenedFolder: true,
        storeView: true,
        storeSortBy: true
    },
    pixelOffsetLoadNewChunk: 200,
    getThumbTemplate(item, source, source_name) {
        const opt = this.options, IC = this.files.getFullElName('item'), showName = opt.showFileName, showSize = opt.showFileSize && item.size, showTime = opt.showFileChangeTime && item.time;
        let name = '';
        if (item.file !== undefined) {
            name = item.file;
        }
        const info = `<div class="${IC}-info">${showName ? `<span class="${IC}-info-filename">${name}</span>` : ''}${showSize
            ? `<span class="${IC}-info-filesize">${item.size}</span>`
            : ''}${showTime
            ? `<span class="${IC}-info-filechanged">${showTime}</span>`
            : ''}</div>`;
        return `<a
			data-jodit-file-browser-item="true"
			data-is-file="${item.isImage ? 0 : 1}"
			draggable="true"
			class="${IC}"
			href="${item.fileURL}"
			data-source="${source_name}"
			data-path="${item.path}"
			data-name="${name}"
			title="${name}"
			data-url="${item.fileURL}">
				<img
					data-is-file="${item.isImage ? 0 : 1}"
					data-src="${item.fileURL}"
					src="${item.imageURL}"
					alt="${name}"
					loading="lazy"
				/>
				${showName || showSize || showTime ? info : ''}
			</a>`;
    },
    ajax: Object.assign(Object.assign({}, jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.defaultAjaxOptions), { url: '', data: {}, cache: true, contentType: 'application/x-www-form-urlencoded; charset=UTF-8', method: 'POST', processData: true, headers: {}, prepareData(data) {
            return data;
        },
        process(resp) {
            return resp;
        } }),
    create: {
        data: { action: 'folderCreate' }
    },
    getLocalFileByUrl: {
        data: { action: 'getLocalFileByUrl' }
    },
    resize: {
        data: { action: 'imageResize' }
    },
    crop: {
        data: { action: 'imageCrop' }
    },
    fileMove: {
        data: { action: 'fileMove' }
    },
    folderMove: {
        data: { action: 'folderMove' }
    },
    fileRename: {
        data: { action: 'fileRename' }
    },
    folderRename: {
        data: { action: 'folderRename' }
    },
    fileRemove: {
        data: { action: 'fileRemove' }
    },
    folderRemove: {
        data: { action: 'folderRemove' }
    },
    items: {
        data: { action: 'files' }
    },
    folder: {
        data: { action: 'folders' }
    },
    permissions: {
        data: { action: 'permissions' }
    }
};
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.filebrowser = {
    upload: {
        icon: 'plus',
        isInput: true,
        isDisabled: (browser) => !browser.dataProvider.canI('FileUpload'),
        getContent: (filebrowser) => {
            const btn = new jodit_core_ui_form_inputs_file_file__WEBPACK_IMPORTED_MODULE_2__/* .UIFileInput */ .Z(filebrowser, {
                onlyImages: filebrowser.state.onlyImages
            });
            filebrowser.e.fire('bindUploader.filebrowser', btn.container);
            return btn.container;
        }
    },
    remove: {
        icon: 'bin',
        isDisabled: (browser) => {
            return (!browser.state.activeElements.length ||
                !browser.dataProvider.canI('FileRemove'));
        },
        exec: (editor) => {
            editor.e.fire('fileRemove.filebrowser');
        }
    },
    update: {
        exec: (editor) => {
            editor.e.fire('update.filebrowser');
        }
    },
    select: {
        icon: 'check',
        isDisabled: (browser) => !browser.state.activeElements.length,
        exec: (editor) => {
            editor.e.fire('select.filebrowser');
        }
    },
    edit: {
        icon: 'pencil',
        isDisabled: (browser) => {
            const selected = browser.state.activeElements;
            return (selected.length !== 1 ||
                !selected[0].isImage ||
                !(browser.dataProvider.canI('ImageCrop') ||
                    browser.dataProvider.canI('ImageResize')));
        },
        exec: editor => {
            editor.e.fire('edit.filebrowser');
        }
    },
    tiles: {
        icon: 'th',
        isActive: (filebrowser) => filebrowser.state.view === 'tiles',
        exec: (filebrowser) => {
            filebrowser.e.fire('view.filebrowser', 'tiles');
        }
    },
    list: {
        icon: 'th-list',
        isActive: (filebrowser) => filebrowser.state.view === 'list',
        exec: (filebrowser) => {
            filebrowser.e.fire('view.filebrowser', 'list');
        }
    },
    filter: {
        isInput: true,
        getContent: (filebrowser, b) => {
            const oldInput = b.container.querySelector('.jodit-input');
            if (oldInput) {
                return oldInput;
            }
            const input = filebrowser.c.element('input', {
                class: 'jodit-input',
                placeholder: filebrowser.i18n('Filter')
            });
            input.value = filebrowser.state.filterWord;
            filebrowser.e.on(input, 'keydown mousedown', filebrowser.async.debounce(() => {
                filebrowser.e.fire('filter.filebrowser', input.value);
            }, filebrowser.defaultTimeout));
            return input;
        }
    },
    sort: {
        isInput: true,
        getContent: (fb) => {
            const select = fb.c.fromHTML('<select class="jodit-input jodit-select">' +
                `<option value="changed-asc">${fb.i18n('Sort by changed')} (⬆)</option>` +
                `<option value="changed-desc">${fb.i18n('Sort by changed')} (⬇)</option>` +
                `<option value="name-asc">${fb.i18n('Sort by name')} (⬆)</option>` +
                `<option value="name-desc">${fb.i18n('Sort by name')} (⬇)</option>` +
                `<option value="size-asc">${fb.i18n('Sort by size')} (⬆)</option>` +
                `<option value="size-desc">${fb.i18n('Sort by size')} (⬇)</option>` +
                '</select>');
            select.value = fb.state.sortBy;
            fb.e
                .on('sort.filebrowser', (value) => {
                if (select.value !== value) {
                    select.value = value;
                }
            })
                .on(select, 'change', () => {
                fb.e.fire('sort.filebrowser', select.value);
            });
            return select;
        }
    }
};


/***/ }),

/***/ 82901:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   J: function() { return /* binding */ DEFAULT_SOURCE_NAME; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_request__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60072);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(13666);
/* harmony import */ var jodit_modules_file_browser_builders_item__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(97373);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(62924);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */






const DEFAULT_SOURCE_NAME = 'default';
const possibleRules = new Set([
    'allowFiles',
    'allowFileMove',
    'allowFileUpload',
    'allowFileUploadRemote',
    'allowFileRemove',
    'allowFileRename',
    'allowFolders',
    'allowFolderMove',
    'allowFolderCreate',
    'allowFolderRemove',
    'allowFolderRename',
    'allowImageResize',
    'allowImageCrop'
]);
let DataProvider = class DataProvider {
    constructor(parent, options) {
        this.parent = parent;
        this.options = options;
        this.__currentPermissions = null;
        this.ajaxInstances = new Map();
        this.progressHandler = (ignore) => { };
    }
    /**
     * Alias for options
     */
    get o() {
        return this.options;
    }
    get(name) {
        const ai = this.ajaxInstances;
        if (ai.has(name)) {
            const ajax = ai.get(name);
            ajax === null || ajax === void 0 ? void 0 : ajax.abort();
            ai.delete(name);
        }
        const opts = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.ConfigProto)(this.options[name] !== undefined
            ? this.options[name]
            : {}, (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.ConfigProto)({
            onProgress: this.progressHandler
        }, this.o.ajax));
        if (opts.prepareData) {
            opts.data = opts.prepareData.call(this, opts.data);
        }
        const ajax = new jodit_core_request__WEBPACK_IMPORTED_MODULE_1__/* .Ajax */ .t(opts);
        ai.set(name, ajax);
        const promise = ajax.send();
        promise
            .finally(() => {
            ajax.destruct();
            ai.delete(name);
            this.progressHandler(100);
        })
            .catch(() => null);
        return promise
            .then(resp => resp.json())
            .then(resp => {
            if (resp && !this.isSuccess(resp)) {
                throw new Error(this.getMessage(resp));
            }
            return resp;
        });
    }
    onProgress(callback) {
        this.progressHandler = callback;
    }
    /**
     * Load permissions for path and source
     */
    permissions(path, source) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__/* .__awaiter */ .mG)(this, void 0, void 0, function* () {
            if (!this.o.permissions) {
                return null;
            }
            this.o.permissions.data.path = path;
            this.o.permissions.data.source = source;
            if (this.o.permissions.url) {
                return this.get('permissions').then(resp => {
                    let process = this.o.permissions.process;
                    if (!process) {
                        process = this.o.ajax.process;
                    }
                    if (process) {
                        const respData = process.call(self, resp);
                        if (respData.data.permissions) {
                            this.__currentPermissions = respData.data.permissions;
                        }
                    }
                    return this.__currentPermissions;
                });
            }
            return null;
        });
    }
    canI(action) {
        const rule = 'allow' + action;
        if (!jodit_core_constants__WEBPACK_IMPORTED_MODULE_4__.IS_PROD) {
            if (!possibleRules.has(rule)) {
                throw (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.error)('Wrong action ' + action);
            }
        }
        const presetValue = this.o.permissionsPresets[rule];
        if (presetValue !== undefined) {
            return presetValue;
        }
        return (this.__currentPermissions == null ||
            this.__currentPermissions[rule] === undefined ||
            this.__currentPermissions[rule]);
    }
    __items(path, source, mods, onResult) {
        const opt = this.options;
        if (!opt.items) {
            return Promise.reject(Error('Set Items api options'));
        }
        opt.items.data.path = path;
        opt.items.data.source = source;
        opt.items.data.mods = mods;
        return this.get('items').then(resp => {
            let process = this.o.items.process;
            if (!process) {
                process = this.o.ajax.process;
            }
            if (process) {
                resp = process.call(self, resp);
            }
            return onResult(resp);
        });
    }
    /**
     * Load items list by path and source
     */
    items(path, source, mods = {}) {
        return this.__items(path, source, mods, resp => this.generateItemsList(resp.data.sources, mods));
    }
    /**
     * Load items list by path and source
     */
    itemsEx(path, source, mods = {}) {
        const calcTotal = (sources) => sources.reduce((acc, source) => acc + source.files.length, 0);
        return this.__items(path, source, mods, resp => ({
            items: this.generateItemsList(resp.data.sources, mods),
            loadedTotal: calcTotal(resp.data.sources)
        }));
    }
    generateItemsList(sources, mods = {}) {
        const elements = [];
        const canBeFile = (item) => item.type === 'folder' ||
            !mods.onlyImages ||
            item.isImage === undefined ||
            item.isImage;
        const inFilter = (item) => {
            var _a;
            return !((_a = mods.filterWord) === null || _a === void 0 ? void 0 : _a.length) ||
                this.o.filter === undefined ||
                this.o.filter(item, mods.filterWord);
        };
        sources.forEach(source => {
            if (source.files && source.files.length) {
                const { sort } = this.o;
                if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.isFunction)(sort) && mods.sortBy) {
                    source.files.sort((a, b) => sort(a, b, mods.sortBy));
                }
                source.files.forEach((item) => {
                    if (inFilter(item) && canBeFile(item)) {
                        elements.push(jodit_modules_file_browser_builders_item__WEBPACK_IMPORTED_MODULE_3__/* .FileBrowserItem */ .Z.create(Object.assign(Object.assign({}, item), { sourceName: source.name, source })));
                    }
                });
            }
        });
        return elements;
    }
    tree(path, source) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__/* .__awaiter */ .mG)(this, void 0, void 0, function* () {
            path = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.normalizeRelativePath)(path);
            if (!this.o.folder) {
                return Promise.reject(Error('Set Folder Api options'));
            }
            yield this.permissions(path, source);
            this.o.folder.data.path = path;
            this.o.folder.data.source = source;
            return this.get('folder').then(resp => {
                let process = this.o.folder.process;
                if (!process) {
                    process = this.o.ajax.process;
                }
                if (process) {
                    resp = process.call(self, resp);
                }
                return resp.data.sources;
            });
        });
    }
    /**
     * Get path by url. You can use this method in another modules
     */
    getPathByUrl(url) {
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.set)('options.getLocalFileByUrl.data.url', url, this);
        return this.get('getLocalFileByUrl').then(resp => {
            if (this.isSuccess(resp)) {
                return resp.data;
            }
            throw (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.error)(this.getMessage(resp));
        });
    }
    /**
     * Create a directory on the server
     *
     * @param name - Name the new folder
     * @param path - Relative directory in which you want create a folder
     * @param source - Server source key
     */
    createFolder(name, path, source) {
        const { create } = this.o;
        if (!create) {
            throw (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.error)('Set Create api options');
        }
        create.data.source = source;
        create.data.path = path;
        create.data.name = name;
        return this.get('create').then(resp => {
            if (this.isSuccess(resp)) {
                return true;
            }
            throw (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.error)(this.getMessage(resp));
        });
    }
    /**
     * Move a file / directory on the server
     *
     * @param filepath - The relative path to the file / folder source
     * @param path - Relative to the directory where you want to move the file / folder
     */
    move(filepath, path, source, isFile) {
        const mode = isFile
            ? 'fileMove'
            : 'folderMove';
        const option = this.options[mode];
        if (!option) {
            throw (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.error)('Set Move api options');
        }
        option.data.from = filepath;
        option.data.path = path;
        option.data.source = source;
        return this.get(mode).then(resp => {
            if (this.isSuccess(resp)) {
                return true;
            }
            throw (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.error)(this.getMessage(resp));
        });
    }
    /**
     * Deleting item
     *
     * @param path - Relative path
     * @param file - The filename
     * @param source - Source
     */
    remove(action, path, file, source) {
        const fr = this.o[action];
        if (!fr) {
            throw (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.error)(`Set "${action}" api options`);
        }
        fr.data.path = path;
        fr.data.name = file;
        fr.data.source = source;
        return this.get(action).then(resp => {
            if (fr.process) {
                resp = fr.process.call(this, resp);
            }
            return this.getMessage(resp);
        });
    }
    /**
     * Deleting a file
     *
     * @param path - Relative path
     * @param file - The filename
     * @param source - Source
     */
    fileRemove(path, file, source) {
        return this.remove('fileRemove', path, file, source);
    }
    /**
     * Deleting a folder
     *
     * @param path - Relative path
     * @param file - The filename
     * @param source - Source
     */
    folderRemove(path, file, source) {
        return this.remove('folderRemove', path, file, source);
    }
    /**
     * Rename action
     *
     * @param path - Relative path
     * @param name - Old name
     * @param newname - New name
     * @param source - Source
     */
    rename(action, path, name, newname, source) {
        const fr = this.o[action];
        if (!fr) {
            throw (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.error)(`Set "${action}" api options`);
        }
        fr.data.path = path;
        fr.data.name = name;
        fr.data.newname = newname;
        fr.data.source = source;
        return this.get(action).then(resp => {
            if (fr.process) {
                resp = fr.process.call(self, resp);
            }
            return this.getMessage(resp);
        });
    }
    /**
     * Rename folder
     */
    folderRename(path, name, newname, source) {
        return this.rename('folderRename', path, name, newname, source);
    }
    /**
     * Rename file
     */
    fileRename(path, name, newname, source) {
        return this.rename('fileRename', path, name, newname, source);
    }
    changeImage(type, path, source, name, newname, box) {
        if (!this.o[type]) {
            this.o[type] = {
                data: {}
            };
        }
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        const query = this.o[type];
        if (query.data === undefined) {
            query.data = {
                action: type
            };
        }
        query.data.newname = newname || name;
        if (box) {
            query.data.box = box;
        }
        query.data.path = path;
        query.data.name = name;
        query.data.source = source;
        return this.get(type).then(() => {
            return true;
        });
    }
    /**
     * Send command to server to crop image
     */
    crop(path, source, name, newname, box) {
        return this.changeImage('crop', path, source, name, newname, box);
    }
    /**
     * Send command to server to resize image
     */
    resize(path, source, name, newname, box) {
        return this.changeImage('resize', path, source, name, newname, box);
    }
    getMessage(resp) {
        return this.options.getMessage(resp);
    }
    isSuccess(resp) {
        return this.options.isSuccess(resp);
    }
    destruct() {
        this.ajaxInstances.forEach(a => a.destruct());
        this.ajaxInstances.clear();
    }
};
DataProvider = (0,tslib__WEBPACK_IMPORTED_MODULE_5__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_2__.autobind
], DataProvider);
/* harmony default export */ __webpack_exports__.Z = (DataProvider);


/***/ }),

/***/ 17331:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   L: function() { return /* binding */ makeContextMenu; },
/* harmony export */   S: function() { return /* binding */ makeDataProvider; }
/* harmony export */ });
/* harmony import */ var jodit_modules_context_menu_context_menu__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(39021);
/* harmony import */ var _data_provider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(82901);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


function makeDataProvider(parent, options) {
    return new _data_provider__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(parent, options);
}
function makeContextMenu(parent) {
    return new jodit_modules_context_menu_context_menu__WEBPACK_IMPORTED_MODULE_0__/* .ContextMenu */ .x(parent);
}


/***/ }),

/***/ 66636:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   _: function() { return /* binding */ deleteFile; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * Removes a file from the server
 * @private
 */
function deleteFile(fb, name, source) {
    return fb.dataProvider
        .fileRemove(fb.state.currentPath, name, source)
        .then(message => {
        fb.status(message || fb.i18n('File "%s" was deleted', name), true);
    })
        .catch(fb.status);
}


/***/ }),

/***/ 94996:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   X: function() { return /* binding */ loadItems; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * Loads a list of files and adds them to the state
 * @private
 */
function loadItems(fb) {
    fb.files.setMod('active', true);
    fb.files.setMod('loading', true);
    return fb.dataProvider
        .items(fb.state.currentPath, fb.state.currentSource, {
        sortBy: fb.state.sortBy,
        onlyImages: fb.state.onlyImages,
        filterWord: fb.state.filterWord
    })
        .then(resp => {
        if (resp) {
            fb.state.elements = resp;
            fb.state.activeElements = [];
        }
    })
        .catch(fb.status)
        .finally(() => fb.files.setMod('loading', false));
}


/***/ }),

/***/ 16612:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Q: function() { return /* binding */ loadTree; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46879);
/* harmony import */ var jodit_modules_file_browser_fetch_load_items__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(94996);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



/**
 * Loads a list of directories
 * @private
 */
function loadTree(fb) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__/* .__awaiter */ .mG)(this, void 0, void 0, function* () {
        fb.tree.setMod('active', true);
        jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.detach(fb.tree.container);
        const items = (0,jodit_modules_file_browser_fetch_load_items__WEBPACK_IMPORTED_MODULE_2__/* .loadItems */ .X)(fb);
        if (fb.o.showFoldersPanel) {
            fb.tree.setMod('loading', true);
            const tree = fb.dataProvider
                .tree(fb.state.currentPath, fb.state.currentSource)
                .then(resp => {
                fb.state.sources = resp;
            })
                .catch(fb.status)
                .finally(() => fb.tree.setMod('loading', false));
            return Promise.all([tree, items]);
        }
        fb.tree.setMod('active', false);
        return items;
    });
}


/***/ }),

/***/ 60301:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   f: function() { return /* binding */ FileBrowser; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(97582);
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_storage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(81039);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(76974);
/* harmony import */ var _factories__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(17331);
/* harmony import */ var _listeners_state_listeners__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(34423);
/* harmony import */ var _listeners_native_listeners__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(83007);
/* harmony import */ var _listeners_self_listeners__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(45711);
/* harmony import */ var _data_provider__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(82901);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(13666);
/* harmony import */ var _ui__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(40158);
/* harmony import */ var jodit_core_event_emitter__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(47981);
/* harmony import */ var _fetch_load_tree__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(16612);
/* harmony import */ var _fetch_load_items__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(94996);
/* harmony import */ var jodit_core_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(2581);
/* harmony import */ var jodit_core_traits_dlgs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(42297);
/* harmony import */ var jodit_core_view_view_with_toolbar__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(94530);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(35267);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * @module modules/file-browser
 */




















let FileBrowser = class FileBrowser extends jodit_core_view_view_with_toolbar__WEBPACK_IMPORTED_MODULE_15__/* .ViewWithToolbar */ .C {
    /** @override */
    className() {
        return 'FileBrowser';
    }
    get dataProvider() {
        return (0,_factories__WEBPACK_IMPORTED_MODULE_4__/* .makeDataProvider */ .S)(this, this.options);
    }
    // eslint-disable-next-line no-unused-vars
    onSelect(callback) {
        return () => {
            if (this.state.activeElements.length) {
                const files = [];
                const isImages = [];
                this.state.activeElements.forEach(elm => {
                    const url = elm.fileURL;
                    if (url) {
                        files.push(url);
                        isImages.push(elm.isImage || false);
                    }
                });
                this.close();
                const data = {
                    baseurl: '',
                    files,
                    isImages
                };
                if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isFunction)(callback)) {
                    callback(data);
                }
                this.close();
            }
            return false;
        };
    }
    get _dialog() {
        var _a;
        const dialog = this.dlg({
            minWidth: Math.min(700, screen.width),
            minHeight: 300,
            buttons: (_a = this.o.headerButtons) !== null && _a !== void 0 ? _a : ['fullsize', 'dialog.close']
        });
        ['beforeClose', 'afterClose', 'beforeOpen'].forEach(proxyEvent => dialog.events.on(dialog, proxyEvent, () => this.e.fire(proxyEvent)));
        dialog.setSize(this.o.width, this.o.height);
        return dialog;
    }
    /**
     * Container for set/get value
     */
    get storage() {
        return jodit_core_storage__WEBPACK_IMPORTED_MODULE_2__/* .Storage */ .Ke.makeStorage(Boolean(this.o.saveStateInStorage), this.componentName);
    }
    get isOpened() {
        return this._dialog.isOpened && this.browser.style.display !== 'none';
    }
    /**
     * It displays a message in the status bar of filebrowser
     *
     * @param success - true It will be shown a message light . If no option is specified ,
     * ßan error will be shown the red
     * @example
     * ```javascript
     * parent.filebrowser.status('There was an error uploading file', false);
     * ```
     */
    status(message, success) {
        if (!message || (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isAbort)(message)) {
            return;
        }
        if (!(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isString)(message)) {
            message = message.message;
        }
        if (!(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isString)(message) || !(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.trim)(message).length) {
            return;
        }
        this.message.message(message, success ? 'success' : 'error', this.o.howLongShowMsg);
    }
    /**
     * It opens a web browser window
     *
     * @param callback - The function that will be called after the file selection in the browser
     * @param onlyImages - Show only images
     * @example
     * ```javascript
     * var fb = new Jodit.modules.FileBrowser(parent);
     * fb.open(function (data) {
     *     var i;
     *     for (i = 0;i < data.files.length; i += 1) {
     *         parent.s.insertImage(data.baseurl + data.files[i]);
     *     }
     * });
     * ```
     */
    open(callback = this.o
        .defaultCallback, onlyImages = false) {
        this.state.onlyImages = onlyImages;
        return this.async
            .promise((resolve, reject) => {
            var _a;
            if (!this.o.items || !this.o.items.url) {
                throw (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.error)('Need set options.filebrowser.ajax.url');
            }
            let localTimeout = 0;
            this.e
                .off(this.files.container, 'dblclick')
                .on(this.files.container, 'dblclick', this.onSelect(callback))
                .on(this.files.container, 'touchstart', () => {
                const now = new Date().getTime();
                if (now - localTimeout <
                    jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.EMULATE_DBLCLICK_TIMEOUT) {
                    this.onSelect(callback)();
                }
                localTimeout = now;
            })
                .off('select.filebrowser')
                .on('select.filebrowser', this.onSelect(callback));
            const header = this.c.div();
            (_a = this.toolbar) === null || _a === void 0 ? void 0 : _a.build(this.__getButtons()).appendTo(header);
            this._dialog.open(this.browser, header);
            this.e.fire('sort.filebrowser', this.state.sortBy);
            (0,_fetch_load_tree__WEBPACK_IMPORTED_MODULE_12__/* .loadTree */ .Q)(this).then(resolve, reject);
        })
            .catch((e) => {
            if (!jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.IS_PROD) {
                throw e;
            }
        });
    }
    __getButtons() {
        var _a;
        const options = ((_a = this.o.buttons) !== null && _a !== void 0 ? _a : []);
        return options.filter((btn) => {
            if (!(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isString)(btn)) {
                return true;
            }
            switch (btn) {
                case 'filebrowser.upload':
                    return this.dataProvider.canI('FileUpload');
                case 'filebrowser.edit':
                    return (this.dataProvider.canI('ImageResize') ||
                        this.dataProvider.canI('ImageCrop'));
                case 'filebrowser.remove':
                    return this.dataProvider.canI('FileRemove');
            }
            return true;
        });
    }
    initUploader(editor) {
        var _a;
        const self = this, options = (_a = editor === null || editor === void 0 ? void 0 : editor.options) === null || _a === void 0 ? void 0 : _a.uploader, uploaderOptions = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.ConfigProto)(options || {}, jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.defaultOptions.uploader);
        const uploadHandler = () => (0,_fetch_load_items__WEBPACK_IMPORTED_MODULE_17__/* .loadItems */ .X)(this);
        self.uploader = self.getInstance('Uploader', uploaderOptions);
        self.uploader
            .setPath(self.state.currentPath)
            .setSource(self.state.currentSource)
            .bind(self.browser, uploadHandler, self.errorHandler);
        this.state.on(['change.currentPath', 'change.currentSource'], () => {
            this.uploader
                .setPath(this.state.currentPath)
                .setSource(this.state.currentSource);
        });
        self.e.on('bindUploader.filebrowser', (button) => {
            self.uploader.bind(button, uploadHandler, self.errorHandler);
        });
    }
    constructor(options) {
        super(options);
        this.browser = this.c.div(this.componentName);
        this.status_line = this.c.div(this.getFullElName('status'));
        this.tree = new _ui__WEBPACK_IMPORTED_MODULE_10__/* .FileBrowserTree */ .q(this);
        this.files = new _ui__WEBPACK_IMPORTED_MODULE_10__/* .FileBrowserFiles */ .s(this);
        this.state = (0,jodit_core_event_emitter__WEBPACK_IMPORTED_MODULE_11__/* .observable */ .LO)({
            currentPath: '',
            currentSource: _data_provider__WEBPACK_IMPORTED_MODULE_8__/* .DEFAULT_SOURCE_NAME */ .J,
            currentBaseUrl: '',
            activeElements: [],
            elements: [],
            sources: [],
            view: 'tiles',
            sortBy: 'changed-desc',
            filterWord: '',
            onlyImages: false
        });
        this.errorHandler = (resp) => {
            if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isAbort)(resp)) {
                return;
            }
            if (resp instanceof Error) {
                this.status(this.i18n(resp.message));
            }
            else {
                this.status(this.dataProvider.getMessage(resp));
            }
        };
        /**
         * Close dialog
         */
        this.close = () => {
            this._dialog.close();
        };
        this.attachEvents(options);
        const self = this;
        self.options = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.ConfigProto)(options || {}, jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.defaultOptions.filebrowser);
        self.browser.component = this;
        self.container = self.browser;
        if (self.o.showFoldersPanel) {
            self.browser.appendChild(self.tree.container);
        }
        self.browser.appendChild(self.files.container);
        self.browser.appendChild(self.status_line);
        _listeners_self_listeners__WEBPACK_IMPORTED_MODULE_7__/* .selfListeners */ .N.call(self);
        _listeners_native_listeners__WEBPACK_IMPORTED_MODULE_6__/* .nativeListeners */ .j9.call(self);
        _listeners_state_listeners__WEBPACK_IMPORTED_MODULE_5__/* .stateListeners */ .A.call(self);
        const keys = [
            'getLocalFileByUrl',
            'crop',
            'resize',
            'create',
            'fileMove',
            'folderMove',
            'fileRename',
            'folderRename',
            'fileRemove',
            'folderRemove',
            'folder',
            'items',
            'permissions'
        ];
        keys.forEach(key => {
            if (this.options[key] != null) {
                this.options[key] = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.ConfigProto)(this.options[key], this.o.ajax);
            }
        });
        const { storeView, storeSortBy, storeLastOpenedFolder } = this.o
            .saveStateInStorage || {
            storeLastOpenedFolder: false,
            storeView: false,
            storeSortBy: false
        };
        const view = storeView && this.storage.get('view');
        if (view && this.o.view == null) {
            self.state.view = view === 'list' ? 'list' : 'tiles';
        }
        else {
            self.state.view = self.o.view === 'list' ? 'list' : 'tiles';
        }
        self.files.setMod('view', self.state.view);
        const sortBy = storeSortBy && self.storage.get('sortBy');
        if (sortBy) {
            const parts = sortBy.split('-');
            self.state.sortBy = ['changed', 'name', 'size'].includes(parts[0])
                ? sortBy
                : 'changed-desc';
        }
        else {
            self.state.sortBy = self.o.sortBy || 'changed-desc';
        }
        if (storeLastOpenedFolder) {
            const currentPath = self.storage.get('currentPath'), currentSource = self.storage.get('currentSource');
            self.state.currentPath = currentPath !== null && currentPath !== void 0 ? currentPath : '';
            self.state.currentSource = currentSource !== null && currentSource !== void 0 ? currentSource : '';
        }
        self.initUploader(self);
        self.setStatus(jodit_core_component__WEBPACK_IMPORTED_MODULE_13__/* .STATUSES */ .n$.ready);
    }
    destruct() {
        if (this.isInDestruct) {
            return;
        }
        super.destruct();
        this._dialog.destruct();
        this.events && this.e.off('.filebrowser');
        this.uploader && this.uploader.destruct();
    }
};
(0,tslib__WEBPACK_IMPORTED_MODULE_18__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_9__.cache
], FileBrowser.prototype, "dataProvider", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_18__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_9__.cache
], FileBrowser.prototype, "_dialog", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_18__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_9__.cache
], FileBrowser.prototype, "storage", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_18__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_9__.autobind
], FileBrowser.prototype, "status", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_18__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_9__.autobind
], FileBrowser.prototype, "open", null);
FileBrowser = (0,tslib__WEBPACK_IMPORTED_MODULE_18__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_9__.derive)(jodit_core_traits_dlgs__WEBPACK_IMPORTED_MODULE_14__/* .Dlgs */ .l)
], FileBrowser);



/***/ }),

/***/ 90033:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   f: function() { return /* reexport safe */ _file_browser__WEBPACK_IMPORTED_MODULE_0__.f; }
/* harmony export */ });
/* harmony import */ var _file_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60301);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * [[include:modules/file-browser/README.md]]
 * @packageDocumentation
 * @module modules/file-browser
 */



/***/ }),

/***/ 83007:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   iU: function() { return /* binding */ elementToItem; },
/* harmony export */   j9: function() { return /* binding */ nativeListeners; },
/* harmony export */   rV: function() { return /* binding */ getItem; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(46879);
/* harmony import */ var jodit_modules_file_browser_builders_context_menu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(96962);
/* harmony import */ var jodit_modules_file_browser_builders_elements_map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(76068);
/* harmony import */ var jodit_modules_file_browser_fetch_load_tree__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(16612);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */





/**
 * @private
 */
const getItem = (node, root, tag = 'a') => jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.closest(node, elm => jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTag(elm, tag), root);
/**
 * @private
 */
const elementToItem = (elm, elementsMap) => {
    const { key } = elm.dataset, { item } = elementsMap[key || ''];
    return item;
};
/**
 * @private
 */
function nativeListeners() {
    let dragElement = false;
    const elmMap = (0,jodit_modules_file_browser_builders_elements_map__WEBPACK_IMPORTED_MODULE_3__/* .elementsMap */ .d)(this);
    const self = this;
    self.e
        .on(self.tree.container, 'dragstart', (e) => {
        const a = getItem(e.target, self.container);
        if (!a) {
            return;
        }
        if (self.o.moveFolder) {
            dragElement = a;
        }
    })
        .on(self.tree.container, 'drop', (e) => {
        if ((self.o.moveFile || self.o.moveFolder) && dragElement) {
            let path = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.attr)(dragElement, '-path') || '';
            // move folder
            if (!self.o.moveFolder &&
                dragElement.classList.contains(this.tree.getFullElName('item'))) {
                return false;
            }
            // move file
            if (dragElement.classList.contains(this.files.getFullElName('item'))) {
                path += (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.attr)(dragElement, '-name');
                if (!self.o.moveFile) {
                    return false;
                }
            }
            const a = getItem(e.target, self.container);
            if (!a) {
                return;
            }
            self.dataProvider
                .move(path, (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.attr)(a, '-path') || '', (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.attr)(a, '-source') || '', dragElement.classList.contains(this.files.getFullElName('item')))
                .then(() => (0,jodit_modules_file_browser_fetch_load_tree__WEBPACK_IMPORTED_MODULE_4__/* .loadTree */ .Q)(this))
                .catch(self.status);
            dragElement = false;
        }
    })
        .on(self.files.container, 'contextmenu', (0,jodit_modules_file_browser_builders_context_menu__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(self))
        .on(self.files.container, 'click', (e) => {
        if (!(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.ctrlKey)(e)) {
            this.state.activeElements = [];
        }
    })
        .on(self.files.container, 'click', (e) => {
        const a = getItem(e.target, self.container);
        if (!a) {
            return;
        }
        const item = elementToItem(a, elmMap);
        if (!item) {
            return;
        }
        if (!(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.ctrlKey)(e)) {
            self.state.activeElements = [item];
        }
        else {
            self.state.activeElements = [
                ...self.state.activeElements,
                item
            ];
        }
        e.stopPropagation();
        return false;
    })
        .on(self.files.container, 'dragstart', (e) => {
        if (self.o.moveFile) {
            const a = getItem(e.target, self.container);
            if (!a) {
                return;
            }
            dragElement = a;
        }
    })
        .on(self.container, 'drop', (e) => e.preventDefault());
}


/***/ }),

/***/ 45711:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   N: function() { return /* binding */ selfListeners; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(78157);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76974);
/* harmony import */ var jodit_modules_image_editor_image_editor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(59210);
/* harmony import */ var jodit_modules_file_browser_data_provider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(82901);
/* harmony import */ var jodit_modules_file_browser_fetch_load_tree__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(16612);
/* harmony import */ var jodit_modules_file_browser_fetch_load_items__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(94996);
/* harmony import */ var jodit_modules_file_browser_fetch_delete_file__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(66636);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */







/**
 * @private
 */
function selfListeners() {
    const state = this.state, dp = this.dataProvider, self = this;
    self.e
        .on('view.filebrowser', (view) => {
        if (view !== state.view) {
            state.view = view;
        }
    })
        .on('sort.filebrowser', (value) => {
        if (value !== state.sortBy) {
            state.sortBy = value;
            (0,jodit_modules_file_browser_fetch_load_items__WEBPACK_IMPORTED_MODULE_5__/* .loadItems */ .X)(self);
        }
    })
        .on('filter.filebrowser', (value) => {
        if (value !== state.filterWord) {
            state.filterWord = value;
            (0,jodit_modules_file_browser_fetch_load_items__WEBPACK_IMPORTED_MODULE_5__/* .loadItems */ .X)(self);
        }
    })
        .on('openFolder.filebrowser', (data) => {
        let path;
        if (data.name === '..') {
            path = data.path
                .split('/')
                .filter((p) => p.length)
                .slice(0, -1)
                .join('/');
        }
        else {
            path = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.normalizePath)(data.path, data.name);
        }
        self.state.currentPath = path;
        self.state.currentSource =
            data.name === '.' ? jodit_modules_file_browser_data_provider__WEBPACK_IMPORTED_MODULE_3__/* .DEFAULT_SOURCE_NAME */ .J : data.source;
    })
        .on('removeFolder.filebrowser', (data) => {
        self.confirm('Are you sure?', 'Delete', (yes) => {
            if (yes) {
                dp.folderRemove(data.path, data.name, data.source)
                    .then(message => {
                    self.status(message, true);
                    return (0,jodit_modules_file_browser_fetch_load_tree__WEBPACK_IMPORTED_MODULE_4__/* .loadTree */ .Q)(self);
                })
                    .catch(self.status);
            }
        });
    })
        .on('renameFolder.filebrowser', (data) => {
        self.prompt('Enter new name', 'Rename', (newName) => {
            if (!(0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isValidName */ .r1)(newName)) {
                self.status(self.i18n('Enter new name'));
                return false;
            }
            dp.folderRename(data.path, data.name, newName, data.source)
                .then(message => {
                self.state.activeElements = [];
                self.status(message, true);
                return (0,jodit_modules_file_browser_fetch_load_tree__WEBPACK_IMPORTED_MODULE_4__/* .loadTree */ .Q)(self);
            })
                .catch(self.status);
            return;
        }, 'type name', data.name);
    })
        .on('addFolder.filebrowser', (data) => {
        self.prompt('Enter Directory name', 'Create directory', (name) => {
            dp.createFolder(name, data.path, data.source)
                .then(() => (0,jodit_modules_file_browser_fetch_load_tree__WEBPACK_IMPORTED_MODULE_4__/* .loadTree */ .Q)(self))
                .catch(self.status);
        }, 'type name');
    })
        .on('fileRemove.filebrowser', () => {
        if (self.state.activeElements.length) {
            self.confirm('Are you sure?', '', (yes) => {
                if (yes) {
                    const promises = [];
                    self.state.activeElements.forEach(item => {
                        promises.push((0,jodit_modules_file_browser_fetch_delete_file__WEBPACK_IMPORTED_MODULE_6__/* .deleteFile */ ._)(self, item.file || item.name || '', item.sourceName));
                    });
                    self.state.activeElements = [];
                    Promise.all(promises).then(() => (0,jodit_modules_file_browser_fetch_load_tree__WEBPACK_IMPORTED_MODULE_4__/* .loadTree */ .Q)(self).catch(self.status), self.status);
                }
            });
        }
    })
        .on('edit.filebrowser', () => {
        if (self.state.activeElements.length === 1) {
            const [file] = this.state.activeElements;
            jodit_modules_image_editor_image_editor__WEBPACK_IMPORTED_MODULE_2__/* .openImageEditor */ .r.call(self, file.fileURL, file.file || '', file.path, file.sourceName);
        }
    })
        .on('fileRename.filebrowser', (name, path, source) => {
        if (self.state.activeElements.length === 1) {
            self.prompt('Enter new name', 'Rename', (newName) => {
                if (!(0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isValidName */ .r1)(newName)) {
                    self.status(self.i18n('Enter new name'));
                    return false;
                }
                dp.fileRename(path, name, newName, source)
                    .then(message => {
                    self.state.activeElements = [];
                    self.status(message, true);
                    (0,jodit_modules_file_browser_fetch_load_items__WEBPACK_IMPORTED_MODULE_5__/* .loadItems */ .X)(self);
                })
                    .catch(self.status);
                return;
            }, 'type name', name);
        }
    })
        .on('update.filebrowser', () => {
        (0,jodit_modules_file_browser_fetch_load_tree__WEBPACK_IMPORTED_MODULE_4__/* .loadTree */ .Q)(this).then(this.status, this.status);
    });
}


/***/ }),

/***/ 34423:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: function() { return /* binding */ stateListeners; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_helpers_normalize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(12368);
/* harmony import */ var jodit_core_ui_button_button_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(22003);
/* harmony import */ var jodit_modules_file_browser_builders_elements_map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(76068);
/* harmony import */ var jodit_modules_file_browser_fetch_load_tree__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(16612);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */





const DEFAULT_SOURCE_NAME = 'default';
/**
 * Convert state to view
 * @private
 */
function stateListeners() {
    const elmMap = (0,jodit_modules_file_browser_builders_elements_map__WEBPACK_IMPORTED_MODULE_3__/* .elementsMap */ .d)(this);
    const { state, files, create, options } = this, getDomElement = (item) => {
        const key = item.uniqueHashKey;
        if (elmMap[key]) {
            return elmMap[key].elm;
        }
        const elm = create.fromHTML(options.getThumbTemplate.call(this, item, item.source, item.sourceName.toString()));
        elm.dataset.key = key;
        elmMap[key] = {
            item,
            elm
        };
        return elmMap[key].elm;
    };
    state
        .on(['change.currentPath', 'change.currentSource'], this.async.debounce(() => {
        if (this.o.saveStateInStorage &&
            this.o.saveStateInStorage.storeLastOpenedFolder) {
            this.storage
                .set('currentPath', this.state.currentPath)
                .set('currentSource', this.state.currentSource);
        }
        (0,jodit_modules_file_browser_fetch_load_tree__WEBPACK_IMPORTED_MODULE_4__/* .loadTree */ .Q)(this).catch(this.status);
    }, this.defaultTimeout))
        .on('beforeChange.activeElements', () => {
        state.activeElements.forEach(item => {
            const key = item.uniqueHashKey, { elm } = elmMap[key];
            elm &&
                elm.classList.remove(files.getFullElName('item', 'active', true));
        });
    })
        .on('change.activeElements', () => {
        this.e.fire('changeSelection');
        state.activeElements.forEach(item => {
            const key = item.uniqueHashKey, { elm } = elmMap[key];
            elm &&
                elm.classList.add(files.getFullElName('item', 'active', true));
        });
    })
        .on('change.view', () => {
        files.setMod('view', state.view);
        if (this.o.saveStateInStorage &&
            this.o.saveStateInStorage.storeView) {
            this.storage.set('view', state.view);
        }
    })
        .on('change.sortBy', () => {
        if (this.o.saveStateInStorage &&
            this.o.saveStateInStorage.storeSortBy) {
            this.storage.set('sortBy', state.sortBy);
        }
    })
        .on('change.elements', this.async.debounce(() => {
        jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.detach(files.container);
        if (state.elements.length) {
            state.elements.forEach(item => {
                this.files.container.appendChild(getDomElement(item));
            });
        }
        else {
            files.container.appendChild(create.div(this.componentName + '_no-files_true', this.i18n('There are no files')));
        }
    }, this.defaultTimeout))
        .on('change.sources', this.async.debounce(() => {
        jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.detach(this.tree.container);
        state.sources.forEach(source => {
            const sourceName = source.name;
            if (sourceName && sourceName !== DEFAULT_SOURCE_NAME) {
                this.tree.container.appendChild(create.div(this.tree.getFullElName('source-title'), sourceName));
            }
            source.folders.forEach((name) => {
                const folderElm = create.a(this.tree.getFullElName('item'), {
                    draggable: 'draggable',
                    href: '#',
                    'data-path': (0,jodit_core_helpers_normalize__WEBPACK_IMPORTED_MODULE_1__/* .normalizePath */ .AH)(source.path, name + '/'),
                    'data-name': name,
                    'data-source': sourceName,
                    'data-source-path': source.path
                }, create.span(this.tree.getFullElName('item-title'), name));
                const action = (actionName) => (e) => {
                    this.e.fire(`${actionName}.filebrowser`, {
                        name,
                        path: (0,jodit_core_helpers_normalize__WEBPACK_IMPORTED_MODULE_1__/* .normalizePath */ .AH)(source.path + '/'),
                        source: sourceName
                    });
                    e.stopPropagation();
                    e.preventDefault();
                };
                this.e.on(folderElm, 'click', action('openFolder'));
                this.tree.container.appendChild(folderElm);
                if (name === '..' || name === '.') {
                    return;
                }
                if (options.renameFolder &&
                    this.dataProvider.canI('FolderRename')) {
                    const btn = (0,jodit_core_ui_button_button_button__WEBPACK_IMPORTED_MODULE_2__/* .Button */ .zx)(this, {
                        icon: { name: 'pencil' },
                        name: 'rename',
                        tooltip: 'Rename',
                        size: 'tiny'
                    });
                    btn.onAction(action('renameFolder'));
                    folderElm.appendChild(btn.container);
                }
                if (options.deleteFolder &&
                    this.dataProvider.canI('FolderRemove')) {
                    const btn = (0,jodit_core_ui_button_button_button__WEBPACK_IMPORTED_MODULE_2__/* .Button */ .zx)(this, {
                        icon: { name: 'cancel' },
                        name: 'remove',
                        tooltip: 'Delete',
                        size: 'tiny'
                    });
                    btn.onAction(action('removeFolder'));
                    folderElm.appendChild(btn.container);
                }
            });
            if (options.createNewFolder &&
                this.dataProvider.canI('FolderCreate')) {
                const button = (0,jodit_core_ui_button_button_button__WEBPACK_IMPORTED_MODULE_2__/* .Button */ .zx)(this, 'plus', 'Add folder', 'secondary');
                button.onAction(() => {
                    this.e.fire('addFolder', {
                        path: (0,jodit_core_helpers_normalize__WEBPACK_IMPORTED_MODULE_1__/* .normalizePath */ .AH)(source.path + '/'),
                        source: sourceName
                    });
                });
                this.tree.append(button);
            }
        });
    }, this.defaultTimeout));
}


/***/ }),

/***/ 32163:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   s: function() { return /* binding */ FileBrowserFiles; }
/* harmony export */ });
/* harmony import */ var jodit_core_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(14712);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


class FileBrowserFiles extends jodit_core_ui__WEBPACK_IMPORTED_MODULE_0__/* .UIGroup */ .qe {
    className() {
        return 'FileBrowserFiles';
    }
}


/***/ }),

/***/ 40158:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   q: function() { return /* reexport safe */ _tree_tree__WEBPACK_IMPORTED_MODULE_1__.q; },
/* harmony export */   s: function() { return /* reexport safe */ _files_files__WEBPACK_IMPORTED_MODULE_0__.s; }
/* harmony export */ });
/* harmony import */ var _files_files__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(32163);
/* harmony import */ var _tree_tree__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(57285);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module modules/file-browser
 */




/***/ }),

/***/ 57285:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   q: function() { return /* binding */ FileBrowserTree; }
/* harmony export */ });
/* harmony import */ var jodit_core_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(14712);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


class FileBrowserTree extends jodit_core_ui__WEBPACK_IMPORTED_MODULE_0__/* .UIGroup */ .qe {
    className() {
        return 'FileBrowserTree';
    }
}


/***/ }),

/***/ 56653:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   m: function() { return /* binding */ Command; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
class Command {
    undo() {
        this.history.snapshot.restore(this.oldValue);
    }
    redo() {
        this.history.snapshot.restore(this.newValue);
    }
    constructor(oldValue, newValue, history, tick) {
        this.oldValue = oldValue;
        this.newValue = newValue;
        this.history = history;
        this.tick = tick;
    }
}


/***/ }),

/***/ 79737:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: function() { return /* binding */ History; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(97582);
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2581);
/* harmony import */ var _snapshot__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(53771);
/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(1027);
/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(56653);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(13666);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */







jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.history = {
    enable: true,
    maxHistoryLength: Infinity,
    timeout: 1000
};
/**
 * The module monitors the status of the editor and creates / deletes the required number of Undo / Redo shots .
 */
class History extends jodit_core_component__WEBPACK_IMPORTED_MODULE_1__/* .ViewComponent */ .Hr {
    /** @override */
    className() {
        return 'History';
    }
    /**
     * Return state of the WYSIWYG editor to step back
     */
    redo() {
        if (this.__stack.redo()) {
            this.startValue = this.snapshot.make();
            this.fireChangeStack();
        }
    }
    canRedo() {
        return this.__stack.canRedo();
    }
    /**
     * Return the state of the WYSIWYG editor to step forward
     */
    undo() {
        if (this.__stack.undo()) {
            this.startValue = this.snapshot.make();
            this.fireChangeStack();
        }
    }
    canUndo() {
        return this.__stack.canUndo();
    }
    clear() {
        this.startValue = this.snapshot.make();
        this.__stack.clear();
        this.fireChangeStack();
    }
    get length() {
        return this.__stack.length;
    }
    get startValue() {
        return this.__startValue;
    }
    set startValue(value) {
        this.__startValue = value;
    }
    constructor(editor, stack = new _stack__WEBPACK_IMPORTED_MODULE_4__/* .Stack */ .K(editor.o.history.maxHistoryLength), snapshot = new _snapshot__WEBPACK_IMPORTED_MODULE_2__/* .Snapshot */ .a(editor)) {
        super(editor);
        this.updateTick = 0;
        this.__stack = stack;
        this.snapshot = snapshot;
        if (editor.o.history.enable) {
            editor.e.on('afterAddPlace.history', () => {
                if (this.isInDestruct) {
                    return;
                }
                this.startValue = this.snapshot.make();
                editor.events
                    // save selection
                    .on('internalChange internalUpdate', () => {
                    this.startValue = this.snapshot.make();
                })
                    .on(editor.editor, [
                    'changeSelection',
                    'selectionstart',
                    'selectionchange',
                    'mousedown',
                    'mouseup',
                    'keydown',
                    'keyup'
                ]
                    .map(f => f + '.history')
                    .join(' '), () => {
                    if (this.startValue.html ===
                        this.j.getNativeEditorValue()) {
                        this.startValue = this.snapshot.make();
                    }
                })
                    .on(this, 'change.history', this.onChange);
            });
        }
    }
    /**
     * Update change counter
     * @internal
     */
    __upTick() {
        this.updateTick += 1;
    }
    /**
     * Push new command in stack on some changes
     */
    onChange() {
        this.__processChanges();
    }
    /**
     * @internal
     */
    __processChanges() {
        if (this.snapshot.isBlocked || !this.j.o.history.enable) {
            return;
        }
        this.updateStack();
    }
    /**
     * Update history stack
     */
    updateStack(replace = false) {
        const newValue = this.snapshot.make();
        if (!_snapshot__WEBPACK_IMPORTED_MODULE_2__/* .Snapshot */ .a.equal(newValue, this.startValue)) {
            const newCommand = new _command__WEBPACK_IMPORTED_MODULE_5__/* .Command */ .m(this.startValue, newValue, this, this.updateTick);
            if (replace) {
                const command = this.__stack.current();
                if (command && this.updateTick === command.tick) {
                    this.__stack.replace(newCommand);
                }
            }
            else {
                this.__stack.push(newCommand);
            }
            this.startValue = newValue;
            this.fireChangeStack();
        }
    }
    fireChangeStack() {
        var _a;
        this.j && !this.j.isInDestruct && ((_a = this.j.events) === null || _a === void 0 ? void 0 : _a.fire('changeStack'));
    }
    destruct() {
        if (this.isInDestruct) {
            return;
        }
        if (this.j.events) {
            this.j.e.off('.history');
        }
        this.snapshot.destruct();
        super.destruct();
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_6__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__.debounce)()
], History.prototype, "onChange", null);


/***/ }),

/***/ 53771:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: function() { return /* binding */ Snapshot; }
/* harmony export */ });
/* harmony import */ var jodit_core_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2581);
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62924);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



/**
 * Module for creating snapshot of editor which includes html content and the current selection
 */
class Snapshot extends jodit_core_component__WEBPACK_IMPORTED_MODULE_0__/* .ViewComponent */ .Hr {
    constructor() {
        super(...arguments);
        this.__isBlocked = false;
    }
    /** @override */
    className() {
        return 'Snapshot';
    }
    /**
     * Compare two snapshotes, if and htmls and selections match, then return true
     *
     * @param first - the first snapshote
     * @param second - second shot
     */
    static equal(first, second) {
        return (first.html === second.html &&
            JSON.stringify(first.range) === JSON.stringify(second.range));
    }
    /**
     * Calc count element before some node in parentNode. All text nodes are joined
     */
    static countNodesBeforeInParent(elm) {
        if (!elm.parentNode) {
            return 0;
        }
        const elms = elm.parentNode.childNodes;
        let count = 0, previous = null;
        for (let j = 0; j < elms.length; j += 1) {
            if (previous &&
                !this.isIgnoredNode(elms[j]) &&
                !(jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(previous) && jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(elms[j]))) {
                count += 1;
            }
            if (elms[j] === elm) {
                return count;
            }
            previous = elms[j];
        }
        return 0;
    }
    /**
     * Calc normal offset in joined text nodes
     */
    static strokeOffset(elm, offset) {
        while (jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(elm)) {
            elm = elm.previousSibling;
            if (jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(elm) && elm.nodeValue) {
                offset += elm.nodeValue.length;
            }
        }
        return offset;
    }
    /**
     * Calc whole hierarchy path before some element in editor's tree
     */
    calcHierarchyLadder(elm) {
        const counts = [];
        if (!elm || !elm.parentNode || !jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isOrContains(this.j.editor, elm)) {
            return [];
        }
        while (elm && elm !== this.j.editor) {
            if (elm && !Snapshot.isIgnoredNode(elm)) {
                counts.push(Snapshot.countNodesBeforeInParent(elm));
            }
            elm = elm.parentNode;
        }
        return counts.reverse();
    }
    getElementByLadder(ladder) {
        let n = this.j.editor, i;
        for (i = 0; n && i < ladder.length; i += 1) {
            n = n.childNodes[ladder[i]];
        }
        return n;
    }
    get isBlocked() {
        return this.__isBlocked;
    }
    __block(enable) {
        this.__isBlocked = enable;
    }
    transaction(changes) {
        this.__block(true);
        try {
            changes();
        }
        catch (e) {
            if (!jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.IS_PROD) {
                throw e;
            }
        }
        this.__block(false);
    }
    /**
     * Creates object a snapshot of editor: html and the current selection. Current selection calculate by
     * offset by start document
     * \{html: string, range: \{startContainer: int, startOffset: int, endContainer: int, endOffset: int\}\} or
     * \{html: string\} without selection
     */
    make() {
        const snapshot = {
            html: '',
            range: {
                startContainer: [],
                startOffset: 0,
                endContainer: [],
                endOffset: 0
            }
        };
        snapshot.html = this.removeJoditSelection(this.j.editor);
        const sel = this.j.s.sel;
        if (sel && sel.rangeCount) {
            const range = sel.getRangeAt(0), startContainer = this.calcHierarchyLadder(range.startContainer), endContainer = this.calcHierarchyLadder(range.endContainer);
            let startOffset = Snapshot.strokeOffset(range.startContainer, range.startOffset), endOffset = Snapshot.strokeOffset(range.endContainer, range.endOffset);
            if (!startContainer.length &&
                range.startContainer !== this.j.editor) {
                startOffset = 0;
            }
            if (!endContainer.length && range.endContainer !== this.j.editor) {
                endOffset = 0;
            }
            snapshot.range = {
                startContainer,
                startOffset,
                endContainer,
                endOffset
            };
        }
        return snapshot;
    }
    /**
     * Restores the state of the editor of the snapshot. Rebounding is not only html but selected text
     *
     * @param snapshot - snapshot of editor resulting from the `[[Snapshot.make]]` method
     * @see make
     */
    restore(snapshot) {
        this.transaction(() => {
            const scroll = this.storeScrollState();
            const value = this.j.getNativeEditorValue();
            if (value !== snapshot.html) {
                this.j.value = snapshot.html;
            }
            this.restoreOnlySelection(snapshot);
            this.restoreScrollState(scroll);
        });
    }
    storeScrollState() {
        return [this.j.ow.scrollY, this.j.editor.scrollTop];
    }
    restoreScrollState(scrolls) {
        const { j } = this, { ow } = j;
        ow.scrollTo(ow.scrollX, scrolls[0]);
        j.editor.scrollTop = scrolls[1];
    }
    /**
     * Restore selection from snapshot
     *
     * @param snapshot - snapshot of editor resulting from the [[Snapshot.make]] method
     * @see make
     */
    restoreOnlySelection(snapshot) {
        try {
            if (snapshot.range) {
                const range = this.j.ed.createRange();
                range.setStart(this.getElementByLadder(snapshot.range.startContainer), snapshot.range.startOffset);
                range.setEnd(this.getElementByLadder(snapshot.range.endContainer), snapshot.range.endOffset);
                this.j.s.selectRange(range);
            }
        }
        catch (__ignore) {
            this.j.editor.lastChild &&
                this.j.s.setCursorAfter(this.j.editor.lastChild);
            if (!jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.IS_PROD) {
                // tslint:disable-next-line:no-console
                console.warn('Broken snapshot', __ignore);
            }
        }
    }
    destruct() {
        this.__block(false);
        super.destruct();
    }
    static isIgnoredNode(node) {
        return (jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(node) && !node.nodeValue) || jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTemporary(node);
    }
    removeJoditSelection(node) {
        const clone = node.cloneNode(true);
        clone.querySelectorAll(`[${jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.TEMP_ATTR}]`).forEach(jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.unwrap);
        return clone.innerHTML;
    }
}


/***/ }),

/***/ 1027:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   K: function() { return /* binding */ Stack; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
class Stack {
    constructor(size) {
        this.size = size;
        this.commands = [];
        this.stackPosition = -1;
    }
    get length() {
        return this.commands.length;
    }
    clearRedo() {
        this.commands.length = this.stackPosition + 1;
    }
    clear() {
        this.commands.length = 0;
        this.stackPosition = -1;
    }
    push(command) {
        this.clearRedo();
        this.commands.push(command);
        this.stackPosition += 1;
        if (this.commands.length > this.size) {
            this.commands.shift();
            this.stackPosition -= 1;
        }
    }
    replace(command) {
        this.commands[this.stackPosition] = command;
    }
    current() {
        return this.commands[this.stackPosition];
    }
    undo() {
        if (this.canUndo()) {
            if (this.commands[this.stackPosition]) {
                this.commands[this.stackPosition].undo();
            }
            this.stackPosition -= 1;
            return true;
        }
        return false;
    }
    redo() {
        if (this.canRedo()) {
            this.stackPosition += 1;
            if (this.commands[this.stackPosition]) {
                this.commands[this.stackPosition].redo();
            }
            return true;
        }
        return false;
    }
    canUndo() {
        return this.stackPosition >= 0;
    }
    canRedo() {
        return this.stackPosition < this.commands.length - 1;
    }
}


/***/ }),

/***/ 55344:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(30052);
/* harmony import */ var _icons_crop_svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3125);
/* harmony import */ var _icons_crop_svg__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_icons_crop_svg__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _icons_resize_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(54209);
/* harmony import */ var _icons_resize_svg__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_icons_resize_svg__WEBPACK_IMPORTED_MODULE_3__);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.imageeditor = {
    min_width: 20,
    min_height: 20,
    closeAfterSave: false,
    width: '85%',
    height: '85%',
    crop: true,
    resize: true,
    resizeUseRatio: true,
    resizeMinWidth: 20,
    resizeMinHeight: 20,
    cropUseRatio: true,
    cropDefaultWidth: '70%',
    cropDefaultHeight: '70%'
};
jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_1__/* .Icon */ .J.set('crop', (_icons_crop_svg__WEBPACK_IMPORTED_MODULE_2___default())).set('resize', (_icons_resize_svg__WEBPACK_IMPORTED_MODULE_3___default()));


/***/ }),

/***/ 59210:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   r: function() { return /* binding */ openImageEditor; },
/* harmony export */   v: function() { return /* binding */ ImageEditor; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(97582);
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2581);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_ui_button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(64856);
/* harmony import */ var _templates_form__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(4521);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(13666);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(55344);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
var ImageEditor_1;

/**
 * [[include:modules/image-editor/README.md]]
 * @packageDocumentation
 * @module modules/image-editor
 */









const jie = 'jodit-image-editor';
const TABS = {
    resize: 'resize',
    crop: 'crop'
};
/**
 * The module allows you to edit the image: resize or cut any part of it
 *
 */
let ImageEditor = ImageEditor_1 = class ImageEditor extends jodit_core_component__WEBPACK_IMPORTED_MODULE_1__/* .ViewComponent */ .Hr {
    /** @override */
    className() {
        return 'ImageEditor';
    }
    get o() {
        return this.options;
    }
    /**
     * Hide image editor
     */
    hide() {
        this._dialog.close();
    }
    /**
     * Open image editor
     * @example
     * ```javascript
     * const jodit = Jodit.make('.editor', {
     *		 imageeditor: {
     *				 crop: false,
     *				 closeAfterSave: true,
     *				 width: 500
     *		 }
     * });
     * jodit.imageeditor.open('https://xdsoft.net/jodit/images/test.png', function (name, data, success, failed) {
     *		 var img = jodit.node.c('img');
     *		 img.setAttribute('src', 'https://xdsoft.net/jodit/images/test.png');
     *		 if (box.action !== 'resize') {
     *					return failed('Sorry it is work only in resize mode. For croping use FileBrowser');
     *		 }
     *		 img.style.width = data.w;
     *		 img.style.height = data.h;
     *		 jodit.s.insertNode(img);
     *		 success();
     * });
     * ```
     */
    open(url, save) {
        return this.j.async.promise((resolve) => {
            const timestamp = new Date().getTime();
            this.image = this.j.c.element('img');
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.$$)('img,.jodit-icon_loader', this.resize_box).forEach(jodit_core_dom__WEBPACK_IMPORTED_MODULE_3__/* .Dom */ .i.safeRemove);
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.$$)('img,.jodit-icon_loader', this.crop_box).forEach(jodit_core_dom__WEBPACK_IMPORTED_MODULE_3__/* .Dom */ .i.safeRemove);
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css)(this.cropHandler, 'background', 'transparent');
            this.onSave = save;
            this.resize_box.appendChild(this.j.c.element('i', { class: 'jodit-icon_loader' }));
            this.crop_box.appendChild(this.j.c.element('i', { class: 'jodit-icon_loader' }));
            if (/\?/.test(url)) {
                url += '&_tst=' + timestamp;
            }
            else {
                url += '?_tst=' + timestamp;
            }
            this.image.setAttribute('src', url);
            this._dialog.open();
            const { widthInput, heightInput } = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.refs)(this.editor);
            const onload = () => {
                if (this.isDestructed) {
                    return;
                }
                this.image.removeEventListener('load', onload);
                this.naturalWidth = this.image.naturalWidth;
                this.naturalHeight = this.image.naturalHeight;
                widthInput.value = this.naturalWidth.toString();
                heightInput.value = this.naturalHeight.toString();
                this.ratio = this.naturalWidth / this.naturalHeight;
                this.resize_box.appendChild(this.image);
                this.cropImage = this.image.cloneNode(true);
                this.crop_box.appendChild(this.cropImage);
                jodit_core_dom__WEBPACK_IMPORTED_MODULE_3__/* .Dom */ .i.safeRemove.apply(null, (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.$$)('.jodit-icon_loader', this.editor));
                if (this.activeTab === TABS.crop) {
                    this.showCrop();
                }
                this.j.e.fire(this.resizeHandler, 'updatesize');
                this.j.e.fire(this.cropHandler, 'updatesize');
                this._dialog.setPosition();
                this.j.e.fire('afterImageEditor');
                resolve(this._dialog);
            };
            this.image.addEventListener('load', onload);
            if (this.image.complete) {
                onload();
            }
        });
    }
    onTitleModeClick(e) {
        const self = this, title = e.target;
        const slide = title === null || title === void 0 ? void 0 : title.parentElement;
        if (!slide) {
            return;
        }
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.$$)(`.${jie}__slider,.${jie}__area`, self.editor).forEach(elm => elm.classList.remove(`${jie}_active`));
        slide.classList.add(`${jie}_active`);
        this.activeTab = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.attr)(slide, '-area') || TABS.resize;
        const tab = self.editor.querySelector(`.${jie}__area.${jie}__area_` + self.activeTab);
        if (tab) {
            tab.classList.add(`${jie}_active`);
        }
        if (self.activeTab === TABS.crop) {
            self.showCrop();
        }
    }
    onChangeSizeInput(e) {
        const self = this, input = e.target, { widthInput, heightInput } = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.refs)(this.editor), isWidth = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.attr)(input, 'data-ref') === 'widthInput', x = parseInt(input.value, 10), minX = isWidth ? self.o.min_width : self.o.min_height, minY = !isWidth ? self.o.min_width : self.o.min_height;
        let y;
        if (x > minX) {
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css)(self.image, isWidth ? 'width' : 'height', x);
            if (self.resizeUseRatio) {
                y = isWidth
                    ? Math.round(x / self.ratio)
                    : Math.round(x * self.ratio);
                if (y > minY) {
                    (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css)(self.image, !isWidth ? 'width' : 'height', y);
                    if (isWidth) {
                        heightInput.value = y.toString();
                    }
                    else {
                        widthInput.value = y.toString();
                    }
                }
            }
        }
        this.j.e.fire(self.resizeHandler, 'updatesize');
    }
    onResizeHandleMouseDown(e) {
        const self = this;
        self.target = e.target;
        e.preventDefault();
        e.stopImmediatePropagation();
        self.clicked = true;
        self.start_x = e.clientX;
        self.start_y = e.clientY;
        if (self.activeTab === TABS.crop) {
            self.top_x = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css)(self.cropHandler, 'left');
            self.top_y = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css)(self.cropHandler, 'top');
            self.width = self.cropHandler.offsetWidth;
            self.height = self.cropHandler.offsetHeight;
        }
        else {
            self.width = self.image.offsetWidth;
            self.height = self.image.offsetHeight;
        }
        self.j.e
            .on(this.j.ow, 'mousemove', this.onGlobalMouseMove)
            .one(this.j.ow, 'mouseup', this.onGlobalMouseUp);
    }
    onGlobalMouseUp(e) {
        if (this.clicked) {
            this.clicked = false;
            e.stopImmediatePropagation();
            this.j.e.off(this.j.ow, 'mousemove', this.onGlobalMouseMove);
        }
    }
    onGlobalMouseMove(e) {
        const self = this;
        if (!self.clicked) {
            return;
        }
        const { widthInput, heightInput } = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.refs)(this.editor);
        self.diff_x = e.clientX - self.start_x;
        self.diff_y = e.clientY - self.start_y;
        if ((self.activeTab === TABS.resize && self.resizeUseRatio) ||
            (self.activeTab === TABS.crop && self.cropUseRatio)) {
            if (self.diff_x) {
                self.new_w = self.width + self.diff_x;
                self.new_h = Math.round(self.new_w / self.ratio);
            }
            else {
                self.new_h = self.height + self.diff_y;
                self.new_w = Math.round(self.new_h * self.ratio);
            }
        }
        else {
            self.new_w = self.width + self.diff_x;
            self.new_h = self.height + self.diff_y;
        }
        if (self.activeTab === TABS.resize) {
            if (self.new_w > self.o.resizeMinWidth) {
                (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css)(self.image, 'width', self.new_w + 'px');
                widthInput.value = self.new_w.toString();
            }
            if (self.new_h > self.o.resizeMinHeight) {
                (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css)(self.image, 'height', self.new_h + 'px');
                heightInput.value = self.new_h.toString();
            }
            this.j.e.fire(self.resizeHandler, 'updatesize');
        }
        else {
            if (self.target !== self.cropHandler) {
                if (self.top_x + self.new_w > self.cropImage.offsetWidth) {
                    self.new_w = self.cropImage.offsetWidth - self.top_x;
                }
                if (self.top_y + self.new_h > self.cropImage.offsetHeight) {
                    self.new_h = self.cropImage.offsetHeight - self.top_y;
                }
                (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css)(self.cropHandler, {
                    width: self.new_w,
                    height: self.new_h
                });
            }
            else {
                if (self.top_x + self.diff_x + self.cropHandler.offsetWidth >
                    self.cropImage.offsetWidth) {
                    self.diff_x =
                        self.cropImage.offsetWidth -
                            self.top_x -
                            self.cropHandler.offsetWidth;
                }
                (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css)(self.cropHandler, 'left', self.top_x + self.diff_x);
                if (self.top_y + self.diff_y + self.cropHandler.offsetHeight >
                    self.cropImage.offsetHeight) {
                    self.diff_y =
                        self.cropImage.offsetHeight -
                            self.top_y -
                            self.cropHandler.offsetHeight;
                }
                (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css)(self.cropHandler, 'top', self.top_y + self.diff_y);
            }
            this.j.e.fire(self.cropHandler, 'updatesize');
        }
    }
    constructor(editor) {
        super(editor);
        this.resizeUseRatio = true;
        this.cropUseRatio = true;
        this.clicked = false;
        this.start_x = 0;
        this.start_y = 0;
        this.top_x = 0;
        this.top_y = 0;
        this.width = 0;
        this.height = 0;
        this.activeTab = TABS.resize;
        this.naturalWidth = 0;
        this.naturalHeight = 0;
        this.ratio = 0;
        this.new_h = 0;
        this.new_w = 0;
        this.diff_x = 0;
        this.diff_y = 0;
        this.cropBox = {
            x: 0,
            y: 0,
            w: 0,
            h: 0
        };
        this.resizeBox = {
            w: 0,
            h: 0
        };
        this.calcCropBox = () => {
            const node = this.crop_box.parentNode, w = node.offsetWidth * 0.8, h = node.offsetHeight * 0.8;
            let wn = w, hn = h;
            const { naturalWidth: nw, naturalHeight: nh } = this;
            if (w > nw && h > nh) {
                wn = nw;
                hn = nh;
            }
            else if (this.ratio > w / h) {
                wn = w;
                hn = nh * (w / nw);
            }
            else {
                wn = nw * (h / nh);
                hn = h;
            }
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css)(this.crop_box, {
                width: wn,
                height: hn
            });
        };
        this.showCrop = () => {
            if (!this.cropImage) {
                return;
            }
            this.calcCropBox();
            const w = this.cropImage.offsetWidth ||
                this.image.offsetWidth ||
                this.image.naturalWidth;
            this.new_w = ImageEditor_1.calcValueByPercent(w, this.o.cropDefaultWidth);
            const h = this.cropImage.offsetHeight ||
                this.image.offsetHeight ||
                this.image.naturalHeight;
            if (this.cropUseRatio) {
                this.new_h = this.new_w / this.ratio;
            }
            else {
                this.new_h = ImageEditor_1.calcValueByPercent(h, this.o.cropDefaultHeight);
            }
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css)(this.cropHandler, {
                backgroundImage: 'url(' + (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.attr)(this.cropImage, 'src') + ')',
                width: this.new_w,
                height: this.new_h,
                left: w / 2 - this.new_w / 2,
                top: h / 2 - this.new_h / 2
            });
            this.j.e.fire(this.cropHandler, 'updatesize');
        };
        this.updateCropBox = () => {
            if (!this.cropImage) {
                return;
            }
            const ratioX = this.cropImage.offsetWidth / this.naturalWidth, ratioY = this.cropImage.offsetHeight / this.naturalHeight;
            this.cropBox.x = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css)(this.cropHandler, 'left') / ratioX;
            this.cropBox.y = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css)(this.cropHandler, 'top') / ratioY;
            this.cropBox.w = this.cropHandler.offsetWidth / ratioX;
            this.cropBox.h = this.cropHandler.offsetHeight / ratioY;
            this.sizes.textContent =
                this.cropBox.w.toFixed(0) + 'x' + this.cropBox.h.toFixed(0);
        };
        this.updateResizeBox = () => {
            this.resizeBox.w = this.image.offsetWidth || this.naturalWidth;
            this.resizeBox.h = this.image.offsetHeight || this.naturalHeight;
        };
        this.setHandlers = () => {
            const self = this;
            const { widthInput, heightInput } = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.refs)(this.editor);
            self.j.e
                .on([
                self.editor.querySelector('.jodit_bottomright'),
                self.cropHandler
            ], `mousedown.${jie}`, this.onResizeHandleMouseDown)
                .on(this.j.ow, `resize.${jie}`, () => {
                this.j.e.fire(self.resizeHandler, 'updatesize');
                self.showCrop();
                this.j.e.fire(self.cropHandler, 'updatesize');
            });
            self.j.e
                .on((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.toArray)(this.editor.querySelectorAll(`.${jie}__slider-title`)), 'click', this.onTitleModeClick)
                .on([widthInput, heightInput], 'input', this.onChangeSizeInput);
            const { keepAspectRatioResize, keepAspectRatioCrop } = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.refs)(this.editor);
            if (keepAspectRatioResize) {
                keepAspectRatioResize.addEventListener('change', () => {
                    this.resizeUseRatio = keepAspectRatioResize.checked;
                });
            }
            if (keepAspectRatioCrop) {
                keepAspectRatioCrop.addEventListener('change', () => {
                    this.cropUseRatio = keepAspectRatioCrop.checked;
                });
            }
            self.j.e
                .on(self.resizeHandler, 'updatesize', () => {
                (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css)(self.resizeHandler, {
                    top: 0,
                    left: 0,
                    width: self.image.offsetWidth || self.naturalWidth,
                    height: self.image.offsetHeight || self.naturalHeight
                });
                this.updateResizeBox();
            })
                .on(self.cropHandler, 'updatesize', () => {
                if (!self.cropImage) {
                    return;
                }
                let new_x = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css)(self.cropHandler, 'left'), new_y = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css)(self.cropHandler, 'top'), new_width = self.cropHandler.offsetWidth, new_height = self.cropHandler.offsetHeight;
                if (new_x < 0) {
                    new_x = 0;
                }
                if (new_y < 0) {
                    new_y = 0;
                }
                if (new_x + new_width > self.cropImage.offsetWidth) {
                    new_width = self.cropImage.offsetWidth - new_x;
                    if (self.cropUseRatio) {
                        new_height = new_width / self.ratio;
                    }
                }
                if (new_y + new_height > self.cropImage.offsetHeight) {
                    new_height = self.cropImage.offsetHeight - new_y;
                    if (self.cropUseRatio) {
                        new_width = new_height * self.ratio;
                    }
                }
                (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css)(self.cropHandler, {
                    width: new_width,
                    height: new_height,
                    left: new_x,
                    top: new_y,
                    backgroundPosition: -new_x - 1 + 'px ' + (-new_y - 1) + 'px',
                    backgroundSize: self.cropImage.offsetWidth +
                        'px ' +
                        self.cropImage.offsetHeight +
                        'px'
                });
                self.updateCropBox();
            });
            Object.values(self.buttons).forEach(button => {
                button.onAction(() => {
                    const data = {
                        action: self.activeTab,
                        box: self.activeTab === TABS.resize
                            ? self.resizeBox
                            : self.cropBox
                    };
                    switch (button) {
                        case self.buttons.saveas:
                            self.j.prompt('Enter new name', 'Save in new file', (name) => {
                                if (!(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.trim)(name)) {
                                    self.j.alert('The name should not be empty');
                                    return false;
                                }
                                self.onSave(name, data, self.hide, (e) => {
                                    self.j.alert(e.message);
                                });
                            });
                            break;
                        case self.buttons.save:
                            self.onSave(undefined, data, self.hide, (e) => {
                                self.j.alert(e.message);
                            });
                            break;
                        case self.buttons.reset:
                            if (self.activeTab === TABS.resize) {
                                (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css)(self.image, {
                                    width: null,
                                    height: null
                                });
                                widthInput.value = self.naturalWidth.toString();
                                heightInput.value = self.naturalHeight.toString();
                                self.j.e.fire(self.resizeHandler, 'updatesize');
                            }
                            else {
                                self.showCrop();
                            }
                            break;
                    }
                });
            });
        };
        this.options =
            editor && editor.o && editor.o.imageeditor
                ? editor.o.imageeditor
                : jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.defaultOptions.imageeditor;
        const o = this.options;
        this.resizeUseRatio = o.resizeUseRatio;
        this.cropUseRatio = o.cropUseRatio;
        this.buttons = {
            reset: (0,jodit_core_ui_button__WEBPACK_IMPORTED_MODULE_4__/* .Button */ .zx)(this.j, 'update', 'Reset'),
            save: (0,jodit_core_ui_button__WEBPACK_IMPORTED_MODULE_4__/* .Button */ .zx)(this.j, 'save', 'Save'),
            saveas: (0,jodit_core_ui_button__WEBPACK_IMPORTED_MODULE_4__/* .Button */ .zx)(this.j, 'save', 'Save as ...')
        };
        this.activeTab = o.resize ? TABS.resize : TABS.crop;
        this.editor = (0,_templates_form__WEBPACK_IMPORTED_MODULE_5__/* .form */ .c)(this.j, this.options);
        const { resizeBox, cropBox } = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.refs)(this.editor);
        this.resize_box = resizeBox;
        this.crop_box = cropBox;
        this.sizes = this.editor.querySelector(`.${jie}__area.${jie}__area_crop .jodit-image-editor__sizes`);
        this.resizeHandler = this.editor.querySelector(`.${jie}__resizer`);
        this.cropHandler = this.editor.querySelector(`.${jie}__croper`);
        this._dialog = this.j.dlg({
            buttons: ['fullsize', 'dialog.close']
        });
        this._dialog.setContent(this.editor);
        this._dialog.setSize(this.o.width, this.o.height);
        this._dialog.setHeader([
            this.buttons.reset,
            this.buttons.save,
            this.buttons.saveas
        ]);
        this.setHandlers();
    }
    /** @override */
    destruct() {
        if (this.isDestructed) {
            return;
        }
        if (this._dialog && !this._dialog.isInDestruct) {
            this._dialog.destruct();
        }
        jodit_core_dom__WEBPACK_IMPORTED_MODULE_3__/* .Dom */ .i.safeRemove(this.editor);
        if (this.j.e) {
            this.j.e
                .off(this.j.ow, 'mousemove', this.onGlobalMouseMove)
                .off(this.j.ow, 'mouseup', this.onGlobalMouseUp)
                .off(this.ow, `.${jie}`)
                .off(`.${jie}`);
        }
        super.destruct();
    }
};
ImageEditor.calcValueByPercent = (value, percent) => {
    const percentStr = percent.toString();
    const valueNbr = parseFloat(value.toString());
    let match;
    match = /^[-+]?[0-9]+(px)?$/.exec(percentStr);
    if (match) {
        return parseInt(percentStr, 10);
    }
    match = /^([-+]?[0-9.]+)%$/.exec(percentStr);
    if (match) {
        return Math.round(valueNbr * (parseFloat(match[1]) / 100));
    }
    return valueNbr || 0;
};
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_6__.autobind
], ImageEditor.prototype, "hide", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_6__.autobind
], ImageEditor.prototype, "open", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_6__.autobind
], ImageEditor.prototype, "onTitleModeClick", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_6__.debounce)(),
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_6__.autobind
], ImageEditor.prototype, "onChangeSizeInput", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_6__.autobind
], ImageEditor.prototype, "onResizeHandleMouseDown", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_6__.autobind
], ImageEditor.prototype, "onGlobalMouseUp", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_6__.throttle)(10)
], ImageEditor.prototype, "onGlobalMouseMove", null);
ImageEditor = ImageEditor_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_6__.component
], ImageEditor);

/**
 * Open Image Editor
 */
function openImageEditor(href, name, path, source, onSuccess, onFailed) {
    return this.getInstance('ImageEditor', this.o).open(href, (newname, box, success, failed) => (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.call)(box.action === 'resize'
        ? this.dataProvider.resize
        : this.dataProvider.crop, path, source, name, newname, box.box)
        .then(ok => {
        if (ok) {
            success();
            if (onSuccess) {
                onSuccess();
            }
        }
    })
        .catch(error => {
        failed(error);
        if (onFailed) {
            onFailed(error);
        }
    }));
}


/***/ }),

/***/ 4521:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c: function() { return /* binding */ form; }
/* harmony export */ });
/* harmony import */ var jodit_core_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(14712);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

const jie = 'jodit-image-editor';
const gi = jodit_core_ui__WEBPACK_IMPORTED_MODULE_0__/* .Icon */ .JO.get.bind(jodit_core_ui__WEBPACK_IMPORTED_MODULE_0__/* .Icon */ .JO);
const act = (el, className = 'jodti-image-editor_active') => el ? className : '';
const form = (editor, o) => {
    const i = editor.i18n.bind(editor);
    const switcher = (label, ref, active = true) => `<div class="jodit-form__group">
			<label>${i(label)}</label>

			<label class='jodit-switcher'>
				<input ${act(active, 'checked')} data-ref="${ref}" type="checkbox"/>
				<span class="jodit-switcher__slider"></span>
			</label>
	</div>`;
    return editor.create.fromHTML(`<form class="${jie} jodit-properties">
		<div class="jodit-grid jodit-grid_xs-column">
			<div class="jodit_col-lg-3-4 jodit_col-sm-5-5">
			${o.resize
        ? `<div class="${jie}__area ${jie}__area_resize ${jie}_active">
							<div data-ref="resizeBox" class="${jie}__box"></div>
							<div class="${jie}__resizer">
								<i class="jodit_bottomright"></i>
							</div>
						</div>`
        : ''}
			${o.crop
        ? `<div class="${jie}__area ${jie}__area_crop ${act(!o.resize)}">
							<div data-ref="cropBox" class="${jie}__box">
								<div class="${jie}__croper">
									<i class="jodit_bottomright"></i>
									<i class="${jie}__sizes"></i>
								</div>
							</div>
						</div>`
        : ''}
			</div>
			<div class="jodit_col-lg-1-4 jodit_col-sm-5-5">
			${o.resize
        ? `<div data-area="resize" class="${jie}__slider ${jie}_active">
							<div class="${jie}__slider-title">
								${gi('resize')}
								${i('Resize')}
							</div>
							<div class="${jie}__slider-content">
								<div class="jodit-form__group">
									<label>
										${i('Width')}
									</label>
									<input type="number" data-ref="widthInput" class="jodit-input"/>
								</div>
								<div class="jodit-form__group">
									<label>
										${i('Height')}
									</label>
									<input type="number" data-ref="heightInput" class="jodit-input"/>
								</div>
								${switcher('Keep Aspect Ratio', 'keepAspectRatioResize')}
							</div>
						</div>`
        : ''}
			${o.crop
        ? `<div data-area="crop" class="${jie}__slider ${act(!o.resize)}'">
							<div class="${jie}__slider-title">
								${gi('crop')}
								${i('Crop')}
							</div>
							<div class="${jie}__slider-content">
								${switcher('Keep Aspect Ratio', 'keepAspectRatioCrop')}
							</div>
						</div>`
        : ''}
			</div>
		</div>
	</form>`);
};


/***/ }),

/***/ 27801:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Ajax: function() { return /* reexport safe */ jodit_core_request__WEBPACK_IMPORTED_MODULE_2__.t; },
/* harmony export */   Alert: function() { return /* reexport safe */ _dialog___WEBPACK_IMPORTED_MODULE_5__.bZ; },
/* harmony export */   Async: function() { return /* reexport safe */ jodit_core_async__WEBPACK_IMPORTED_MODULE_1__.e; },
/* harmony export */   Button: function() { return /* reexport safe */ jodit_core_ui__WEBPACK_IMPORTED_MODULE_9__.zx; },
/* harmony export */   CommitStyle: function() { return /* reexport safe */ jodit_core_selection__WEBPACK_IMPORTED_MODULE_17__.RP; },
/* harmony export */   Component: function() { return /* reexport safe */ jodit_core_component__WEBPACK_IMPORTED_MODULE_3__.wA; },
/* harmony export */   Confirm: function() { return /* reexport safe */ _dialog___WEBPACK_IMPORTED_MODULE_5__.I4; },
/* harmony export */   ContextMenu: function() { return /* reexport safe */ _context_menu_context_menu__WEBPACK_IMPORTED_MODULE_4__.x; },
/* harmony export */   Create: function() { return /* reexport safe */ jodit_core_create__WEBPACK_IMPORTED_MODULE_8__.Q; },
/* harmony export */   Dialog: function() { return /* reexport safe */ _dialog___WEBPACK_IMPORTED_MODULE_5__.Vq; },
/* harmony export */   Dom: function() { return /* reexport safe */ jodit_core_dom__WEBPACK_IMPORTED_MODULE_6__.i; },
/* harmony export */   EventEmitter: function() { return /* reexport safe */ jodit_core_event_emitter__WEBPACK_IMPORTED_MODULE_0__.vp; },
/* harmony export */   EventHandlersStore: function() { return /* reexport safe */ jodit_core_event_emitter__WEBPACK_IMPORTED_MODULE_0__.DG; },
/* harmony export */   Eventify: function() { return /* reexport safe */ jodit_core_event_emitter__WEBPACK_IMPORTED_MODULE_0__.aN; },
/* harmony export */   FileBrowser: function() { return /* reexport safe */ _file_browser__WEBPACK_IMPORTED_MODULE_12__.f; },
/* harmony export */   Helpers: function() { return /* reexport module object */ jodit_core_helpers___WEBPACK_IMPORTED_MODULE_13__; },
/* harmony export */   History: function() { return /* reexport safe */ _history_history__WEBPACK_IMPORTED_MODULE_15__.A; },
/* harmony export */   Icon: function() { return /* reexport safe */ jodit_core_ui__WEBPACK_IMPORTED_MODULE_9__.JO; },
/* harmony export */   ImageEditor: function() { return /* reexport safe */ _image_editor_image_editor__WEBPACK_IMPORTED_MODULE_14__.v; },
/* harmony export */   LazyWalker: function() { return /* reexport safe */ jodit_core_dom__WEBPACK_IMPORTED_MODULE_6__.b; },
/* harmony export */   Plugin: function() { return /* reexport safe */ jodit_core_plugin__WEBPACK_IMPORTED_MODULE_7__.S; },
/* harmony export */   PluginSystem: function() { return /* reexport safe */ jodit_core_plugin_plugin_system__WEBPACK_IMPORTED_MODULE_25__.h; },
/* harmony export */   Popup: function() { return /* reexport safe */ jodit_core_ui__WEBPACK_IMPORTED_MODULE_9__.GI; },
/* harmony export */   ProgressBar: function() { return /* reexport safe */ jodit_core_ui__WEBPACK_IMPORTED_MODULE_9__.ko; },
/* harmony export */   Prompt: function() { return /* reexport safe */ _dialog___WEBPACK_IMPORTED_MODULE_5__.NL; },
/* harmony export */   Response: function() { return /* reexport safe */ jodit_core_request__WEBPACK_IMPORTED_MODULE_2__.H; },
/* harmony export */   STATUSES: function() { return /* reexport safe */ jodit_core_component__WEBPACK_IMPORTED_MODULE_3__.n$; },
/* harmony export */   Selection: function() { return /* reexport safe */ jodit_core_selection__WEBPACK_IMPORTED_MODULE_17__.Y1; },
/* harmony export */   Snapshot: function() { return /* reexport safe */ _history_snapshot__WEBPACK_IMPORTED_MODULE_16__.a; },
/* harmony export */   StatusBar: function() { return /* reexport safe */ _status_bar_status_bar__WEBPACK_IMPORTED_MODULE_18__.A; },
/* harmony export */   Table: function() { return /* reexport safe */ _table_table__WEBPACK_IMPORTED_MODULE_19__.i; },
/* harmony export */   ToolbarButton: function() { return /* reexport safe */ _toolbar_button__WEBPACK_IMPORTED_MODULE_22__.hA; },
/* harmony export */   ToolbarCollection: function() { return /* reexport safe */ _toolbar_collection_collection__WEBPACK_IMPORTED_MODULE_21__.n; },
/* harmony export */   ToolbarContent: function() { return /* reexport safe */ _toolbar_button__WEBPACK_IMPORTED_MODULE_22__.c_; },
/* harmony export */   ToolbarEditorCollection: function() { return /* reexport safe */ _toolbar_collection_editor_collection__WEBPACK_IMPORTED_MODULE_20__.N; },
/* harmony export */   ToolbarSelect: function() { return /* reexport safe */ _toolbar_button__WEBPACK_IMPORTED_MODULE_22__.vT; },
/* harmony export */   UIBlock: function() { return /* reexport safe */ jodit_core_ui__WEBPACK_IMPORTED_MODULE_9__.eC; },
/* harmony export */   UIButton: function() { return /* reexport safe */ jodit_core_ui__WEBPACK_IMPORTED_MODULE_9__.y3; },
/* harmony export */   UIButtonGroup: function() { return /* reexport safe */ jodit_core_ui__WEBPACK_IMPORTED_MODULE_9__.BO; },
/* harmony export */   UIButtonState: function() { return /* reexport safe */ jodit_core_ui__WEBPACK_IMPORTED_MODULE_9__.Yc; },
/* harmony export */   UICheckbox: function() { return /* reexport safe */ jodit_core_ui__WEBPACK_IMPORTED_MODULE_9__.mA; },
/* harmony export */   UIElement: function() { return /* reexport safe */ jodit_core_ui__WEBPACK_IMPORTED_MODULE_9__.u1; },
/* harmony export */   UIFileInput: function() { return /* reexport safe */ jodit_core_ui__WEBPACK_IMPORTED_MODULE_9__.Z; },
/* harmony export */   UIForm: function() { return /* reexport safe */ jodit_core_ui__WEBPACK_IMPORTED_MODULE_9__.x4; },
/* harmony export */   UIGroup: function() { return /* reexport safe */ jodit_core_ui__WEBPACK_IMPORTED_MODULE_9__.qe; },
/* harmony export */   UIInput: function() { return /* reexport safe */ jodit_core_ui__WEBPACK_IMPORTED_MODULE_9__.u3; },
/* harmony export */   UIList: function() { return /* reexport safe */ jodit_core_ui__WEBPACK_IMPORTED_MODULE_9__.bz; },
/* harmony export */   UIMessages: function() { return /* reexport safe */ _messages_messages__WEBPACK_IMPORTED_MODULE_24__.D; },
/* harmony export */   UISelect: function() { return /* reexport safe */ jodit_core_ui__WEBPACK_IMPORTED_MODULE_9__.Cj; },
/* harmony export */   UISeparator: function() { return /* reexport safe */ jodit_core_ui__WEBPACK_IMPORTED_MODULE_9__.lU; },
/* harmony export */   UISpacer: function() { return /* reexport safe */ jodit_core_ui__WEBPACK_IMPORTED_MODULE_9__.WT; },
/* harmony export */   UITextArea: function() { return /* reexport safe */ jodit_core_ui__WEBPACK_IMPORTED_MODULE_9__.GJ; },
/* harmony export */   UITooltip: function() { return /* reexport safe */ jodit_core_ui__WEBPACK_IMPORTED_MODULE_9__.Ne; },
/* harmony export */   Uploader: function() { return /* reexport safe */ _uploader_uploader__WEBPACK_IMPORTED_MODULE_23__.Q; },
/* harmony export */   View: function() { return /* reexport safe */ jodit_core_view_view__WEBPACK_IMPORTED_MODULE_10__.G; },
/* harmony export */   ViewComponent: function() { return /* reexport safe */ jodit_core_component__WEBPACK_IMPORTED_MODULE_3__.Hr; },
/* harmony export */   ViewWithToolbar: function() { return /* reexport safe */ jodit_core_view_view_with_toolbar__WEBPACK_IMPORTED_MODULE_11__.C; },
/* harmony export */   defaultNameSpace: function() { return /* reexport safe */ jodit_core_event_emitter__WEBPACK_IMPORTED_MODULE_0__.rO; },
/* harmony export */   observable: function() { return /* reexport safe */ jodit_core_event_emitter__WEBPACK_IMPORTED_MODULE_0__.LO; }
/* harmony export */ });
/* harmony import */ var jodit_core_event_emitter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(47981);
/* harmony import */ var jodit_core_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76731);
/* harmony import */ var jodit_core_request__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60072);
/* harmony import */ var jodit_core_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2581);
/* harmony import */ var _context_menu_context_menu__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(39021);
/* harmony import */ var _dialog___WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(39093);
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_plugin__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(7331);
/* harmony import */ var jodit_core_create__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(2652);
/* harmony import */ var jodit_core_ui__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(14712);
/* harmony import */ var jodit_core_view_view__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(21731);
/* harmony import */ var jodit_core_view_view_with_toolbar__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(94530);
/* harmony import */ var _file_browser__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(90033);
/* harmony import */ var jodit_core_helpers___WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(76974);
/* harmony import */ var _image_editor_image_editor__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(59210);
/* harmony import */ var _history_history__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(79737);
/* harmony import */ var _history_snapshot__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(53771);
/* harmony import */ var jodit_core_selection__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(64815);
/* harmony import */ var _status_bar_status_bar__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(54408);
/* harmony import */ var _table_table__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(45979);
/* harmony import */ var _toolbar_collection_editor_collection__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(97725);
/* harmony import */ var _toolbar_collection_collection__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(32596);
/* harmony import */ var _toolbar_button__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(2976);
/* harmony import */ var _uploader_uploader__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(84315);
/* harmony import */ var _messages_messages__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(30463);
/* harmony import */ var jodit_core_plugin_plugin_system__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(41978);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * [[include:modules/README.md]]
 * @packageDocumentation
 * @module modules
 */





























/***/ }),

/***/ 4411:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   q: function() { return /* binding */ UIMessage; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(14712);
/* harmony import */ var jodit_core_decorators_component_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75042);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



let UIMessage = class UIMessage extends jodit_core_ui__WEBPACK_IMPORTED_MODULE_0__/* .UIElement */ .u1 {
    className() {
        return 'UIMessage';
    }
    constructor(jodit, options) {
        super(jodit);
        this.setMod('active', true);
        this.setMod('variant', options.variant);
        this.container.textContent = options.text;
    }
};
UIMessage = (0,tslib__WEBPACK_IMPORTED_MODULE_1__/* .__decorate */ .gn)([
    jodit_core_decorators_component_component__WEBPACK_IMPORTED_MODULE_2__/* .component */ .w
], UIMessage);



/***/ }),

/***/ 30463:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   D: function() { return /* binding */ UIMessages; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(71737);
/* harmony import */ var jodit_core_ui_group_group__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(82622);
/* harmony import */ var jodit_core_decorators_component_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(75042);
/* harmony import */ var jodit_modules_messages_message__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4411);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * [[include:modules/messages/README.md]]
 * @packageDocumentation
 * @module modules/messages
 */





/**
 * Plugin display pop-up messages in the lower right corner of the editor
 */
let UIMessages = class UIMessages extends jodit_core_ui_group_group__WEBPACK_IMPORTED_MODULE_0__/* .UIGroup */ .q {
    className() {
        return 'UIMessages';
    }
    constructor(jodit, __box, options = {
        defaultTimeout: 3000,
        defaultOffset: 5
    }) {
        super(jodit);
        this.__box = __box;
        this.options = options;
        this.__messages = new Set();
    }
    /**
     * Show popup info message in the lower right corner of the container
     * ```js
     * const jodit = Jodit.make('#editor');
     * jodit.info('Hello world', 3000);
     * ```
     */
    info(text, timeout) {
        this.__message(text, 'info', timeout);
    }
    /**
     * Show popup success message in the lower right corner of the container
     * ```js
     * const jodit = Jodit.make('#editor');
     * jodit.success('Hello world', 3000);
     * ```
     */
    success(text, timeout) {
        this.__message(text, 'success', timeout);
    }
    /**
     * Show popup error message in the lower right corner of the container
     * ```js
     * const jodit = Jodit.make('#editor');
     * jodit.error('Hello world', 3000);
     * ```
     */
    error(text, timeout) {
        this.__message(text, 'error', timeout);
    }
    /**
     * Show popup message in the lower right corner of the container
     * ```js
     * const jodit = Jodit.make('#editor');
     * jodit.message('Hello world', 'info', 3000);
     * ```
     */
    message(text, variant, timeout) {
        this.__message(text, variant, timeout);
    }
    __message(text, variant = 'info', timeout) {
        const key = text + ':' + variant;
        if (this.__messages.has(key)) {
            this.async.updateTimeout(key, timeout || this.options.defaultTimeout);
            return;
        }
        this.__box.appendChild(this.container);
        const msg = new jodit_modules_messages_message__WEBPACK_IMPORTED_MODULE_1__/* .UIMessage */ .q(this.j, { text, variant });
        this.append(msg);
        this.__calcOffsets();
        this.__messages.add(key);
        const remove = this.__getRemoveCallback(msg, key);
        this.j.e.on(msg.container, 'pointerdown', remove);
        this.async.setTimeout(remove, {
            label: key,
            timeout: timeout || this.options.defaultTimeout
        });
    }
    __getRemoveCallback(msg, key) {
        const remove = (e) => {
            e && e.preventDefault();
            if (msg.isInDestruct) {
                return;
            }
            this.async.clearTimeout(key);
            this.j.e.off(msg.container, 'pointerdown', remove);
            this.__messages.delete(key);
            msg.setMod('active', false);
            this.async.setTimeout(() => {
                this.remove(msg);
                msg.destruct();
                this.__calcOffsets();
            }, 300);
        };
        return remove;
    }
    __calcOffsets() {
        let height = 5;
        this.elements.forEach(elm => {
            (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_2__/* .css */ .i)(elm.container, 'bottom', height + 'px');
            height += elm.container.offsetHeight + this.options.defaultOffset;
        });
    }
};
UIMessages = (0,tslib__WEBPACK_IMPORTED_MODULE_3__/* .__decorate */ .gn)([
    jodit_core_decorators_component_component__WEBPACK_IMPORTED_MODULE_4__/* .component */ .w
], UIMessages);



/***/ }),

/***/ 54408:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: function() { return /* binding */ StatusBar; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2581);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_traits_mods__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(53795);
/* harmony import */ var jodit_core_traits_elms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(23839);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(13666);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * [[include:modules/status-bar/README.md]]
 * @packageDocumentation
 * @module modules/status-bar
 */






let StatusBar = class StatusBar extends jodit_core_component__WEBPACK_IMPORTED_MODULE_0__/* .ViewComponent */ .Hr {
    className() {
        return 'StatusBar';
    }
    /**
     * Hide statusbar
     */
    hide() {
        this.container.classList.add('jodit_hidden');
    }
    /**
     * Show statusbar
     */
    show() {
        this.container.classList.remove('jodit_hidden');
    }
    /**
     * Status bar is shown
     */
    get isShown() {
        return !this.container.classList.contains('jodit_hidden');
    }
    /**
     * Height of statusbar
     */
    getHeight() {
        var _a, _b;
        return (_b = (_a = this.container) === null || _a === void 0 ? void 0 : _a.offsetHeight) !== null && _b !== void 0 ? _b : 0;
    }
    findEmpty(inTheRight = false) {
        const items = this.getElms(inTheRight ? 'item-right' : 'item');
        for (let i = 0; i < items.length; i += 1) {
            if (!items[i].innerHTML.trim().length) {
                return items[i];
            }
        }
        return;
    }
    /**
     * Add element in statusbar
     */
    append(child, inTheRight = false) {
        var _a;
        const wrapper = this.findEmpty(inTheRight) ||
            this.j.c.div(this.getFullElName('item'));
        if (inTheRight) {
            wrapper.classList.add(this.getFullElName('item-right'));
        }
        wrapper.appendChild(child);
        (_a = this.container) === null || _a === void 0 ? void 0 : _a.appendChild(wrapper);
        if (this.j.o.statusbar) {
            this.show();
        }
        this.j.e.fire('resize');
    }
    constructor(jodit, target) {
        super(jodit);
        this.target = target;
        this.mods = {};
        this.container = jodit.c.div('jodit-status-bar');
        target.appendChild(this.container);
        this.hide();
    }
    destruct() {
        if (this.isInDestruct) {
            return;
        }
        this.setStatus(jodit_core_component__WEBPACK_IMPORTED_MODULE_0__/* .STATUSES */ .n$.beforeDestruct);
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(this.container);
        super.destruct();
    }
};
StatusBar = (0,tslib__WEBPACK_IMPORTED_MODULE_4__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__.component,
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__.derive)(jodit_core_traits_mods__WEBPACK_IMPORTED_MODULE_5__/* .Mods */ .$, jodit_core_traits_elms__WEBPACK_IMPORTED_MODULE_2__/* .Elms */ .F)
], StatusBar);



/***/ }),

/***/ 45979:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   i: function() { return /* binding */ Table; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2581);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(79102);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(13666);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */







const markedValue = new WeakMap();
class Table extends jodit_core_component__WEBPACK_IMPORTED_MODULE_3__/* .ViewComponent */ .Hr {
    constructor() {
        super(...arguments);
        this.selected = new Set();
    }
    /** @override */
    className() {
        return 'Table';
    }
    __recalculateStyles() {
        const style = (0,jodit_core_global__WEBPACK_IMPORTED_MODULE_4__/* .getContainer */ .ZO)(this.j, Table, 'style', true);
        const selectors = [];
        this.selected.forEach(td => {
            const selector = (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.cssPath)(td);
            selector && selectors.push(selector);
        });
        // eslint-disable-next-line no-prototype-builtins
        style.innerHTML = selectors.length
            ? selectors.join(',') +
                `{${this.jodit.options.table.selectionCellStyle}}`
            : '';
    }
    addSelection(td) {
        this.selected.add(td);
        this.__recalculateStyles();
        const table = jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.closest(td, 'table', this.j.editor);
        if (table) {
            const cells = Table.__selectedByTable.get(table) || new Set();
            cells.add(td);
            Table.__selectedByTable.set(table, cells);
        }
    }
    removeSelection(td) {
        this.selected.delete(td);
        this.__recalculateStyles();
        const table = jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.closest(td, 'table', this.j.editor);
        if (table) {
            const cells = Table.__selectedByTable.get(table);
            if (cells) {
                cells.delete(td);
                if (!cells.size) {
                    Table.__selectedByTable.delete(table);
                }
            }
        }
    }
    /**
     * Returns array of selected cells
     */
    getAllSelectedCells() {
        return (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.toArray)(this.selected);
    }
    static __getSelectedCellsByTable(table) {
        const cells = Table.__selectedByTable.get(table);
        return cells ? (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.toArray)(cells) : [];
    }
    /** @override **/
    destruct() {
        this.selected.clear();
        return super.destruct();
    }
    static __getRowsCount(table) {
        return table.rows.length;
    }
    /**
     * Returns rows count in the table
     */
    getRowsCount(table) {
        return Table.__getRowsCount(table);
    }
    static __getColumnsCount(table) {
        const matrix = Table.__formalMatrix(table);
        return matrix.reduce((max_count, cells) => Math.max(max_count, cells.length), 0);
    }
    /**
     * Returns columns count in the table
     */
    getColumnsCount(table) {
        return Table.__getColumnsCount(table);
    }
    static __formalMatrix(table, callback) {
        const matrix = [[]];
        const rows = (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.toArray)(table.rows);
        const setCell = (cell, i) => {
            if (matrix[i] === undefined) {
                matrix[i] = [];
            }
            const colSpan = cell.colSpan, rowSpan = cell.rowSpan;
            let column, row, currentColumn = 0;
            while (matrix[i][currentColumn]) {
                currentColumn += 1;
            }
            for (row = 0; row < rowSpan; row += 1) {
                for (column = 0; column < colSpan; column += 1) {
                    if (matrix[i + row] === undefined) {
                        matrix[i + row] = [];
                    }
                    if (callback &&
                        callback(cell, i + row, currentColumn + column, colSpan, rowSpan) === false) {
                        return false;
                    }
                    matrix[i + row][currentColumn + column] = cell;
                }
            }
        };
        for (let i = 0; i < rows.length; i += 1) {
            const cells = (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.toArray)(rows[i].cells);
            for (let j = 0; j < cells.length; j += 1) {
                if (setCell(cells[j], i) === false) {
                    return matrix;
                }
            }
        }
        return matrix;
    }
    /**
     * Generate formal table martix columns*rows
     * @param callback - if return false cycle break
     */
    formalMatrix(table, callback) {
        return Table.__formalMatrix(table, callback);
    }
    static __formalCoordinate(table, cell, max = false) {
        let i = 0, j = 0, width = 1, height = 1;
        Table.__formalMatrix(table, (td, ii, jj, colSpan, rowSpan) => {
            if (cell === td) {
                i = ii;
                j = jj;
                width = colSpan || 1;
                height = rowSpan || 1;
                if (max) {
                    j += (colSpan || 1) - 1;
                    i += (rowSpan || 1) - 1;
                }
                return false;
            }
        });
        return [i, j, width, height];
    }
    /**
     * Get cell coordinate in formal table (without colspan and rowspan)
     */
    formalCoordinate(table, cell, max = false) {
        return Table.__formalCoordinate(table, cell, max);
    }
    static __appendRow(table, line, after, create) {
        var _a;
        let row;
        if (!line) {
            const columnsCount = Table.__getColumnsCount(table);
            row = create.element('tr');
            for (let j = 0; j < columnsCount; j += 1) {
                row.appendChild(create.element('td'));
            }
        }
        else {
            row = line.cloneNode(true);
            (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.$$)('td,th', line).forEach(cell => {
                const rowspan = (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.attr)(cell, 'rowspan');
                if (rowspan && parseInt(rowspan, 10) > 1) {
                    const newRowSpan = parseInt(rowspan, 10) - 1;
                    (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.attr)(cell, 'rowspan', newRowSpan > 1 ? newRowSpan : null);
                }
            });
            (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.$$)('td,th', row).forEach(cell => {
                cell.innerHTML = '';
            });
        }
        if (after && line && line.nextSibling) {
            line.parentNode &&
                line.parentNode.insertBefore(row, line.nextSibling);
        }
        else if (!after && line) {
            line.parentNode && line.parentNode.insertBefore(row, line);
        }
        else {
            (((_a = table.getElementsByTagName('tbody')) === null || _a === void 0 ? void 0 : _a[0]) || table).appendChild(row);
        }
    }
    /**
     * Inserts a new line after row what contains the selected cell
     *
     * @param table - Working table
     * @param line - Insert a new line after/before this
     * line contains the selected cell
     * @param after - Insert a new line after line contains the selected cell
     * @param create - Instance of Create class
     */
    appendRow(table, line, after) {
        return Table.__appendRow(table, line, after, this.j.createInside);
    }
    static __removeRow(table, rowIndex) {
        const box = Table.__formalMatrix(table);
        let dec;
        const row = table.rows[rowIndex];
        box[rowIndex].forEach((cell, j) => {
            dec = false;
            if (rowIndex - 1 >= 0 && box[rowIndex - 1][j] === cell) {
                dec = true;
            }
            else if (box[rowIndex + 1] && box[rowIndex + 1][j] === cell) {
                if (cell.parentNode === row && cell.parentNode.nextSibling) {
                    dec = true;
                    let nextCell = j + 1;
                    while (box[rowIndex + 1][nextCell] === cell) {
                        nextCell += 1;
                    }
                    const nextRow = jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.next(cell.parentNode, elm => jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTag(elm, 'tr'), table);
                    if (nextRow) {
                        if (box[rowIndex + 1][nextCell]) {
                            nextRow.insertBefore(cell, box[rowIndex + 1][nextCell]);
                        }
                        else {
                            nextRow.appendChild(cell);
                        }
                    }
                }
            }
            else {
                jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(cell);
            }
            if (dec &&
                (cell.parentNode === row || cell !== box[rowIndex][j - 1])) {
                const rowSpan = cell.rowSpan;
                (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.attr)(cell, 'rowspan', rowSpan - 1 > 1 ? rowSpan - 1 : null);
            }
        });
        jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(row);
    }
    /**
     * Remove row
     */
    removeRow(table, rowIndex) {
        return Table.__removeRow(table, rowIndex);
    }
    static __appendColumn(table, j, after, create) {
        const box = Table.__formalMatrix(table);
        let i;
        if (j === undefined || j < 0) {
            j = Table.__getColumnsCount(table) - 1;
        }
        for (i = 0; i < box.length; i += 1) {
            const cell = create.element('td');
            const td = box[i][j];
            let added = false;
            if (after) {
                if ((box[i] && td && j + 1 >= box[i].length) ||
                    td !== box[i][j + 1]) {
                    if (td.nextSibling) {
                        jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.before(td.nextSibling, cell);
                    }
                    else {
                        td.parentNode && td.parentNode.appendChild(cell);
                    }
                    added = true;
                }
            }
            else {
                if (j - 1 < 0 ||
                    (box[i][j] !== box[i][j - 1] && box[i][j].parentNode)) {
                    jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.before(box[i][j], cell);
                    added = true;
                }
            }
            if (!added) {
                (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.attr)(box[i][j], 'colspan', parseInt((0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.attr)(box[i][j], 'colspan') || '1', 10) + 1);
            }
        }
    }
    /**
     * Insert column before / after all the columns containing the selected cells
     */
    appendColumn(table, j, after) {
        return Table.__appendColumn(table, j, after, this.j.createInside);
    }
    static __removeColumn(table, j) {
        const box = Table.__formalMatrix(table);
        let dec;
        box.forEach((cells, i) => {
            const td = cells[j];
            dec = false;
            if (j - 1 >= 0 && box[i][j - 1] === td) {
                dec = true;
            }
            else if (j + 1 < cells.length && box[i][j + 1] === td) {
                dec = true;
            }
            else {
                jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(td);
            }
            if (dec && (i - 1 < 0 || td !== box[i - 1][j])) {
                const colSpan = td.colSpan;
                (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.attr)(td, 'colspan', colSpan - 1 > 1 ? (colSpan - 1).toString() : null);
            }
        });
    }
    /**
     * Remove column by index
     */
    removeColumn(table, j) {
        return Table.__removeColumn(table, j);
    }
    static __getSelectedBound(table, selectedCells) {
        const bound = [
            [Infinity, Infinity],
            [0, 0]
        ];
        const box = Table.__formalMatrix(table);
        let i, j, k;
        for (i = 0; i < box.length; i += 1) {
            for (j = 0; box[i] && j < box[i].length; j += 1) {
                if (selectedCells.includes(box[i][j])) {
                    bound[0][0] = Math.min(i, bound[0][0]);
                    bound[0][1] = Math.min(j, bound[0][1]);
                    bound[1][0] = Math.max(i, bound[1][0]);
                    bound[1][1] = Math.max(j, bound[1][1]);
                }
            }
        }
        for (i = bound[0][0]; i <= bound[1][0]; i += 1) {
            for (k = 1, j = bound[0][1]; j <= bound[1][1]; j += 1) {
                while (box[i] && box[i][j - k] && box[i][j] === box[i][j - k]) {
                    bound[0][1] = Math.min(j - k, bound[0][1]);
                    bound[1][1] = Math.max(j - k, bound[1][1]);
                    k += 1;
                }
                k = 1;
                while (box[i] && box[i][j + k] && box[i][j] === box[i][j + k]) {
                    bound[0][1] = Math.min(j + k, bound[0][1]);
                    bound[1][1] = Math.max(j + k, bound[1][1]);
                    k += 1;
                }
                k = 1;
                while (box[i - k] && box[i][j] === box[i - k][j]) {
                    bound[0][0] = Math.min(i - k, bound[0][0]);
                    bound[1][0] = Math.max(i - k, bound[1][0]);
                    k += 1;
                }
                k = 1;
                while (box[i + k] && box[i][j] === box[i + k][j]) {
                    bound[0][0] = Math.min(i + k, bound[0][0]);
                    bound[1][0] = Math.max(i + k, bound[1][0]);
                    k += 1;
                }
            }
        }
        return bound;
    }
    /**
     * Define bound for selected cells
     */
    getSelectedBound(table, selectedCells) {
        return Table.__getSelectedBound(table, selectedCells);
    }
    static __normalizeTable(table) {
        let i, j, min, not;
        const __marked = [], box = Table.__formalMatrix(table);
        // remove extra colspans
        for (j = 0; j < box[0].length; j += 1) {
            min = 1000000;
            not = false;
            for (i = 0; i < box.length; i += 1) {
                if (box[i][j] === undefined) {
                    continue; // broken table
                }
                if (box[i][j].colSpan < 2) {
                    not = true;
                    break;
                }
                min = Math.min(min, box[i][j].colSpan);
            }
            if (!not) {
                for (i = 0; i < box.length; i += 1) {
                    if (box[i][j] === undefined) {
                        continue; // broken table
                    }
                    Table.__mark(box[i][j], 'colspan', box[i][j].colSpan - min + 1, __marked);
                }
            }
        }
        // remove extra rowspans
        for (i = 0; i < box.length; i += 1) {
            min = 1000000;
            not = false;
            for (j = 0; j < box[i].length; j += 1) {
                if (box[i][j] === undefined) {
                    continue; // broken table
                }
                if (box[i][j].rowSpan < 2) {
                    not = true;
                    break;
                }
                min = Math.min(min, box[i][j].rowSpan);
            }
            if (!not) {
                for (j = 0; j < box[i].length; j += 1) {
                    if (box[i][j] === undefined) {
                        continue; // broken table
                    }
                    Table.__mark(box[i][j], 'rowspan', box[i][j].rowSpan - min + 1, __marked);
                }
            }
        }
        // remove rowspans and colspans equal 1 and empty class
        for (i = 0; i < box.length; i += 1) {
            for (j = 0; j < box[i].length; j += 1) {
                if (box[i][j] === undefined) {
                    continue; // broken table
                }
                if (box[i][j].hasAttribute('rowspan') &&
                    box[i][j].rowSpan === 1) {
                    (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.attr)(box[i][j], 'rowspan', null);
                }
                if (box[i][j].hasAttribute('colspan') &&
                    box[i][j].colSpan === 1) {
                    (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.attr)(box[i][j], 'colspan', null);
                }
                if (box[i][j].hasAttribute('class') &&
                    !(0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.attr)(box[i][j], 'class')) {
                    (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.attr)(box[i][j], 'class', null);
                }
            }
        }
        Table.__unmark(__marked);
    }
    /**
     * Try recalculate all coluns and rows after change
     */
    normalizeTable(table) {
        return Table.__normalizeTable(table);
    }
    static __mergeSelected(table, jodit) {
        const html = [], bound = Table.__getSelectedBound(table, Table.__getSelectedCellsByTable(table));
        let w = 0, first = null, first_j = 0, td, cols = 0, rows = 0;
        const alreadyMerged = new Set(), __marked = [];
        if (bound && (bound[0][0] - bound[1][0] || bound[0][1] - bound[1][1])) {
            Table.__formalMatrix(table, (cell, i, j, cs, rs) => {
                if (i >= bound[0][0] && i <= bound[1][0]) {
                    if (j >= bound[0][1] && j <= bound[1][1]) {
                        td = cell;
                        if (alreadyMerged.has(td)) {
                            return;
                        }
                        alreadyMerged.add(td);
                        if (i === bound[0][0] && td.style.width) {
                            w += td.offsetWidth;
                        }
                        if ((0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.trim)(cell.innerHTML.replace(/<br(\/)?>/g, '')) !== '') {
                            html.push(cell.innerHTML);
                        }
                        if (cs > 1) {
                            cols += cs - 1;
                        }
                        if (rs > 1) {
                            rows += rs - 1;
                        }
                        if (!first) {
                            first = cell;
                            first_j = j;
                        }
                        else {
                            Table.__mark(td, 'remove', 1, __marked);
                            instance(jodit).removeSelection(td);
                        }
                    }
                }
            });
            cols = bound[1][1] - bound[0][1] + 1;
            rows = bound[1][0] - bound[0][0] + 1;
            if (first) {
                if (cols > 1) {
                    Table.__mark(first, 'colspan', cols, __marked);
                }
                if (rows > 1) {
                    Table.__mark(first, 'rowspan', rows, __marked);
                }
                if (w) {
                    Table.__mark(first, 'width', ((w / table.offsetWidth) * 100).toFixed(jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.ACCURACY) + '%', __marked);
                    if (first_j) {
                        Table.__setColumnWidthByDelta(table, first_j, 0, true, __marked);
                    }
                }
                first.innerHTML = html.join('<br/>');
                instance(jodit).addSelection(first);
                alreadyMerged.delete(first);
                Table.__unmark(__marked);
                Table.__normalizeTable(table);
                (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.toArray)(table.rows).forEach((tr, index) => {
                    if (!tr.cells.length) {
                        jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(tr);
                    }
                });
            }
        }
    }
    /**
     * It combines all of the selected cells into one. The contents of the cells will also be combined
     */
    mergeSelected(table) {
        return Table.__mergeSelected(table, this.j);
    }
    static __splitHorizontal(table, jodit) {
        let coord, td, tr, parent, after;
        const __marked = [];
        Table.__getSelectedCellsByTable(table).forEach((cell) => {
            td = jodit.createInside.element('td');
            td.appendChild(jodit.createInside.element('br'));
            tr = jodit.createInside.element('tr');
            coord = Table.__formalCoordinate(table, cell);
            if (cell.rowSpan < 2) {
                Table.__formalMatrix(table, (tdElm, i, j) => {
                    if (coord[0] === i &&
                        coord[1] !== j &&
                        tdElm !== cell) {
                        Table.__mark(tdElm, 'rowspan', tdElm.rowSpan + 1, __marked);
                    }
                });
                jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.after(jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.closest(cell, 'tr', table), tr);
                tr.appendChild(td);
            }
            else {
                Table.__mark(cell, 'rowspan', cell.rowSpan - 1, __marked);
                Table.__formalMatrix(table, (tdElm, i, j) => {
                    if (i > coord[0] &&
                        i < coord[0] + cell.rowSpan &&
                        coord[1] > j &&
                        tdElm.parentNode
                            .rowIndex === i) {
                        after = tdElm;
                    }
                    if (coord[0] < i && tdElm === cell) {
                        parent = table.rows[i];
                    }
                });
                if (after) {
                    jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.after(after, td);
                }
                else {
                    parent.insertBefore(td, parent.firstChild);
                }
            }
            if (cell.colSpan > 1) {
                Table.__mark(td, 'colspan', cell.colSpan, __marked);
            }
            Table.__unmark(__marked);
            instance(jodit).removeSelection(cell);
        });
        this.__normalizeTable(table);
    }
    /**
     * Divides all selected by `jodit_focused_cell` class table cell in 2 parts vertical. Those division into 2 columns
     */
    splitHorizontal(table) {
        return Table.__splitHorizontal(table, this.j);
    }
    static __splitVertical(table, jodit) {
        let coord, td, percentage;
        const __marked = [];
        Table.__getSelectedCellsByTable(table).forEach(cell => {
            coord = Table.__formalCoordinate(table, cell);
            if (cell.colSpan < 2) {
                Table.__formalMatrix(table, (tdElm, i, j) => {
                    if (coord[1] === j && coord[0] !== i && tdElm !== cell) {
                        Table.__mark(tdElm, 'colspan', tdElm.colSpan + 1, __marked);
                    }
                });
            }
            else {
                Table.__mark(cell, 'colspan', cell.colSpan - 1, __marked);
            }
            td = jodit.createInside.element('td');
            td.appendChild(jodit.createInside.element('br'));
            if (cell.rowSpan > 1) {
                Table.__mark(td, 'rowspan', cell.rowSpan, __marked);
            }
            const oldWidth = cell.offsetWidth; // get old width
            jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.after(cell, td);
            percentage = oldWidth / table.offsetWidth / 2;
            Table.__mark(cell, 'width', (percentage * 100).toFixed(jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.ACCURACY) + '%', __marked);
            Table.__mark(td, 'width', (percentage * 100).toFixed(jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.ACCURACY) + '%', __marked);
            Table.__unmark(__marked);
            instance(jodit).removeSelection(cell);
        });
        Table.__normalizeTable(table);
    }
    /**
     * It splits all the selected cells into 2 parts horizontally. Those. are added new row
     */
    splitVertical(table) {
        return Table.__splitVertical(table, this.j);
    }
    static __setColumnWidthByDelta(table, column, delta, noUnmark, marked) {
        const box = Table.__formalMatrix(table);
        let clearWidthIndex = 0;
        for (let i = 0; i < box.length; i += 1) {
            const cell = box[i][column];
            if (cell.colSpan > 1 && box.length > 1) {
                continue;
            }
            const w = cell.offsetWidth;
            const percent = ((w + delta) / table.offsetWidth) * 100;
            Table.__mark(cell, 'width', percent.toFixed(jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.ACCURACY) + '%', marked);
            clearWidthIndex = i;
            break;
        }
        for (let i = clearWidthIndex + 1; i < box.length; i += 1) {
            const cell = box[i][column];
            Table.__mark(cell, 'width', null, marked);
        }
        if (!noUnmark) {
            Table.__unmark(marked);
        }
    }
    /**
     * Set column width used delta value
     */
    setColumnWidthByDelta(table, column, delta, noUnmark, marked) {
        return Table.__setColumnWidthByDelta(table, column, delta, noUnmark, marked);
    }
    static __mark(cell, key, value, marked) {
        var _a;
        marked.push(cell);
        const dict = (_a = markedValue.get(cell)) !== null && _a !== void 0 ? _a : {};
        dict[key] = value === undefined ? 1 : value;
        markedValue.set(cell, dict);
    }
    static __unmark(marked) {
        marked.forEach(cell => {
            const dict = markedValue.get(cell);
            if (dict) {
                Object.keys(dict).forEach((key) => {
                    const value = dict[key];
                    switch (key) {
                        case 'remove':
                            jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(cell);
                            break;
                        case 'rowspan':
                            (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.attr)(cell, 'rowspan', (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.isNumber)(value) && value > 1 ? value : null);
                            break;
                        case 'colspan':
                            (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.attr)(cell, 'colspan', (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.isNumber)(value) && value > 1 ? value : null);
                            break;
                        case 'width':
                            if (value == null) {
                                cell.style.removeProperty('width');
                                if (!(0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.attr)(cell, 'style')) {
                                    (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_2__.attr)(cell, 'style', null);
                                }
                            }
                            else {
                                cell.style.width = value.toString();
                            }
                            break;
                    }
                    delete dict[key];
                });
                markedValue.delete(cell);
            }
        });
    }
}
Table.__selectedByTable = new WeakMap();
(0,tslib__WEBPACK_IMPORTED_MODULE_6__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.debounce)()
], Table.prototype, "__recalculateStyles", null);
const instance = (j) => j.getInstance('Table', j.o);


/***/ }),

/***/ 40932:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   h: function() { return /* binding */ ToolbarButton; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_ui_button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(64856);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_ui_popup_popup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(80397);
/* harmony import */ var jodit_modules_toolbar_factory__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(55027);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(30052);
/* harmony import */ var jodit_modules_toolbar_collection_collection__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(32596);
/* harmony import */ var jodit_core_component_statuses__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(74028);
/* harmony import */ var jodit_core_ui_helpers_get_control_type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(90160);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * [[include:modules/toolbar/button/README.md]]
 * @packageDocumentation
 * @module modules/toolbar/button
 */











let ToolbarButton = class ToolbarButton extends jodit_core_ui_button__WEBPACK_IMPORTED_MODULE_0__/* .UIButton */ .y3 {
    /** @override */
    className() {
        return 'ToolbarButton';
    }
    /**
     * Get parent toolbar
     */
    get toolbar() {
        return this.closest(jodit_modules_toolbar_collection_collection__WEBPACK_IMPORTED_MODULE_7__/* .ToolbarCollection */ .n);
    }
    /** @override **/
    update() {
        var _a, _b;
        const { control, state } = this, tc = this.closest(jodit_modules_toolbar_collection_collection__WEBPACK_IMPORTED_MODULE_7__/* .ToolbarCollection */ .n);
        if (!tc) {
            return;
        }
        const value = (_a = control.value) === null || _a === void 0 ? void 0 : _a.call(control, tc.jodit, this);
        if (value !== undefined) {
            state.value = value;
        }
        state.disabled = this.__calculateDisabledStatus(tc);
        state.activated = this.__calculateActivatedStatus(tc);
        (_b = control.update) === null || _b === void 0 ? void 0 : _b.call(control, tc.jodit, this);
    }
    /**
     * Calculates whether the button is active
     */
    __calculateActivatedStatus(tc) {
        var _a, _b;
        if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.isJoditObject)(this.j) && !this.j.editorIsActive) {
            return false;
        }
        if ((_b = (_a = this.control).isActive) === null || _b === void 0 ? void 0 : _b.call(_a, this.j, this)) {
            return true;
        }
        return Boolean(tc && tc.shouldBeActive(this));
    }
    /**
     * Calculates whether an element is blocked for the user
     */
    __calculateDisabledStatus(tc) {
        var _a, _b;
        if (this.j.o.disabled) {
            return true;
        }
        if (this.j.o.readonly &&
            (!this.j.o.activeButtonsInReadOnly ||
                !this.j.o.activeButtonsInReadOnly.includes(this.control.name))) {
            return true;
        }
        if ((_b = (_a = this.control).isDisabled) === null || _b === void 0 ? void 0 : _b.call(_a, this.j, this)) {
            return true;
        }
        return Boolean(tc && tc.shouldBeDisabled(this));
    }
    /** @override */
    onChangeActivated() {
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.attr)(this.button, 'aria-pressed', this.state.activated);
        super.onChangeActivated();
    }
    /** @override */
    onChangeText() {
        if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.isFunction)(this.control.template)) {
            this.text.innerHTML = this.control.template(this.j, this.control.name, this.j.i18n(this.state.text));
        }
        else {
            super.onChangeText();
        }
        this.setMod('text-icons', Boolean(this.text.innerText.trim().length));
    }
    /** @override */
    onChangeTabIndex() {
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.attr)(this.button, 'tabindex', this.state.tabIndex);
    }
    createContainer() {
        const cn = this.componentName;
        const container = this.j.c.span(cn), button = super.createContainer();
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.attr)(container, 'role', 'listitem');
        button.classList.remove(cn);
        button.classList.add(cn + '__button');
        Object.defineProperty(button, 'component', {
            value: this
        });
        container.appendChild(button);
        const trigger = this.j.c.fromHTML(`<span role="trigger" class="${cn}__trigger">${jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_6__/* .Icon */ .J.get('chevron')}</span>`);
        // For caching
        button.appendChild(trigger);
        return container;
    }
    /** @override */
    focus() {
        var _a;
        (_a = this.container.querySelector('button')) === null || _a === void 0 ? void 0 : _a.focus();
    }
    onChangeHasTrigger() {
        if (this.state.hasTrigger) {
            this.container.appendChild(this.trigger);
        }
        else {
            jodit_core_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.safeRemove(this.trigger);
        }
        this.setMod('with-trigger', this.state.hasTrigger || null);
    }
    /** @override */
    onChangeDisabled() {
        const disabled = this.state.disabled ? 'disabled' : null;
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.attr)(this.trigger, 'disabled', disabled);
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.attr)(this.button, 'disabled', disabled);
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.attr)(this.container, 'disabled', disabled);
    }
    constructor(jodit, control, target = null) {
        super(jodit);
        this.control = control;
        this.target = target;
        this.state = Object.assign(Object.assign({}, (0,jodit_core_ui_button__WEBPACK_IMPORTED_MODULE_0__/* .UIButtonState */ .Yc)()), { theme: 'toolbar', currentValue: '', hasTrigger: false });
        this.openedPopup = null;
        const button = this.getElm('button');
        void 0;
        this.button = button;
        Object.defineProperty(button, 'component', {
            value: this,
            configurable: true
        });
        const trigger = this.getElm('trigger');
        void 0;
        this.trigger = trigger;
        trigger.remove();
        // Prevent lost focus
        jodit.e.on([this.button, this.trigger], 'mousedown', (e) => e.preventDefault());
        this.onAction(this.onClick);
        this.hookStatus(jodit_core_component_statuses__WEBPACK_IMPORTED_MODULE_8__/* .STATUSES */ .n.ready, () => {
            this.__initFromControl();
            this.update();
        });
        if (control.mods) {
            Object.keys(control.mods).forEach(mod => {
                control.mods && this.setMod(mod, control.mods[mod]);
            });
        }
    }
    /**
     * Init constant data from control
     */
    __initFromControl() {
        var _a;
        const { control: ctr, state } = this;
        this.updateSize();
        state.name = ctr.name;
        const { textIcons } = this.j.o;
        if (textIcons === true ||
            ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.isFunction)(textIcons) && textIcons(ctr.name)) ||
            ctr.template) {
            state.icon = (0,jodit_core_ui_button__WEBPACK_IMPORTED_MODULE_0__/* .UIButtonState */ .Yc)().icon;
            state.text = ctr.text || ctr.name;
        }
        else {
            if (ctr.iconURL) {
                state.icon.iconURL = ctr.iconURL;
            }
            else {
                const name = ctr.icon || ctr.name;
                state.icon.name =
                    jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_6__/* .Icon */ .J.exists(name) || ((_a = this.j.o.extraIcons) === null || _a === void 0 ? void 0 : _a[name])
                        ? name
                        : '';
            }
            if (!ctr.iconURL && !state.icon.name) {
                state.text = ctr.text || ctr.name;
            }
        }
        if (ctr.tooltip) {
            state.tooltip = this.j.i18n((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.isFunction)(ctr.tooltip)
                ? ctr.tooltip(this.j, ctr, this)
                : ctr.tooltip);
        }
        state.hasTrigger = Boolean(ctr.list || (ctr.popup && ctr.exec));
    }
    /**
     * Click on trigger button
     */
    onTriggerClick(e) {
        var _a, _b, _c;
        if (this.openedPopup) {
            this.__closePopup();
            return;
        }
        const { control: ctr } = this;
        e.buffer = {
            actionTrigger: this
        };
        if (ctr.list) {
            return this.__openControlList(ctr);
        }
        if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.isFunction)(ctr.popup)) {
            const popup = this.openPopup();
            popup.parentElement = this;
            if (this.j.e.fire((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.camelCase)(`before-${ctr.name}-open-popup`), this.target, ctr, popup) !== false) {
                const target = (_c = (_b = (_a = this.toolbar) === null || _a === void 0 ? void 0 : _a.getTarget(this)) !== null && _b !== void 0 ? _b : this.target) !== null && _c !== void 0 ? _c : null;
                const elm = ctr.popup(this.j, target, this.__closePopup, this);
                if (elm) {
                    popup
                        .setContent((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.isString)(elm) ? this.j.c.fromHTML(elm) : elm)
                        .open(() => (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.position)(this.container), false, this.j.o.allowTabNavigation
                        ? this.container
                        : undefined);
                }
            }
            /**
             * Fired after popup was opened for some control button
             */
            /**
             * Close all opened popups
             */
            this.j.e.fire((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.camelCase)(`after-${ctr.name}-open-popup`), popup.container);
        }
    }
    /**
     * Create and open popup list
     */
    __openControlList(control) {
        var _a;
        const controls = (_a = this.jodit.options.controls) !== null && _a !== void 0 ? _a : {}, getControl = (key) => (0,jodit_core_ui_helpers_get_control_type__WEBPACK_IMPORTED_MODULE_9__/* .findControlType */ .z)(key, controls);
        const list = control.list, menu = this.openPopup(), toolbar = (0,jodit_modules_toolbar_factory__WEBPACK_IMPORTED_MODULE_4__/* .makeCollection */ .RP)(this.j);
        menu.parentElement = this;
        toolbar.parentElement = menu;
        toolbar.mode = 'vertical';
        const isListItem = (key) => (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.isPlainObject)(key) && 'title' in key && 'value' in key;
        const getButton = (key, value) => {
            if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.isString)(value) && getControl(value)) {
                return Object.assign({ name: value.toString() }, getControl(value));
            }
            if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.isString)(key) && getControl(key)) {
                return Object.assign(Object.assign({ name: key.toString() }, getControl(key)), (typeof value === 'object' ? value : {}));
            }
            if (isListItem(key)) {
                value = key.value;
                key = key.title;
            }
            const { childTemplate } = control;
            const childControl = {
                name: key.toString(),
                template: childTemplate &&
                    ((j, k, v) => childTemplate(j, k, v, this)),
                exec: control.childExec
                    ? (view, current, options) => {
                        var _a;
                        return (_a = control.childExec) === null || _a === void 0 ? void 0 : _a.call(control, view, current, Object.assign(Object.assign({}, options), { parentControl: control }));
                    }
                    : control.exec,
                data: control.data,
                command: control.command,
                isActive: control.isChildActive,
                value: control.value,
                isDisabled: control.isChildDisabled,
                mode: control.mode,
                args: [...(control.args ? control.args : []), key, value]
            };
            if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.isString)(value)) {
                childControl.text = value;
            }
            return childControl;
        };
        toolbar.build((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.isArray)(list)
            ? list.map(getButton)
            : (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.keys)(list, false).map(key => getButton(key, list[key])), this.target);
        menu.setContent(toolbar).open(() => (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.position)(this.container), false, this.j.o.allowTabNavigation ? this.container : undefined);
        this.state.activated = true;
    }
    onOutsideClick(e) {
        if (!this.openedPopup) {
            return;
        }
        if (!e ||
            !jodit_core_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isNode(e.target) ||
            (!jodit_core_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isOrContains(this.container, e.target) &&
                !this.openedPopup.isOwnClick(e))) {
            this.__closePopup();
        }
    }
    openPopup() {
        this.__closePopup();
        this.openedPopup = new jodit_core_ui_popup_popup__WEBPACK_IMPORTED_MODULE_3__/* .Popup */ .G(this.j, false);
        this.j.e
            .on(this.ow, 'mousedown touchstart', this.onOutsideClick)
            .on('escape closeAllPopups', this.onOutsideClick);
        return this.openedPopup;
    }
    __closePopup() {
        if (this.openedPopup) {
            this.j.e
                .off(this.ow, 'mousedown touchstart', this.onOutsideClick)
                .off('escape closeAllPopups', this.onOutsideClick);
            this.state.activated = false;
            this.openedPopup.close();
            this.openedPopup.destruct();
            this.openedPopup = null;
        }
    }
    /**
     * Click handler
     */
    onClick(originalEvent) {
        var _a, _b, _c, _d, _e, _f, _g;
        const { control: ctr } = this;
        if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.isFunction)(ctr.exec)) {
            const target = (_c = (_b = (_a = this.toolbar) === null || _a === void 0 ? void 0 : _a.getTarget(this)) !== null && _b !== void 0 ? _b : this.target) !== null && _c !== void 0 ? _c : null;
            const result = ctr.exec(this.j, target, {
                control: ctr,
                originalEvent,
                button: this
            });
            // For memorise exec
            if (result !== false && result !== true) {
                (_e = (_d = this.j) === null || _d === void 0 ? void 0 : _d.e) === null || _e === void 0 ? void 0 : _e.fire('synchro');
                if (this.parentElement) {
                    this.parentElement.update();
                }
                /**
                 * Fired after calling `button.exec` function
                 */
                (_g = (_f = this.j) === null || _f === void 0 ? void 0 : _f.e) === null || _g === void 0 ? void 0 : _g.fire('closeAllPopups afterExec');
            }
            if (result !== false) {
                return;
            }
        }
        if (ctr.list) {
            return this.__openControlList(ctr);
        }
        if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.isFunction)(ctr.popup)) {
            return this.onTriggerClick(originalEvent);
        }
        if (ctr.command || ctr.name) {
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.call)((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_5__.isJoditObject)(this.j)
                ? this.j.execCommand.bind(this.j)
                : this.j.od.execCommand.bind(this.j.od), ctr.command || ctr.name, false, ctr.args && ctr.args[0]);
            this.j.e.fire('closeAllPopups');
        }
    }
    destruct() {
        this.__closePopup();
        return super.destruct();
    }
};
(0,tslib__WEBPACK_IMPORTED_MODULE_10__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.cacheHTML
], ToolbarButton.prototype, "createContainer", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_10__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.watch)('state.hasTrigger', { immediately: false })
], ToolbarButton.prototype, "onChangeHasTrigger", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_10__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.watch)('trigger:click')
], ToolbarButton.prototype, "onTriggerClick", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_10__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.autobind
], ToolbarButton.prototype, "onOutsideClick", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_10__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.autobind
], ToolbarButton.prototype, "__closePopup", null);
ToolbarButton = (0,tslib__WEBPACK_IMPORTED_MODULE_10__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.component
], ToolbarButton);



/***/ }),

/***/ 16977:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c: function() { return /* binding */ ToolbarContent; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_ui_button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(64856);
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(13666);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * @module modules/toolbar/button
 */





let ToolbarContent = class ToolbarContent extends jodit_core_ui_button__WEBPACK_IMPORTED_MODULE_0__/* .UIButton */ .y3 {
    /** @override */
    className() {
        return 'ToolbarContent';
    }
    /** @override */
    update() {
        const content = this.control.getContent(this.j, this);
        if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.isString)(content) || content.parentNode !== this.container) {
            jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.detach(this.container);
            this.container.appendChild((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.isString)(content) ? this.j.create.fromHTML(content) : content);
        }
        super.update();
    }
    /** @override */
    createContainer() {
        return this.j.c.span(this.componentName);
    }
    constructor(jodit, control, target = null) {
        super(jodit);
        this.control = control;
        this.target = target;
        this.container.classList.add(`${this.componentName}_${this.clearName(control.name)}`);
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.attr)(this.container, 'role', 'content');
    }
};
ToolbarContent = (0,tslib__WEBPACK_IMPORTED_MODULE_4__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__.component
], ToolbarContent);



/***/ }),

/***/ 2976:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c_: function() { return /* reexport safe */ _content__WEBPACK_IMPORTED_MODULE_1__.c; },
/* harmony export */   hA: function() { return /* reexport safe */ _button__WEBPACK_IMPORTED_MODULE_0__.h; },
/* harmony export */   vT: function() { return /* reexport safe */ _select_select__WEBPACK_IMPORTED_MODULE_2__.v; }
/* harmony export */ });
/* harmony import */ var _button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(40932);
/* harmony import */ var _content__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16977);
/* harmony import */ var _select_select__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(38178);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module modules/toolbar/button
 */





/***/ }),

/***/ 38178:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   v: function() { return /* binding */ ToolbarSelect; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2926);
/* harmony import */ var _button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(40932);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * @module modules/toolbar/button
 */




let ToolbarSelect = class ToolbarSelect extends _button__WEBPACK_IMPORTED_MODULE_1__/* .ToolbarButton */ .h {
    className() {
        return 'ToolbarSelect';
    }
    update() {
        var _a, _b, _c;
        super.update();
        this.state.icon.name = '';
        const { list, data } = this.control;
        if (list) {
            let key = this.state.value ||
                (data && (0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_2__/* .isString */ .H)(data.currentValue)
                    ? data.currentValue
                    : undefined);
            if (!key) {
                const keys = Object.keys(list);
                key = keys[0];
            }
            const text = (list[key.toString()] || key).toString();
            this.state.text =
                (_c = (_b = (_a = this.control).textTemplate) === null || _b === void 0 ? void 0 : _b.call(_a, this.jodit, text)) !== null && _c !== void 0 ? _c : text;
        }
    }
};
ToolbarSelect = (0,tslib__WEBPACK_IMPORTED_MODULE_3__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_0__.component
], ToolbarSelect);



/***/ }),

/***/ 32596:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   n: function() { return /* binding */ ToolbarCollection; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_helpers_utils_error_error__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(60701);
/* harmony import */ var jodit_core_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(14712);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(13666);
/* harmony import */ var jodit_modules_toolbar_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(55027);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * [[include:modules/toolbar/collection/README.md]]
 * @packageDocumentation
 * @module modules/toolbar/collection
 */





let ToolbarCollection = class ToolbarCollection extends jodit_core_ui__WEBPACK_IMPORTED_MODULE_0__/* .UIList */ .bz {
    /** @override */
    className() {
        return 'ToolbarCollection';
    }
    /**
     * First button in list
     */
    get firstButton() {
        const [button] = this.buttons;
        return button || null;
    }
    makeButton(control, target = null) {
        return (0,jodit_modules_toolbar_factory__WEBPACK_IMPORTED_MODULE_2__/* .makeButton */ .gu)(this.j, control, target);
    }
    makeSelect(control, target = null) {
        return (0,jodit_modules_toolbar_factory__WEBPACK_IMPORTED_MODULE_2__/* .makeSelect */ .OT)(this.j, control, target);
    }
    /**
     * Button should be active
     */
    shouldBeActive(button) {
        return undefined;
    }
    /**
     * Button should be disabled
     */
    shouldBeDisabled(button) {
        return undefined;
    }
    /**
     * Returns current target for button
     */
    getTarget(button) {
        return button.target || null;
    }
    __immediateUpdate() {
        if (this.isDestructed || this.j.isLocked) {
            return;
        }
        super.update();
        this.j.e.fire('afterUpdateToolbar', this);
    }
    update() {
        this.__immediateUpdate();
    }
    /**
     * Set direction
     */
    setDirection(direction) {
        this.container.style.direction = direction;
        this.container.setAttribute('dir', direction);
    }
    constructor(jodit) {
        super(jodit);
        this.__listenEvents = 'updatePlugins updateToolbar changeStack mousedown mouseup keydown change afterInit readonly afterResize ' +
            'selectionchange changeSelection focus afterSetMode touchstart focus blur';
        this.__tooltip = new jodit_core_ui__WEBPACK_IMPORTED_MODULE_0__/* .UITooltip */ .Ne(this.jodit);
    }
    __initEvents() {
        this.j.e
            .on(this.__listenEvents, this.update)
            .on('afterSetMode focus', this.__immediateUpdate);
    }
    hide() {
        this.container.remove();
    }
    show() {
        this.appendTo(this.j.toolbarContainer);
    }
    showInline(bound) {
        throw (0,jodit_core_helpers_utils_error_error__WEBPACK_IMPORTED_MODULE_3__/* .error */ .vU)('The method is not implemented for this class.');
    }
    /** @override **/
    build(items, target = null) {
        const itemsWithGroupps = this.j.e.fire('beforeToolbarBuild', items);
        if (itemsWithGroupps) {
            items = itemsWithGroupps;
        }
        super.build(items, target);
        return this;
    }
    /** @override **/
    destruct() {
        var _a;
        if (this.isDestructed) {
            return;
        }
        (_a = this.__tooltip) === null || _a === void 0 ? void 0 : _a.destruct();
        this.__tooltip = null;
        this.j.e
            .off(this.__listenEvents, this.update)
            .off('afterSetMode focus', this.__immediateUpdate);
        super.destruct();
    }
};
(0,tslib__WEBPACK_IMPORTED_MODULE_4__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.autobind
], ToolbarCollection.prototype, "__immediateUpdate", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_4__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.debounce)()
], ToolbarCollection.prototype, "update", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_4__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.hook)('ready')
], ToolbarCollection.prototype, "__initEvents", null);
ToolbarCollection = (0,tslib__WEBPACK_IMPORTED_MODULE_4__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.component
], ToolbarCollection);



/***/ }),

/***/ 97725:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   N: function() { return /* binding */ ToolbarEditorCollection; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(97582);
/* harmony import */ var _collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(32596);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(13666);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * @module modules/toolbar/collection
 */





let ToolbarEditorCollection = class ToolbarEditorCollection extends _collection__WEBPACK_IMPORTED_MODULE_0__/* .ToolbarCollection */ .n {
    /** @override */
    className() {
        return 'ToolbarEditorCollection';
    }
    /** @override */
    shouldBeDisabled(button) {
        const disabled = super.shouldBeDisabled(button);
        if (disabled !== undefined) {
            return disabled;
        }
        const mode = button.control.mode === undefined
            ? jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_WYSIWYG
            : button.control.mode;
        return !(mode === jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_SPLIT || mode === this.j.getRealMode());
    }
    /** @override */
    shouldBeActive(button) {
        const active = super.shouldBeActive(button);
        if (active !== undefined) {
            return active;
        }
        const element = this.j.selection ? this.j.s.current() : null;
        if (!element) {
            return false;
        }
        let elm;
        if (button.control.tags) {
            const tags = button.control.tags;
            elm = element;
            if (jodit_core_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.up(elm, (node) => {
                if (node &&
                    tags.indexOf(node.nodeName.toLowerCase()) !== -1) {
                    return true;
                }
            }, this.j.editor)) {
                return true;
            }
        }
        // activate by supposed css
        if (button.control.css) {
            const css = button.control.css;
            elm = element;
            if (jodit_core_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.up(elm, (node) => {
                if (node && !jodit_core_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isText(node) && !jodit_core_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isComment(node)) {
                    return this.checkActiveStatus(css, node);
                }
            }, this.j.editor)) {
                return true;
            }
        }
        return false;
    }
    /** @override */
    getTarget(button) {
        return button.target || this.j.s.current() || null;
    }
    /** @override */
    constructor(jodit) {
        super(jodit);
        this.checkActiveStatus = (cssObject, node) => {
            let matches = 0, total = 0;
            Object.keys(cssObject).forEach((cssProperty) => {
                const cssValue = cssObject[cssProperty];
                if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isFunction)(cssValue)) {
                    if (cssValue(this.j, (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.css)(node, cssProperty).toString())) {
                        matches += 1;
                    }
                }
                else {
                    if (cssValue.indexOf((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.css)(node, cssProperty).toString()) !== -1) {
                        matches += 1;
                    }
                }
                total += 1;
            });
            return total === matches;
        };
        this.prependInvisibleInput(this.container);
    }
    /**
     * Adds an invisible element to the container that can handle the
     * situation when the editor is inside the <label>
     *
     * @see https://github.com/jodit/jodit-react/issues/138
     */
    prependInvisibleInput(container) {
        const input = this.j.create.element('input', {
            tabIndex: -1,
            disabled: true, // Because <label> can trigger click
            style: 'width: 0; height:0; position: absolute; visibility: hidden;'
        });
        jodit_core_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.appendChildFirst(container, input);
    }
    /**
     * Show the inline toolbar inside WYSIWYG editor.
     * @param bound - you can set the place for displaying the toolbar,
     * or the place will be in the place of the cursor
     */
    showInline(bound) {
        this.jodit.e.fire('showInlineToolbar', bound);
    }
    hide() {
        this.jodit.e.fire('hidePopup');
        super.hide();
        this.jodit.e.fire('toggleToolbar');
    }
    show() {
        super.show();
        this.jodit.e.fire('toggleToolbar');
    }
};
ToolbarEditorCollection = (0,tslib__WEBPACK_IMPORTED_MODULE_5__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__.component
], ToolbarEditorCollection);



/***/ }),

/***/ 55027:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OT: function() { return /* binding */ makeSelect; },
/* harmony export */   RP: function() { return /* binding */ makeCollection; },
/* harmony export */   gu: function() { return /* binding */ makeButton; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76974);
/* harmony import */ var _collection_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(32596);
/* harmony import */ var _collection_editor_collection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(97725);
/* harmony import */ var _button_button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(40932);
/* harmony import */ var _button_content__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(16977);
/* harmony import */ var _button_select_select__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(38178);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */






/**
 * Collection factory
 */
function makeCollection(jodit, parentElement) {
    const collection = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.isJoditObject)(jodit)
        ? new _collection_editor_collection__WEBPACK_IMPORTED_MODULE_2__/* .ToolbarEditorCollection */ .N(jodit)
        : new _collection_collection__WEBPACK_IMPORTED_MODULE_1__/* .ToolbarCollection */ .n(jodit);
    if (jodit.o.textIcons) {
        collection.container.classList.add('jodit_text_icons');
    }
    if (parentElement) {
        collection.parentElement = parentElement;
    }
    if (jodit.o.toolbarButtonSize) {
        collection.buttonSize = jodit.o.toolbarButtonSize;
    }
    return collection;
}
/**
 * Button factory
 */
function makeButton(jodit, control, target = null) {
    if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.isFunction)(control.getContent)) {
        return new _button_content__WEBPACK_IMPORTED_MODULE_4__/* .ToolbarContent */ .c(jodit, control, target);
    }
    const button = new _button_button__WEBPACK_IMPORTED_MODULE_3__/* .ToolbarButton */ .h(jodit, control, target);
    button.state.tabIndex = jodit.o.allowTabNavigation ? 0 : -1;
    return button;
}
function makeSelect(view, control, target = null) {
    return new _button_select_select__WEBPACK_IMPORTED_MODULE_5__/* .ToolbarSelect */ .v(view, control, target);
}


/***/ }),

/***/ 75771:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_helpers_checker_is_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(63738);
/* harmony import */ var jodit_core_helpers_checker_is_jodit_object__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8133);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



/**
 * Module for processing download documents and images by Drag and Drop
 * Drag and Drop files
 */
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.enableDragAndDropFileToEditor = true;
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.uploader = {
    url: '',
    insertImageAsBase64URI: false,
    imagesExtensions: ['jpg', 'png', 'jpeg', 'gif'],
    headers: null,
    data: null,
    filesVariableName(i) {
        return `files[${i}]`;
    },
    withCredentials: false,
    pathVariableName: 'path',
    format: 'json',
    method: 'POST',
    prepareData(formData) {
        return formData;
    },
    isSuccess(resp) {
        return resp.success;
    },
    getMessage(resp) {
        return resp.data.messages !== undefined && (0,jodit_core_helpers_checker_is_array__WEBPACK_IMPORTED_MODULE_1__/* .isArray */ .k)(resp.data.messages)
            ? resp.data.messages.join(' ')
            : '';
    },
    /**
     * @see [[IUploader.processFileName]]
     */
    processFileName(key, file, name) {
        return [key, file, name];
    },
    process(resp) {
        return resp.data;
    },
    error(e) {
        this.j.message.error(e.message, 4000);
    },
    getDisplayName(baseurl, filename) {
        return baseurl + filename;
    },
    defaultHandlerSuccess(resp) {
        const j = this.j || this;
        if (!(0,jodit_core_helpers_checker_is_jodit_object__WEBPACK_IMPORTED_MODULE_2__/* .isJoditObject */ .Z)(j)) {
            return;
        }
        if (resp.files && resp.files.length) {
            resp.files.forEach((filename, index) => {
                const [tagName, attr] = resp.isImages && resp.isImages[index]
                    ? ['img', 'src']
                    : ['a', 'href'];
                const elm = j.createInside.element(tagName);
                elm.setAttribute(attr, resp.baseurl + filename);
                if (tagName === 'a') {
                    elm.textContent = j.o.uploader.getDisplayName.call(this, resp.baseurl, filename);
                }
                if (tagName === 'img') {
                    j.s.insertImage(elm, null, j.o.imageDefaultWidth);
                }
                else {
                    j.s.insertNode(elm);
                }
            });
        }
    },
    defaultHandlerError(e) {
        this.j.message.error(e.message);
    },
    contentType(requestData) {
        return this.ow.FormData !== undefined &&
            typeof requestData !== 'string'
            ? false
            : 'application/x-www-form-urlencoded; charset=UTF-8';
    }
};


/***/ }),

/***/ 79762:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   i: function() { return /* binding */ buildData; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76974);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

function buildData(uploader, data) {
    if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.isFunction)(uploader.o.buildData)) {
        return uploader.o.buildData.call(uploader, data);
    }
    const FD = uploader.ow.FormData;
    if (FD !== undefined) {
        if (data instanceof FD) {
            return data;
        }
        if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.isString)(data)) {
            return data;
        }
        const newData = new FD();
        const dict = data;
        Object.keys(dict).forEach(key => {
            newData.append(key, dict[key]);
        });
        return newData;
    }
    return data;
}


/***/ }),

/***/ 16907:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   O: function() { return /* binding */ dataURItoBlob; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module modules/uploader
 */
/**
 * Convert dataURI to Blob
 */
function dataURItoBlob(dataURI) {
    // convert base64 to raw binary data held in a string
    // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this
    const byteString = atob(dataURI.split(',')[1]), 
    // separate out the mime component
    mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0], 
    // write the bytes of the string to an ArrayBuffer
    ab = new ArrayBuffer(byteString.length), ia = new Uint8Array(ab);
    for (let i = 0; i < byteString.length; i += 1) {
        ia[i] = byteString.charCodeAt(i);
    }
    return new Blob([ia], { type: mimeString });
}


/***/ }),

/***/ 33726:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Ap: function() { return /* reexport safe */ _send__WEBPACK_IMPORTED_MODULE_3__.A; },
/* harmony export */   OP: function() { return /* reexport safe */ _data_uri_to_blob__WEBPACK_IMPORTED_MODULE_1__.O; },
/* harmony export */   g0: function() { return /* reexport safe */ _process_old_browser_drag__WEBPACK_IMPORTED_MODULE_0__.g; },
/* harmony export */   il: function() { return /* reexport safe */ _send_files__WEBPACK_IMPORTED_MODULE_4__.i; },
/* harmony export */   lW: function() { return /* reexport safe */ _send__WEBPACK_IMPORTED_MODULE_3__.l; },
/* harmony export */   nw: function() { return /* binding */ hasFiles; },
/* harmony export */   tc: function() { return /* binding */ hasItems; }
/* harmony export */ });
/* harmony import */ var _process_old_browser_drag__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(93665);
/* harmony import */ var _data_uri_to_blob__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16907);
/* harmony import */ var _build_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(79762);
/* harmony import */ var _send__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(49094);
/* harmony import */ var _send_files__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(73665);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */





function hasFiles(data) {
    return Boolean(data && data.files && data.files.length > 0);
}
function hasItems(data) {
    return Boolean(data && data.items && data.items.length > 0);
}


/***/ }),

/***/ 93665:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   g: function() { return /* binding */ processOldBrowserDrag; }
/* harmony export */ });
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(79102);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(46879);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(33726);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */





function processOldBrowserDrag(self, cData, handlerSuccess, handlerError, onFinally) {
    if (cData && (!cData.types.length || cData.types[0] !== jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.TEXT_PLAIN)) {
        const div = self.j.c.div('', {
            tabindex: -1,
            style: 'left: -9999px; top: 0; width: 0; height: 100%;line-height: 140%; ' +
                'overflow: hidden; position: fixed; z-index: 2147483647; word-break: break-all;',
            contenteditable: true
        });
        (0,jodit_core_global__WEBPACK_IMPORTED_MODULE_1__/* .getContainer */ .ZO)(self.j, self.constructor).appendChild(div);
        const selection = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.isJoditObject)(self.j) ? self.j.s.save() : null, restore = () => selection && (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.isJoditObject)(self.j) && self.j.s.restore();
        div.focus();
        self.j.async.setTimeout(() => {
            const child = div.firstChild;
            jodit_core_dom__WEBPACK_IMPORTED_MODULE_3__/* .Dom */ .i.safeRemove(div);
            if (child && child.hasAttribute('src')) {
                const src = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.attr)(child, 'src') || '';
                restore();
                (0,_index__WEBPACK_IMPORTED_MODULE_4__/* .sendFiles */ .il)(self, [(0,_index__WEBPACK_IMPORTED_MODULE_4__/* .dataURItoBlob */ .OP)(src)], handlerSuccess, handlerError).finally(onFinally);
            }
        }, self.j.defaultTimeout);
    }
}


/***/ }),

/***/ 73665:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   i: function() { return /* binding */ sendFiles; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76974);
/* harmony import */ var jodit_modules_uploader_helpers_send__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(49094);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/**
 * Send files to server
 */
function sendFiles(uploader, files, handlerSuccess, handlerError, process) {
    if (!files) {
        return Promise.reject((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.error)('Need files'));
    }
    const { o } = uploader;
    let fileList = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.toArray)(files);
    if (!fileList.length) {
        return Promise.reject((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.error)('Need files'));
    }
    const promises = [];
    if (o.insertImageAsBase64URI) {
        let file, i;
        for (i = 0; i < fileList.length; i += 1) {
            file = fileList[i];
            if (file && file.type) {
                const mime = file.type.match(/\/([a-z0-9]+)/i);
                const extension = mime[1] ? mime[1].toLowerCase() : '';
                if (o.imagesExtensions.includes(extension)) {
                    const reader = new FileReader();
                    promises.push(uploader.j.async.promise((resolve, reject) => {
                        reader.onerror = reject;
                        reader.onloadend = () => {
                            const resp = {
                                baseurl: '',
                                files: [reader.result],
                                isImages: [true]
                            };
                            const handler = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.isFunction)(handlerSuccess)
                                ? handlerSuccess
                                : o.defaultHandlerSuccess;
                            handler.call(uploader, resp);
                            resolve(resp);
                        };
                        reader.readAsDataURL(file);
                    }));
                    fileList[i] = null;
                }
            }
        }
    }
    fileList = fileList.filter(a => a);
    if (fileList.length) {
        const form = new FormData();
        form.append(o.pathVariableName, uploader.path);
        form.append('source', uploader.source);
        let file;
        for (let i = 0; i < fileList.length; i += 1) {
            file = fileList[i];
            if (file) {
                const hasRealExtension = /\.[\d\w]+$/.test(file.name);
                const mime = file.type.match(/\/([a-z0-9]+)/i);
                const extension = mime && mime[1] ? mime[1].toLowerCase() : '';
                let newName = fileList[i].name ||
                    Math.random().toString().replace('.', '');
                if (!hasRealExtension && extension) {
                    let extForReg = extension;
                    if (['jpeg', 'jpg'].includes(extForReg)) {
                        extForReg = 'jpeg|jpg';
                    }
                    const reEnd = new RegExp('.(' + extForReg + ')$', 'i');
                    if (!reEnd.test(newName)) {
                        newName += '.' + extension;
                    }
                }
                const [key, iFile, name] = o.processFileName.call(uploader, o.filesVariableName(i), fileList[i], newName);
                form.append(key, iFile, name);
            }
        }
        if (process) {
            process(form);
        }
        if (o.data && (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(o.data)) {
            Object.keys(o.data).forEach((key) => {
                form.append(key, o.data[key]);
            });
        }
        o.prepareData.call(uploader, form);
        promises.push((0,jodit_modules_uploader_helpers_send__WEBPACK_IMPORTED_MODULE_1__/* .send */ .l)(uploader, form)
            .then(resp => {
            if (o.isSuccess.call(uploader, resp)) {
                const handler = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.isFunction)(handlerSuccess)
                    ? handlerSuccess
                    : o.defaultHandlerSuccess;
                handler.call(uploader, o.process.call(uploader, resp));
                return resp;
            }
            const handler = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.isFunction)(handlerError)
                ? handlerError
                : o.defaultHandlerError;
            handler.call(uploader, (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.error)(o.getMessage.call(uploader, resp)));
            return resp;
        })
            .then(() => {
            uploader.j.events && uploader.j.e.fire('filesWereUploaded');
        }));
    }
    return Promise.all(promises);
}


/***/ }),

/***/ 49094:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: function() { return /* binding */ ajaxInstances; },
/* harmony export */   l: function() { return /* binding */ send; }
/* harmony export */ });
/* harmony import */ var jodit_core_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60072);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76974);
/* harmony import */ var jodit_modules_uploader_helpers_build_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(79762);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



const ajaxInstances = new WeakMap();
function send(uploader, data) {
    const requestData = (0,jodit_modules_uploader_helpers_build_data__WEBPACK_IMPORTED_MODULE_2__/* .buildData */ .i)(uploader, data);
    const sendData = (request) => {
        const ajax = new jodit_core_request__WEBPACK_IMPORTED_MODULE_0__/* .Ajax */ .t({
            xhr: () => {
                const xhr = new XMLHttpRequest();
                if (uploader.j.ow.FormData !== undefined &&
                    xhr.upload) {
                    uploader.j.progressbar.show().progress(10);
                    xhr.upload.addEventListener('progress', evt => {
                        if (evt.lengthComputable) {
                            let percentComplete = evt.loaded / evt.total;
                            percentComplete *= 100;
                            console.log('progress', percentComplete);
                            uploader.j.progressbar
                                .show()
                                .progress(percentComplete);
                            if (percentComplete >= 100) {
                                uploader.j.progressbar.hide();
                            }
                        }
                    }, false);
                }
                else {
                    uploader.j.progressbar.hide();
                }
                return xhr;
            },
            method: uploader.o.method || 'POST',
            data: request,
            url: (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isFunction)(uploader.o.url)
                ? uploader.o.url(request)
                : uploader.o.url,
            headers: uploader.o.headers,
            queryBuild: uploader.o.queryBuild,
            contentType: uploader.o.contentType.call(uploader, request),
            withCredentials: uploader.o.withCredentials || false
        });
        let instances = ajaxInstances.get(uploader);
        if (!instances) {
            instances = new Set();
            ajaxInstances.set(uploader, instances);
        }
        instances.add(ajax);
        uploader.j.e.one('beforeDestruct', ajax.destruct);
        return ajax
            .send()
            .then(resp => resp.json())
            .catch(error => {
            return {
                success: false,
                data: {
                    messages: [error]
                }
            };
        })
            .finally(() => {
            ajax.destruct();
            instances === null || instances === void 0 ? void 0 : instances.delete(ajax);
        });
    };
    if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isPromise)(requestData)) {
        return requestData.then(sendData).catch(error => {
            uploader.o.error.call(uploader, error);
        });
    }
    return sendData(requestData);
}


/***/ }),

/***/ 84315:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Q: function() { return /* binding */ Uploader; }
/* harmony export */ });
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_component___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2581);
/* harmony import */ var jodit_modules_uploader_helpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(33726);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(75771);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * [[include:modules/uploader/README.md]]
 * @packageDocumentation
 * @module modules/uploader
 */







class Uploader extends jodit_core_component___WEBPACK_IMPORTED_MODULE_3__/* .ViewComponent */ .Hr {
    get j() {
        return this.jodit;
    }
    /** @override */
    className() {
        return 'Uploader';
    }
    get o() {
        return this.options;
    }
    /**
     * It sets the path for uploading files
     */
    setPath(path) {
        this.path = path;
        return this;
    }
    /**
     * It sets the source for connector
     */
    setSource(source) {
        this.source = source;
        return this;
    }
    /**
     * Set the handlers Drag and Drop to `$form`
     *
     * @param form - Form or any Node on which you can drag and drop the file. In addition will be processed
     * <code>&lt;input type="file" &gt;</code>
     * @param handlerSuccess - The function be called when a successful uploading files
     * to the server
     * @param handlerError - The function that will be called during a failed download files a server
     * @example
     * ```javascript
     * var $form = jQuery('<form><input type="text" typpe="file"></form>');
     * jQuery('body').append($form);
     * Jodit.editors.someidfoeditor.uploader.bind($form[0], function (files) {
     *     var i;
     *     for (i = 0; i < data.files.length; i += 1) {
     *         parent.s.insertImage(data.files[i])
     *     }
     * });
     * ```
     */
    bind(form, handlerSuccess, handlerError) {
        const onFinally = () => {
            form.classList.remove('jodit_drag_hover');
        };
        const self = this, onPaste = (e) => {
            let i, file, extension;
            const cData = e.clipboardData;
            const processData = (formdata) => {
                if (file) {
                    formdata.append('extension', extension);
                    formdata.append('mimetype', file.type);
                }
            };
            // send data on server
            if (!jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.IS_IE && (0,jodit_modules_uploader_helpers__WEBPACK_IMPORTED_MODULE_4__/* .hasFiles */ .nw)(cData)) {
                (0,jodit_modules_uploader_helpers__WEBPACK_IMPORTED_MODULE_4__/* .sendFiles */ .il)(self, cData.files, handlerSuccess, handlerError).finally(onFinally);
                return false;
            }
            if (jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.IS_IE && !jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.IS_ES_NEXT) {
                return (0,jodit_modules_uploader_helpers__WEBPACK_IMPORTED_MODULE_4__/* .processOldBrowserDrag */ .g0)(self, cData, handlerSuccess, handlerError, onFinally);
            }
            if ((0,jodit_modules_uploader_helpers__WEBPACK_IMPORTED_MODULE_4__/* .hasItems */ .tc)(cData)) {
                const { items } = cData;
                for (i = 0; i < items.length; i += 1) {
                    if (items[i].kind === 'file' &&
                        items[i].type === 'image/png') {
                        file = items[i].getAsFile();
                        if (file) {
                            const mime = file.type.match(/\/([a-z0-9]+)/i);
                            extension = mime[1]
                                ? mime[1].toLowerCase()
                                : '';
                            (0,jodit_modules_uploader_helpers__WEBPACK_IMPORTED_MODULE_4__/* .sendFiles */ .il)(self, [file], handlerSuccess, handlerError, processData).finally(onFinally);
                        }
                        e.preventDefault();
                        break;
                    }
                }
            }
        };
        if (self.j && self.j.editor !== form) {
            self.j.e.on(form, 'paste', onPaste);
        }
        else {
            self.j.e.on('beforePaste', onPaste);
        }
        this.attachEvents(form, handlerSuccess, handlerError, onFinally);
    }
    attachEvents(form, handlerSuccess, handlerError, onFinally) {
        const self = this;
        self.j.e
            .on(form, 'dragend dragover dragenter dragleave drop', (e) => {
            e.preventDefault();
        })
            .on(form, 'dragover', (event) => {
            if ((0,jodit_modules_uploader_helpers__WEBPACK_IMPORTED_MODULE_4__/* .hasFiles */ .nw)(event.dataTransfer) ||
                (0,jodit_modules_uploader_helpers__WEBPACK_IMPORTED_MODULE_4__/* .hasItems */ .tc)(event.dataTransfer)) {
                form.classList.add('jodit_drag_hover');
                event.preventDefault();
            }
        })
            .on(form, 'dragend dragleave', (event) => {
            form.classList.remove('jodit_drag_hover');
            if ((0,jodit_modules_uploader_helpers__WEBPACK_IMPORTED_MODULE_4__/* .hasFiles */ .nw)(event.dataTransfer)) {
                event.preventDefault();
            }
        })
            .on(form, 'drop', (event) => {
            form.classList.remove('jodit_drag_hover');
            if ((0,jodit_modules_uploader_helpers__WEBPACK_IMPORTED_MODULE_4__/* .hasFiles */ .nw)(event.dataTransfer)) {
                event.preventDefault();
                event.stopImmediatePropagation();
                (0,jodit_modules_uploader_helpers__WEBPACK_IMPORTED_MODULE_4__/* .sendFiles */ .il)(self, event.dataTransfer.files, handlerSuccess, handlerError).finally(onFinally);
            }
        });
        const inputFile = form.querySelector('input[type=file]');
        if (inputFile) {
            self.j.e.on(inputFile, 'change', () => {
                (0,jodit_modules_uploader_helpers__WEBPACK_IMPORTED_MODULE_4__/* .sendFiles */ .il)(self, inputFile.files, handlerSuccess, handlerError)
                    .then(() => {
                    inputFile.value = '';
                    if (!/safari/i.test(navigator.userAgent)) {
                        inputFile.type = '';
                        inputFile.type = 'file';
                    }
                })
                    .finally(onFinally);
            });
        }
    }
    /**
     * Upload images to a server by its URL, making it through the connector server.
     */
    uploadRemoteImage(url, handlerSuccess, handlerError) {
        const uploader = this, { o } = uploader;
        const handlerE = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.isFunction)(handlerError)
            ? handlerError
            : o.defaultHandlerError;
        (0,jodit_modules_uploader_helpers__WEBPACK_IMPORTED_MODULE_4__/* .send */ .lW)(uploader, {
            action: 'fileUploadRemote',
            url
        })
            .then(resp => {
            if (o.isSuccess.call(uploader, resp)) {
                const handler = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.isFunction)(handlerSuccess)
                    ? handlerSuccess
                    : o.defaultHandlerSuccess;
                handler.call(uploader, o.process.call(uploader, resp));
                return;
            }
            handlerE.call(uploader, (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.error)(o.getMessage.call(uploader, resp)));
        })
            .catch(e => handlerE.call(uploader, e));
    }
    constructor(editor, options) {
        super(editor);
        this.path = '';
        this.source = 'default';
        this.options = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.ConfigProto)(options || {}, (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.ConfigProto)(jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.defaultOptions.uploader, (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.isJoditObject)(editor) ? editor.o.uploader : {}));
    }
    destruct() {
        this.setStatus(jodit_core_component___WEBPACK_IMPORTED_MODULE_3__/* .STATUSES */ .n$.beforeDestruct);
        const instances = jodit_modules_uploader_helpers__WEBPACK_IMPORTED_MODULE_4__/* .ajaxInstances */ .Ap.get(this);
        if (instances) {
            instances.forEach(ajax => {
                try {
                    ajax.destruct();
                }
                catch (_a) { }
            });
            instances.clear();
        }
        super.destruct();
    }
}


/***/ }),

/***/ 59867:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Y: function() { return /* binding */ ColorPickerWidget; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14712);
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(46879);
/* harmony import */ var _palette_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(45394);
/* harmony import */ var _palette_svg__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_palette_svg__WEBPACK_IMPORTED_MODULE_3__);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * [[include:modules/widget/color-picker/README.md]]
 * @packageDocumentation
 * @module modules/widget/color-picker
 */





jodit_core_ui__WEBPACK_IMPORTED_MODULE_1__/* .Icon */ .JO.set('palette', (_palette_svg__WEBPACK_IMPORTED_MODULE_3___default()));
/**
 * Build color picker
 *
 * @param callback - Callback 'function (color) \{\}'
 * @param coldColor - Color value ex. #fff or rgb(123, 123, 123) or rgba(123, 123, 123, 1)
 * @example
 * ```javascript
 * const tabs = TabsWidget(editor, {
 *    'Text' : ColorPickerWidget(editor, function (color) {
 *         box.style.color = color;
 *     }, box.style.color),
 *     'Background' : ColorPickerWidget(editor, function (color) {
 *         box.style.backgroundColor = color;
 *     }, box.style.backgroundColor),
 * });
 * ```
 */
const ColorPickerWidget = (editor, callback, coldColor) => {
    const cn = 'jodit-color-picker', valueHex = (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_0__.normalizeColor)(coldColor), form = editor.c.div(cn), iconPalette = editor.o.textIcons
        ? `<span>${editor.i18n('palette')}</span>`
        : jodit_core_ui__WEBPACK_IMPORTED_MODULE_1__/* .Icon */ .JO.get('palette'), eachColor = (colors) => {
        const stack = [];
        if ((0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(colors)) {
            Object.keys(colors).forEach(key => {
                stack.push(`<div class="${cn}__group ${cn}__group-${key}">`);
                stack.push(eachColor(colors[key]));
                stack.push('</div>');
            });
        }
        else if ((0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_0__.isArray)(colors)) {
            colors.forEach(color => {
                stack.push(`<span class='${cn}__color-item ${valueHex === color
                    ? cn + '__color-item_active_true'
                    : ''}' title="${color}" style="background-color:${color}" data-color="${color}"></span>`);
            });
        }
        return stack.join('');
    };
    form.appendChild(editor.c.fromHTML(`<div class="${cn}__groups">${eachColor(editor.o.colors)}</div>`));
    form.appendChild(editor.c.fromHTML(`<div data-ref="extra" class="${cn}__extra"></div>`));
    const { extra } = (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_0__.refs)(form);
    if (editor.o.showBrowserColorPicker && (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_0__.hasBrowserColorPicker)()) {
        extra.appendChild(editor.c.fromHTML(`<div class="${cn}__native">${iconPalette}<input type="color" value="#ffffff"/></div>`));
        editor.e.on(form, 'change', (e) => {
            e.stopPropagation();
            const target = e.target;
            if (!target || !target.tagName || !jodit_core_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isTag(target, 'input')) {
                return;
            }
            const color = target.value || '';
            if ((0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_0__.isFunction)(callback)) {
                callback(color);
            }
            e.preventDefault();
        });
    }
    editor.e.on(form, 'mousedown touchend', (e) => {
        e.stopPropagation();
        e.preventDefault();
        let target = e.target;
        if ((!target ||
            !target.tagName ||
            jodit_core_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isTag(target, 'svg') ||
            jodit_core_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isTag(target, 'path')) &&
            target.parentNode) {
            target = jodit_core_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.closest(target.parentNode, 'span', editor.editor);
        }
        if (!jodit_core_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isTag(target, 'span') ||
            !target.classList.contains(cn + '__color-item')) {
            return;
        }
        const color = (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_0__.attr)(target, '-color') || '';
        if (callback && (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_0__.isFunction)(callback)) {
            callback(color);
        }
    });
    editor.e.fire('afterGenerateColorPicker', form, extra, callback, valueHex);
    return form;
};


/***/ }),

/***/ 64569:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   o: function() { return /* binding */ FileSelectorWidget; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(14712);
/* harmony import */ var jodit_modules_widget_tabs_tabs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5436);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




/**
 * Generate 3 tabs
 * upload - Use Drag and Drop
 * url - By specifying the image url
 * filebrowser - After opening the file browser. In the absence of one of the parameters will be less tabs
 *
 * @param callbacks - Object with keys `url`, `upload` and `filebrowser`, values which are callback
 * functions with different parameters
 */
const FileSelectorWidget = (editor, callbacks, elm, close, isImage = true) => {
    let currentImage;
    const tabs = [];
    if (callbacks.upload &&
        editor.o.uploader &&
        (editor.o.uploader.url || editor.o.uploader.insertImageAsBase64URI)) {
        const dragBox = editor.c.fromHTML('<div class="jodit-drag-and-drop__file-box">' +
            `<strong>${editor.i18n(isImage ? 'Drop image' : 'Drop file')}</strong>` +
            `<span><br>${editor.i18n('or click')}</span>` +
            `<input type="file" accept="${isImage ? 'image/*' : '*'}" tabindex="-1" dir="auto" multiple=""/>` +
            '</div>');
        editor.uploader.bind(dragBox, resp => {
            const handler = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.isFunction)(callbacks.upload)
                ? callbacks.upload
                : editor.o.uploader.defaultHandlerSuccess;
            if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.isFunction)(handler)) {
                handler.call(editor, resp);
            }
            editor.e.fire('closeAllPopups');
        }, error => {
            editor.message.error(error.message);
            editor.e.fire('closeAllPopups');
        });
        tabs.push({
            icon: 'upload',
            name: 'Upload',
            content: dragBox
        });
    }
    if (callbacks.filebrowser) {
        if (editor.o.filebrowser.ajax.url || editor.o.filebrowser.items.url) {
            tabs.push({
                icon: 'folder',
                name: 'Browse',
                content: () => {
                    close && close();
                    if (callbacks.filebrowser) {
                        editor.filebrowser.open(callbacks.filebrowser, isImage);
                    }
                }
            });
        }
    }
    if (callbacks.url) {
        const button = new jodit_core_ui__WEBPACK_IMPORTED_MODULE_2__/* .UIButton */ .y3(editor, {
            type: 'submit',
            variant: 'primary',
            text: 'Insert'
        }), form = new jodit_core_ui__WEBPACK_IMPORTED_MODULE_2__/* .UIForm */ .x4(editor, [
            new jodit_core_ui__WEBPACK_IMPORTED_MODULE_2__/* .UIInput */ .u3(editor, {
                required: true,
                label: 'URL',
                name: 'url',
                type: 'text',
                placeholder: 'https://'
            }),
            new jodit_core_ui__WEBPACK_IMPORTED_MODULE_2__/* .UIInput */ .u3(editor, {
                name: 'text',
                label: 'Alternative text'
            }),
            new jodit_core_ui__WEBPACK_IMPORTED_MODULE_2__/* .UIBlock */ .eC(editor, [button])
        ]);
        currentImage = null;
        if (elm &&
            !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(elm) &&
            !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isComment(elm) &&
            (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTag(elm, 'img') || (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.$$)('img', elm).length)) {
            currentImage = elm.tagName === 'IMG' ? elm : (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.$$)('img', elm)[0];
            val(form.container, 'input[name=url]', (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.attr)(currentImage, 'src'));
            val(form.container, 'input[name=text]', (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.attr)(currentImage, 'alt'));
            button.state.text = 'Update';
        }
        if (elm && jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTag(elm, 'a')) {
            val(form.container, 'input[name=url]', (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.attr)(elm, 'href'));
            val(form.container, 'input[name=text]', (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.attr)(elm, 'title'));
            button.state.text = 'Update';
        }
        form.onSubmit(data => {
            if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.isFunction)(callbacks.url)) {
                callbacks.url.call(editor, data.url, data.text);
            }
        });
        tabs.push({
            icon: 'link',
            name: 'URL',
            content: form.container
        });
    }
    return (0,jodit_modules_widget_tabs_tabs__WEBPACK_IMPORTED_MODULE_3__/* .TabsWidget */ .I)(editor, tabs);
};
function val(elm, selector, value) {
    const child = elm.querySelector(selector);
    if (!child) {
        return '';
    }
    if (value) {
        child.value = value;
    }
    return child.value;
}


/***/ }),

/***/ 6658:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IL: function() { return /* reexport safe */ _tabs_tabs__WEBPACK_IMPORTED_MODULE_1__.I; },
/* harmony export */   YW: function() { return /* reexport safe */ _color_picker_color_picker__WEBPACK_IMPORTED_MODULE_0__.Y; },
/* harmony export */   ov: function() { return /* reexport safe */ _file_selector_file_selector__WEBPACK_IMPORTED_MODULE_2__.o; }
/* harmony export */ });
/* harmony import */ var _color_picker_color_picker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59867);
/* harmony import */ var _tabs_tabs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5436);
/* harmony import */ var _file_selector_file_selector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(64569);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * [[include:modules/widget/README.md]]
 * @packageDocumentation
 * @module modules/widget
 */





/***/ }),

/***/ 5436:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   I: function() { return /* binding */ TabsWidget; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(69099);
/* harmony import */ var jodit_core_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14712);
/* harmony import */ var jodit_core_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2581);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9162);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * [[include:modules/widget/tabs/README.md]]
 * @packageDocumentation
 * @module modules/widget/tabs
 */






/**
 * Build tabs system
 *
 * @param tabs - PlainObject where 'key' will be tab's Title and `value` is tab's content
 * @param state - You can use for this param any HTML element for remembering active tab
 *
 * @example
 * ```javascript
 * const editor = Jodit.make('#editor');
 * const tabs = Jodit.modules.TabsWidget(editor, [
 *  { name: 'Images', content: '<div>Images</div>' },
 *  {
 *    name: 'Title 2',
 *    content: editor.c.fromHTML('<div>Some content</div>')
 *  },
 *  {
 *    name: 'Color Picker',
 *    content: ColorPickerWidget(
 *      editor,
 *      function (color) {
 *        box.style.color = color;
 *      },
 *      box.style.color
 *    )
 *  }
 * ]);
 * ```
 */
const TabsWidget = (jodit, tabs, state) => {
    const box = jodit.c.div('jodit-tabs'), tabBox = jodit.c.div('jodit-tabs__wrapper'), buttons = jodit.c.div('jodit-tabs__buttons'), nameToTab = {}, buttonList = [];
    let firstTab = '', tabCount = 0;
    box.appendChild(buttons);
    box.appendChild(tabBox);
    const setActive = (tab) => {
        if (!nameToTab[tab]) {
            return;
        }
        buttonList.forEach(b => {
            b.state.activated = false;
        });
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.$$)('.jodit-tab', tabBox).forEach(a => {
            a.classList.remove('jodit-tab_active');
        });
        nameToTab[tab].button.state.activated = true;
        nameToTab[tab].tab.classList.add('jodit-tab_active');
    };
    tabs.forEach(({ icon, name, content }) => {
        const tab = jodit.c.div('jodit-tab'), button = (0,jodit_core_ui__WEBPACK_IMPORTED_MODULE_1__/* .Button */ .zx)(jodit, icon || name, name);
        // Stop lose the focus
        jodit.e.on(button.container, 'mousedown', (e) => e.preventDefault());
        if (!firstTab) {
            firstTab = name;
        }
        buttons.appendChild(button.container);
        buttonList.push(button);
        button.container.classList.add('jodit-tabs__button', 'jodit-tabs__button_columns_' + tabs.length);
        if (!(0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_4__/* .isFunction */ .m)(content)) {
            tab.appendChild(jodit_core_component__WEBPACK_IMPORTED_MODULE_2__/* .Component */ .wA.isInstanceOf(content, jodit_core_ui__WEBPACK_IMPORTED_MODULE_1__/* .UIElement */ .u1)
                ? content.container
                : content);
        }
        else {
            tab.appendChild(jodit.c.div('jodit-tab_empty'));
        }
        tabBox.appendChild(tab);
        button.onAction(() => {
            setActive(name);
            if ((0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_4__/* .isFunction */ .m)(content) && !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_3__/* .Dom */ .i.isElement(content)) {
                content.call(jodit);
            }
            if (state) {
                state.__activeTab = name;
            }
            return false;
        });
        nameToTab[name] = {
            button,
            tab
        };
        tabCount += 1;
    });
    if (!tabCount) {
        return box;
    }
    (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.$$)('a', buttons).forEach(a => {
        a.style.width = (100 / tabCount).toFixed(10) + '%';
    });
    const tab = !state || !state.__activeTab || !nameToTab[state.__activeTab]
        ? firstTab
        : state.__activeTab;
    setActive(tab);
    if (state) {
        let __activeTab = state.__activeTab;
        Object.defineProperty(state, '__activeTab', {
            configurable: true,
            enumerable: false,
            get() {
                return __activeTab;
            },
            set(value) {
                __activeTab = value;
                setActive(value);
            }
        });
    }
    return box;
};


/***/ }),

/***/ 12487:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export backspace */
/* harmony import */ var jodit_core_plugin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7331);
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(69099);
/* harmony import */ var jodit_core_selection_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9105);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(79102);
/* harmony import */ var _cases__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(86687);
/* harmony import */ var _cases_check_not_collapsed__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(50447);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(82997);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */









class backspace extends jodit_core_plugin__WEBPACK_IMPORTED_MODULE_0__/* .Plugin */ .S {
    afterInit(jodit) {
        jodit
            .registerCommand('deleteButton', {
            exec: () => this.onDelete(false),
            hotkeys: jodit.o.delete.hotkeys.delete
        }, {
            stopPropagation: false
        })
            .registerCommand('backspaceButton', {
            exec: () => this.onDelete(true),
            hotkeys: jodit.o.delete.hotkeys.backspace
        }, {
            stopPropagation: false
        })
            .registerCommand('deleteWordButton', {
            exec: () => this.onDelete(false, 'word'),
            hotkeys: jodit.o.delete.hotkeys.deleteWord
        })
            .registerCommand('backspaceWordButton', {
            exec: () => this.onDelete(true, 'word'),
            hotkeys: jodit.o.delete.hotkeys.backspaceWord
        })
            .registerCommand('deleteSentenceButton', {
            exec: () => this.onDelete(false, 'sentence'),
            hotkeys: jodit.o.delete.hotkeys.deleteSentence
        })
            .registerCommand('backspaceSentenceButton', {
            exec: () => this.onDelete(true, 'sentence'),
            hotkeys: jodit.o.delete.hotkeys.backspaceSentence
        });
    }
    beforeDestruct(jodit) {
        jodit.e.off('afterCommand.delete');
    }
    /**
     * Listener BackSpace or Delete button
     */
    onDelete(backspace, mode = 'char') {
        const jodit = this.j;
        const sel = jodit.selection;
        if (!sel.isFocused()) {
            sel.focus();
        }
        if ((0,_cases_check_not_collapsed__WEBPACK_IMPORTED_MODULE_7__/* .checkNotCollapsed */ .F)(jodit)) {
            return false;
        }
        const range = sel.range;
        const fakeNode = jodit.createInside.text(jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.INVISIBLE_SPACE);
        try {
            jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeInsertNode(range, fakeNode);
            if (!jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isOrContains(jodit.editor, fakeNode)) {
                return;
            }
            if (jodit.e.fire('backSpaceBeforeCases', backspace, fakeNode)) {
                return false;
            }
            (0,jodit_core_selection_helpers__WEBPACK_IMPORTED_MODULE_3__/* .moveNodeInsideStart */ .F)(jodit, fakeNode, backspace);
            if (_cases__WEBPACK_IMPORTED_MODULE_5__/* .cases */ .c.some((func) => {
                if ((0,jodit_core_helpers_checker_is_function__WEBPACK_IMPORTED_MODULE_8__/* .isFunction */ .m)(func) &&
                    func(jodit, fakeNode, backspace, mode)) {
                    if (!jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.IS_PROD) {
                        console.info('Remove case:', func.name);
                    }
                    return true;
                }
            })) {
                return false;
            }
        }
        catch (e) {
            if (!jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.IS_PROD) {
                console.error(e);
            }
            throw e;
        }
        finally {
            jodit.e.fire('backSpaceAfterDelete', backspace, fakeNode);
            this.safeRemoveEmptyNode(fakeNode);
        }
        return false;
    }
    /**
     * Remove node and replace cursor position out of it
     */
    safeRemoveEmptyNode(fakeNode) {
        var _a, _b;
        const { range } = this.j.s;
        if (range.startContainer === fakeNode) {
            if (fakeNode.previousSibling) {
                if (jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(fakeNode.previousSibling)) {
                    range.setStart(fakeNode.previousSibling, (_b = (_a = fakeNode.previousSibling.nodeValue) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0);
                }
                else {
                    range.setStartAfter(fakeNode.previousSibling);
                }
            }
            else if (fakeNode.nextSibling) {
                if (jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(fakeNode.nextSibling)) {
                    range.setStart(fakeNode.nextSibling, 0);
                }
                else {
                    range.setStartBefore(fakeNode.nextSibling);
                }
            }
            range.collapse(true);
            this.j.s.selectRange(range);
        }
        jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(fakeNode);
    }
}
backspace.requires = ['hotkeys'];
jodit_core_global__WEBPACK_IMPORTED_MODULE_4__/* .pluginSystem */ .pw.add('backspace', backspace);


/***/ }),

/***/ 47688:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   g: function() { return /* binding */ checkJoinNeighbors; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_plugins_backspace_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(24794);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62924);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



/**
 * Check if two separate elements can be connected
 * @private
 */
function checkJoinNeighbors(jodit, fakeNode, backspace) {
    let nextBox = fakeNode, mainClosestBox = nextBox;
    // Find main big closest element
    while (nextBox &&
        !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.findNotEmptySibling(nextBox, backspace) &&
        nextBox.parentElement !== jodit.editor) {
        nextBox = nextBox.parentElement;
        mainClosestBox = nextBox;
    }
    if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isElement(mainClosestBox) &&
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isContentEditable(mainClosestBox, jodit.editor)) {
        const sibling = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.findNotEmptySibling(mainClosestBox, backspace);
        if (sibling &&
            (checkMoveListContent(jodit, mainClosestBox, sibling, backspace) ||
                moveContentAndRemoveEmpty(jodit, mainClosestBox, sibling, backspace))) {
            jodit.s.setCursorBefore(fakeNode);
            return true;
        }
    }
    return false;
}
function checkMoveListContent(jodit, mainClosestBox, sibling, backspace) {
    // Process UL/LI/OL cases
    const siblingIsList = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(sibling, jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.LIST_TAGS);
    const boxIsList = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(mainClosestBox, jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.LIST_TAGS);
    const elementChild = (elm, side) => side ? elm.firstElementChild : elm.lastElementChild;
    if (boxIsList) {
        sibling = jodit.createInside.element(jodit.o.enterBlock);
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.before(mainClosestBox, sibling);
        return moveContentAndRemoveEmpty(jodit, elementChild(mainClosestBox, backspace), sibling, backspace);
    }
    if (sibling && siblingIsList && !boxIsList) {
        return moveContentAndRemoveEmpty(jodit, mainClosestBox, elementChild(sibling, !backspace), backspace);
    }
    return false;
}
function moveContentAndRemoveEmpty(jodit, mainClosestBox, sibling, backspace) {
    // Move content and remove empty nodes
    if (mainClosestBox && jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isElement(sibling)) {
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.moveContent(mainClosestBox, sibling, !backspace, (0,jodit_plugins_backspace_helpers__WEBPACK_IMPORTED_MODULE_1__/* .getMoveFilter */ .U)(jodit));
        let remove = mainClosestBox;
        while (remove && remove !== jodit.editor && jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isEmpty(remove)) {
            const parent = remove.parentElement;
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(remove);
            remove = parent;
        }
        return true;
    }
    return false;
}


/***/ }),

/***/ 78075:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   W: function() { return /* binding */ checkJoinTwoLists; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers_utils_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(87398);
/* harmony import */ var jodit_plugins_backspace_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(24794);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



/**
 * Try join two UL elements
 *
 * @example
 * ```html
 * <ul><li>one</li></ul>|<ol><li>two</li></ol>
 * ```
 * Result
 * ```html
 * <ul><li>one|</li><li>two</li></ul>
 * ```
 * @private
 */
function checkJoinTwoLists(jodit, fakeNode, backspace) {
    const next = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.findSibling(fakeNode, backspace), prev = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.findSibling(fakeNode, !backspace);
    if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.closest(fakeNode, jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isElement, jodit.editor) &&
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isList(next) &&
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isList(prev) &&
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(next.lastElementChild, 'li') &&
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(prev.firstElementChild, 'li')) {
        const { setCursorBefore, setCursorAfter } = jodit.s;
        const target = next.lastElementChild, second = prev.firstElementChild;
        (0,jodit_core_helpers_utils_utils__WEBPACK_IMPORTED_MODULE_1__/* .call */ .RE)(!backspace ? jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.append : jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.prepend, second, fakeNode);
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.moveContent(prev, next, !backspace, (0,jodit_plugins_backspace_helpers__WEBPACK_IMPORTED_MODULE_2__/* .getMoveFilter */ .U)(jodit));
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(prev);
        (0,jodit_core_helpers_utils_utils__WEBPACK_IMPORTED_MODULE_1__/* .call */ .RE)(backspace ? jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.append : jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.prepend, target, fakeNode);
        (0,jodit_core_helpers_utils_utils__WEBPACK_IMPORTED_MODULE_1__/* .call */ .RE)(backspace ? setCursorBefore : setCursorAfter, fakeNode);
        return true;
    }
    return false;
}


/***/ }),

/***/ 50447:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   F: function() { return /* binding */ checkNotCollapsed; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * On Not collapsed selection - should only remove whole selected content
 *
 * @example
 * ```html
 * <p>first | stop</p><p>second | stop</p>
 * ```
 * result
 * ```html
 * <p>first | stop</p>
 * ```
 * @private
 */
function checkNotCollapsed(jodit) {
    if (!jodit.s.isCollapsed()) {
        jodit.execCommand('Delete');
        return true;
    }
    return false;
}


/***/ }),

/***/ 23232:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   p: function() { return /* binding */ checkRemoveChar; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62924);
/* harmony import */ var jodit_plugins_backspace_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(24794);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




/**
 * Check possibility the char can be removed
 *
 * @example
 * ```html
 * te|st
 * ```
 * result
 * ```html
 * t|st
 * ```
 * @private
 */
function checkRemoveChar(jodit, fakeNode, backspace, mode) {
    var _a, _b, _c;
    const step = backspace ? -1 : 1;
    const anotherSibling = jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.sibling(fakeNode, !backspace);
    let sibling = jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.sibling(fakeNode, backspace), removeNeighbor = null;
    let charRemoved = false, removed;
    const getNextInlineSibling = (sibling) => {
        let nextSibling = jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.sibling(sibling, backspace);
        if (!nextSibling &&
            sibling.parentNode &&
            sibling.parentNode !== jodit.editor) {
            nextSibling = (0,jodit_plugins_backspace_helpers__WEBPACK_IMPORTED_MODULE_3__/* .findMostNestedNeighbor */ .G)(sibling, !backspace, jodit.editor, true);
        }
        return nextSibling;
    };
    if (!sibling) {
        sibling = getNextInlineSibling(fakeNode);
    }
    while (sibling && (jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isText(sibling) || jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isInlineBlock(sibling))) {
        while (jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isInlineBlock(sibling)) {
            sibling = (backspace ? sibling === null || sibling === void 0 ? void 0 : sibling.lastChild : sibling === null || sibling === void 0 ? void 0 : sibling.firstChild);
        }
        if (!sibling) {
            break;
        }
        if ((_a = sibling.nodeValue) === null || _a === void 0 ? void 0 : _a.length) {
            // For Unicode escapes
            let value = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.toArray)(sibling.nodeValue);
            const length = value.length;
            let index = backspace ? length - 1 : 0;
            if (value[index] === jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.INVISIBLE_SPACE) {
                while (value[index] === jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.INVISIBLE_SPACE) {
                    index += step;
                }
            }
            removed = value[index];
            if (value[index + step] === jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.INVISIBLE_SPACE) {
                index += step;
                while (value[index] === jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.INVISIBLE_SPACE) {
                    index += step;
                }
                index += backspace ? 1 : -1;
            }
            if (backspace && index < 0) {
                value = [];
            }
            else {
                value = value.slice(backspace ? 0 : index + 1, backspace ? index : length);
            }
            if (!anotherSibling ||
                !jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isText(anotherSibling) ||
                (!backspace ? / $/ : /^ /).test((_b = anotherSibling.nodeValue) !== null && _b !== void 0 ? _b : '') ||
                !(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.trimInv)(anotherSibling.nodeValue || '').length) {
                for (let i = backspace ? value.length - 1 : 0; backspace ? i >= 0 : i < value.length; i += backspace ? -1 : 1) {
                    if (value[i] === ' ') {
                        value[i] = jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.NBSP_SPACE;
                    }
                    else {
                        break;
                    }
                }
            }
            sibling.nodeValue = value.join('');
        }
        if (!((_c = sibling.nodeValue) === null || _c === void 0 ? void 0 : _c.length)) {
            removeNeighbor = sibling;
        }
        if (!(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isVoid)(removed) && removed !== jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.INVISIBLE_SPACE) {
            charRemoved = true;
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.call)(backspace ? jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.after : jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.before, sibling, fakeNode);
            if (mode === 'sentence' ||
                (mode === 'word' && removed !== ' ' && removed !== jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.NBSP_SPACE)) {
                checkRemoveChar(jodit, fakeNode, backspace, mode);
            }
            break;
        }
        const nextSibling = getNextInlineSibling(sibling);
        if (removeNeighbor) {
            jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(removeNeighbor);
            removeNeighbor = null;
        }
        sibling = nextSibling;
    }
    if (removeNeighbor) {
        jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(removeNeighbor);
        removeNeighbor = null;
    }
    if (charRemoved) {
        removeEmptyForParent(fakeNode, 'a');
        addBRInsideEmptyBlock(jodit, fakeNode);
        jodit.s.setCursorBefore(fakeNode);
        if (jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(fakeNode.previousSibling, 'br') &&
            !jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.findNotEmptySibling(fakeNode, false)) {
            jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.after(fakeNode, jodit.createInside.element('br'));
        }
    }
    return charRemoved;
}
/**
 * Helper remove all empty inline parents
 */
function removeEmptyForParent(node, tags) {
    let parent = node.parentElement;
    while (parent && jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isInlineBlock(parent) && jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(parent, tags)) {
        const p = parent.parentElement;
        if (jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isEmpty(parent)) {
            jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.after(parent, node);
            jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(parent);
        }
        parent = p;
    }
}
/**
 * Helper add BR element inside empty block element
 */
function addBRInsideEmptyBlock(jodit, node) {
    if (node.parentElement !== jodit.editor &&
        jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isBlock(node.parentElement) &&
        jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.each(node.parentElement, jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isEmptyTextNode)) {
        jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.after(node, jodit.createInside.element('br'));
    }
}


/***/ }),

/***/ 20928:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   W: function() { return /* binding */ checkRemoveContentNotEditable; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_selection_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9105);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



/**
 * Checks if a non-editable element can be deleted
 * @private
 */
function checkRemoveContentNotEditable(jodit, fakeNode, backspace) {
    let neighbor = jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.findSibling(fakeNode, backspace);
    if (!neighbor &&
        fakeNode.parentElement &&
        fakeNode.parentElement !== jodit.editor) {
        neighbor = jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.findSibling(fakeNode.parentElement, backspace);
    }
    if (jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isElement(neighbor) &&
        !jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isContentEditable(neighbor, jodit.editor)) {
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.call)(backspace ? jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.before : jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.after, neighbor, fakeNode);
        jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(neighbor);
        (0,jodit_core_selection_helpers__WEBPACK_IMPORTED_MODULE_2__/* .moveNodeInsideStart */ .F)(jodit, fakeNode, backspace);
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.call)(backspace ? jodit.s.setCursorBefore : jodit.s.setCursorAfter, fakeNode);
        return true;
    }
    return false;
}


/***/ }),

/***/ 23958:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   L: function() { return /* binding */ checkRemoveEmptyNeighbor; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * Check if it is possible to remove an empty adjacent element.
 *
 * @example
 * ```html
 * <p><br></p><p>|second stop</p>
 * ```
 * result
 * ```html
 * <p>|second stop</p>
 * ```
 * @private
 */
function checkRemoveEmptyNeighbor(jodit, fakeNode, backspace) {
    const parent = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.closest(fakeNode, jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isElement, jodit.editor);
    if (!parent) {
        return false;
    }
    const neighbor = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.findNotEmptySibling(parent, backspace);
    if (neighbor && jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isEmpty(neighbor)) {
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(neighbor);
        jodit.s.setCursorBefore(fakeNode);
        return true;
    }
    return false;
}


/***/ }),

/***/ 72629:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   J: function() { return /* binding */ checkRemoveEmptyParent; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62924);
/* harmony import */ var _check_join_two_lists__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(78075);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



/**
 * Check if the current empty item can be removed
 *
 * @example
 * ```html
 * <p>first stop</p><p>|<br></p>
 * ```
 * result
 * ```html
 * <p>first stop|</p>
 * ```
 *
 * @private
 */
function checkRemoveEmptyParent(jodit, fakeNode, backspace) {
    let found = false;
    const { setCursorBefore, setCursorIn } = jodit.s;
    let prn = jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.closest(fakeNode, jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isElement, jodit.editor);
    if (!prn || !jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isEmpty(prn)) {
        return false;
    }
    const neighbor = jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.findNotEmptyNeighbor(fakeNode, backspace, jodit.editor);
    do {
        if (prn && jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isEmpty(prn) && !jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isCell(prn)) {
            jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.after(prn, fakeNode);
            const tmp = jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.closest(prn, n => jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isElement(n) && n !== prn, jodit.editor);
            jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(prn);
            found = true;
            prn = tmp;
        }
        else {
            break;
        }
    } while (prn);
    if (found && (0,_check_join_two_lists__WEBPACK_IMPORTED_MODULE_2__/* .checkJoinTwoLists */ .W)(jodit, fakeNode, backspace)) {
        return true;
    }
    if (neighbor &&
        !jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isText(neighbor) &&
        !jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(neighbor, jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.INSEPARABLE_TAGS)) {
        setCursorIn(neighbor, !backspace);
    }
    else {
        setCursorBefore(fakeNode);
    }
    return found;
}


/***/ }),

/***/ 38434:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: function() { return /* binding */ checkRemoveUnbreakableElement; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62924);
/* harmony import */ var _check_remove_empty_parent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(72629);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



/**
 * Check possibility inseparable Element can be removed (img, hr etc.)
 *
 * @example
 * ```html
 * <p>first second <img>| stop</p>
 * ```
 * result
 * ```html
 * <p>first second | stop</p>
 * ```
 *
 * @private
 */
function checkRemoveUnbreakableElement(jodit, fakeNode, backspace) {
    const neighbor = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.findSibling(fakeNode, backspace);
    if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isElement(neighbor) &&
        (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(neighbor, jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.INSEPARABLE_TAGS) || jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isEmpty(neighbor))) {
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(neighbor);
        if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(neighbor, 'br') &&
            !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.findNotEmptySibling(fakeNode, false)) {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.after(fakeNode, jodit.createInside.element('br'));
        }
        jodit.s.setCursorBefore(fakeNode);
        if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(neighbor, 'br')) {
            (0,_check_remove_empty_parent__WEBPACK_IMPORTED_MODULE_2__/* .checkRemoveEmptyParent */ .J)(jodit, fakeNode, backspace);
        }
        return true;
    }
    return false;
}


/***/ }),

/***/ 92511:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   R: function() { return /* binding */ checkTableCell; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * Inside the CELL table - nothing to do
 *
 * @example
 * ```html
 * <table><tr><td>|test</td></tr></table>
 * ```
 * result
 * ```html
 * <table><tr><td>|test</td></tr></table>
 * ```
 *
 * @private
 */
function checkTableCell(jodit, fakeNode) {
    const cell = fakeNode.parentElement;
    if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isCell(cell)) {
        return true;
    }
    return false;
}


/***/ }),

/***/ 54556:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   k: function() { return /* binding */ checkUnwrapFirstListItem; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(86284);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/**
 * For first item in list on backspace try move his content in new P
 *
 * @example
 * ```html
 * <ul><li>|first</li><li>second</li></ul>
 * ```
 * Result
 * ```html
 * <p>|first</p><ul><li>second</li></ul>
 * ```
 *
 * @private
 */
function checkUnwrapFirstListItem(jodit, fakeNode, backspace) {
    var _a;
    const li = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.closest(fakeNode, jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isElement, jodit.editor);
    const { s } = jodit;
    if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isLeaf(li) &&
        ((_a = li === null || li === void 0 ? void 0 : li.parentElement) === null || _a === void 0 ? void 0 : _a[backspace ? 'firstElementChild' : 'lastElementChild']) === li &&
        s.cursorInTheEdge(backspace, li)) {
        const ul = li.parentElement;
        const p = jodit.createInside.element(jodit.o.enterBlock);
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.call)(backspace ? jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.before : jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.after, ul, p);
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.moveContent(li, p);
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(li);
        if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isEmpty(ul)) {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(ul);
        }
        (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.call)(backspace ? s.setCursorBefore : s.setCursorAfter, fakeNode);
        return true;
    }
    return false;
}


/***/ }),

/***/ 86687:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c: function() { return /* binding */ cases; }
/* harmony export */ });
/* harmony import */ var _check_remove_unbreakable_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(38434);
/* harmony import */ var _check_remove_content_not_editable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20928);
/* harmony import */ var _check_remove_char__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(23232);
/* harmony import */ var _check_table_cell__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(92511);
/* harmony import */ var _check_remove_empty_parent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(72629);
/* harmony import */ var _check_remove_empty_neighbor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(23958);
/* harmony import */ var _check_join_two_lists__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(78075);
/* harmony import */ var _check_join_neighbors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(47688);
/* harmony import */ var _check_unwrap_first_list_item__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(54556);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module plugins/backspace
 */









/**
 * @private
 */
const cases = [
    _check_remove_unbreakable_element__WEBPACK_IMPORTED_MODULE_0__/* .checkRemoveUnbreakableElement */ .a,
    _check_remove_content_not_editable__WEBPACK_IMPORTED_MODULE_1__/* .checkRemoveContentNotEditable */ .W,
    _check_remove_char__WEBPACK_IMPORTED_MODULE_2__/* .checkRemoveChar */ .p,
    _check_table_cell__WEBPACK_IMPORTED_MODULE_3__/* .checkTableCell */ .R,
    _check_remove_empty_parent__WEBPACK_IMPORTED_MODULE_4__/* .checkRemoveEmptyParent */ .J,
    _check_remove_empty_neighbor__WEBPACK_IMPORTED_MODULE_5__/* .checkRemoveEmptyNeighbor */ .L,
    _check_join_two_lists__WEBPACK_IMPORTED_MODULE_6__/* .checkJoinTwoLists */ .W,
    _check_join_neighbors__WEBPACK_IMPORTED_MODULE_7__/* .checkJoinNeighbors */ .g,
    _check_unwrap_first_list_item__WEBPACK_IMPORTED_MODULE_8__/* .checkUnwrapFirstListItem */ .k
];


/***/ }),

/***/ 82997:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module plugins/backspace
 */

jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.delete = {
    hotkeys: {
        delete: ['delete', 'cmd+backspace'],
        deleteWord: ['ctrl+delete', 'cmd+alt+backspace', 'ctrl+alt+backspace'],
        deleteSentence: ['ctrl+shift+delete', 'cmd+shift+delete'],
        backspace: ['backspace'],
        backspaceWord: ['ctrl+backspace'],
        backspaceSentence: ['ctrl+shift+backspace', 'cmd+shift+backspace']
    }
};


/***/ }),

/***/ 24794:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   G: function() { return /* binding */ findMostNestedNeighbor; },
/* harmony export */   U: function() { return /* binding */ getMoveFilter; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46879);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * Finds the nearest neighbor that would be in the maximum nesting depth.
 * Ie if neighbor `<DIV><SPAN>Text` then return Text node.
 * @private
 */
function findMostNestedNeighbor(node, right, root, onlyInlide = false) {
    const nextChild = (node) => right ? node.firstChild : node.lastChild;
    let next = jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.findNotEmptyNeighbor(node, !right, root);
    if (onlyInlide && jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isElement(next) && !jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isInlineBlock(next)) {
        return null;
    }
    if (next) {
        do {
            if (nextChild(next)) {
                next = nextChild(next);
            }
            else {
                return next;
            }
        } while (next);
    }
    return null;
}
/**
 * @private
 */
function getMoveFilter(jodit) {
    return (node) => jodit.e.fire('backSpaceIsMovedIgnore', node) !== true;
}


/***/ }),

/***/ 59232:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export bold */
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(79102);
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(30052);
/* harmony import */ var _icons_bold_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(53315);
/* harmony import */ var _icons_bold_svg__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_icons_bold_svg__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _icons_italic_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(70600);
/* harmony import */ var _icons_italic_svg__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_icons_italic_svg__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _icons_strikethrough_svg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(53523);
/* harmony import */ var _icons_strikethrough_svg__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_icons_strikethrough_svg__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _icons_subscript_svg__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(6582);
/* harmony import */ var _icons_subscript_svg__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_icons_subscript_svg__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _icons_superscript_svg__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(30770);
/* harmony import */ var _icons_superscript_svg__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_icons_superscript_svg__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _icons_underline_svg__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(96181);
/* harmony import */ var _icons_underline_svg__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_icons_underline_svg__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(45600);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */












/**
 * Adds `bold`,` strikethrough`, `underline` and` italic` buttons to Jodit
 */
function bold(editor) {
    const callBack = (command) => {
        const control = jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.defaultOptions.controls[command], cssOptions = Object.assign({}, control.css);
        let cssRules;
        Object.keys(cssOptions).forEach((key) => {
            if (!cssRules) {
                cssRules = {};
            }
            cssRules[key] = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isArray)(cssOptions[key])
                ? cssOptions[key][0]
                : cssOptions[key];
        });
        editor.s.commitStyle({
            element: control.tags ? control.tags[0] : undefined
        });
        editor.synchronizeValues();
        return false;
    };
    ['bold', 'italic', 'underline', 'strikethrough'].forEach(name => {
        editor.registerButton({
            name,
            group: 'font-style'
        });
    });
    ['superscript', 'subscript'].forEach(name => {
        editor.registerButton({
            name,
            group: 'script'
        });
    });
    editor
        .registerCommand('bold', {
        exec: callBack,
        hotkeys: ['ctrl+b', 'cmd+b']
    })
        .registerCommand('italic', {
        exec: callBack,
        hotkeys: ['ctrl+i', 'cmd+i']
    })
        .registerCommand('underline', {
        exec: callBack,
        hotkeys: ['ctrl+u', 'cmd+u']
    })
        .registerCommand('strikethrough', {
        exec: callBack
    })
        .registerCommand('subscript', {
        exec: callBack
    })
        .registerCommand('superscript', {
        exec: callBack
    });
}
jodit_core_global__WEBPACK_IMPORTED_MODULE_2__/* .pluginSystem */ .pw.add('bold', bold);
jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_3__/* .Icon */ .J.set('bold', (_icons_bold_svg__WEBPACK_IMPORTED_MODULE_4___default()))
    .set('italic', (_icons_italic_svg__WEBPACK_IMPORTED_MODULE_5___default()))
    .set('strikethrough', (_icons_strikethrough_svg__WEBPACK_IMPORTED_MODULE_6___default()))
    .set('subscript', (_icons_subscript_svg__WEBPACK_IMPORTED_MODULE_7___default()))
    .set('superscript', (_icons_superscript_svg__WEBPACK_IMPORTED_MODULE_8___default()))
    .set('underline', (_icons_underline_svg__WEBPACK_IMPORTED_MODULE_9___default()));


/***/ }),

/***/ 45600:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.subscript = {
    tags: ['sub'],
    tooltip: 'subscript'
};
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.superscript = {
    tags: ['sup'],
    tooltip: 'superscript'
};
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.bold = {
    tagRegExp: /^(strong|b)$/i,
    tags: ['strong', 'b'],
    css: {
        'font-weight': ['bold', '700']
    },
    tooltip: 'Bold'
};
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.italic = {
    tagRegExp: /^(em|i)$/i,
    tags: ['em', 'i'],
    css: {
        'font-style': 'italic'
    },
    tooltip: 'Italic'
};
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.underline = {
    tagRegExp: /^(u)$/i,
    tags: ['u'],
    css: {
        'text-decoration-line': 'underline'
    },
    tooltip: 'Underline'
};
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.strikethrough = {
    tagRegExp: /^(s)$/i,
    tags: ['s'],
    css: {
        'text-decoration-line': 'line-through'
    },
    tooltip: 'Strike through'
};


/***/ }),

/***/ 80586:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export cleanHtml */
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_helpers_html_safe_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(45838);
/* harmony import */ var jodit_core_plugin_plugin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(97651);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_dom_lazy_walker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(31818);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(79102);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(9162);
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(94270);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(29573);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */









/**
 * Clean HTML after removeFormat and insertHorizontalRule command
 */
class cleanHtml extends jodit_core_plugin_plugin__WEBPACK_IMPORTED_MODULE_1__/* .Plugin */ .S {
    constructor() {
        super(...arguments);
        /** @override */
        this.buttons = [
            {
                name: 'eraser',
                group: 'font-style'
            }
        ];
        this.currentSelectionNode = null;
        this.walker = new jodit_core_dom_lazy_walker__WEBPACK_IMPORTED_MODULE_3__/* .LazyWalker */ .b(this.j.async, {
            timeout: this.j.o.cleanHTML.timeout
        });
    }
    /** @override */
    afterInit(jodit) { }
    get isEditMode() {
        return !(this.j.isInDestruct ||
            !this.j.isEditorMode() ||
            this.j.getReadOnly());
    }
    /**
     * Clean HTML code on every change
     */
    onChangeCleanHTML() {
        if (!this.isEditMode) {
            return;
        }
        const editor = this.j;
        this.walker.setWork(editor.editor);
        this.currentSelectionNode = editor.s.current();
    }
    startWalker() {
        const { jodit } = this;
        const allow = (0,_helpers__WEBPACK_IMPORTED_MODULE_6__/* .getHash */ .XR)(this.j.o.cleanHTML.allowTags);
        const deny = (0,_helpers__WEBPACK_IMPORTED_MODULE_6__/* .getHash */ .XR)(this.j.o.cleanHTML.denyTags);
        this.walker
            .on('visit', (node) => (0,_helpers__WEBPACK_IMPORTED_MODULE_6__/* .visitNodeWalker */ .s_)(jodit, node, allow, deny, this.currentSelectionNode))
            .on('end', (affected) => {
            this.j.e.fire(affected
                ? 'internalChange finishedCleanHTMLWorker'
                : 'finishedCleanHTMLWorker');
        });
    }
    beforeCommand(command) {
        if (command.toLowerCase() === 'removeformat') {
            if (this.j.s.isCollapsed()) {
                (0,_helpers__WEBPACK_IMPORTED_MODULE_6__/* .removeFormatForCollapsedSelection */ .sK)(this.j);
            }
            else {
                (0,_helpers__WEBPACK_IMPORTED_MODULE_6__/* .removeFormatForSelection */ .qZ)(this.j);
            }
            return false;
        }
    }
    /**
     * Event handler when manually assigning a value to the HTML editor.
     */
    onBeforeSetNativeEditorValue(data) {
        const [sandBox, iframe] = this.j.o.cleanHTML.useIframeSandbox
            ? this.j.createInside.sandbox()
            : [this.j.createInside.div()];
        sandBox.innerHTML = data.value;
        this.onSafeHTML(sandBox);
        data.value = sandBox.innerHTML;
        (0,jodit_core_helpers_html_safe_html__WEBPACK_IMPORTED_MODULE_0__/* .safeHTML */ .e)(sandBox, { safeJavaScriptLink: true, removeOnError: true });
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_5__/* .Dom */ .i.safeRemove(iframe);
        return false;
    }
    onSafeHTML(sandBox) {
        (0,jodit_core_helpers_html_safe_html__WEBPACK_IMPORTED_MODULE_0__/* .safeHTML */ .e)(sandBox, this.j.o.cleanHTML);
    }
    /** @override */
    beforeDestruct() {
        this.walker.destruct();
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_2__.watch)([':change', ':afterSetMode', ':afterInit', ':mousedown', ':keydown'])
], cleanHtml.prototype, "onChangeCleanHTML", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_2__.hook)('ready')
], cleanHtml.prototype, "startWalker", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_2__.watch)(':beforeCommand')
], cleanHtml.prototype, "beforeCommand", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_2__.watch)(':beforeSetNativeEditorValue')
], cleanHtml.prototype, "onBeforeSetNativeEditorValue", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_2__.watch)(':safeHTML')
], cleanHtml.prototype, "onSafeHTML", null);
jodit_core_global__WEBPACK_IMPORTED_MODULE_4__/* .pluginSystem */ .pw.add('cleanHtml', cleanHtml);


/***/ }),

/***/ 29573:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(30052);
/* harmony import */ var _eraser_svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(28218);
/* harmony import */ var _eraser_svg__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_eraser_svg__WEBPACK_IMPORTED_MODULE_2__);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.cleanHTML = {
    timeout: 300,
    removeEmptyElements: true,
    fillEmptyParagraph: true,
    replaceNBSP: true,
    replaceOldTags: {
        i: 'em',
        b: 'strong'
    },
    allowTags: false,
    denyTags: 'script',
    useIframeSandbox: false,
    removeOnError: true,
    safeJavaScriptLink: true,
    disableCleanFilter: null
};
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.eraser = {
    command: 'removeFormat',
    tooltip: 'Clear Formatting'
};
jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_1__/* .Icon */ .J.set('eraser', (_eraser_svg__WEBPACK_IMPORTED_MODULE_2___default()));


/***/ }),

/***/ 37213:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   X: function() { return /* binding */ getHash; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76562);
/* harmony import */ var jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2926);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/**
 * @private
 */
function getHash(tags) {
    const attributesReg = /([^[]*)\[([^\]]+)]/;
    const separator = /[\s]*,[\s]*/, attrReg = /^(.*)[\s]*=[\s]*(.*)$/;
    const tagsHash = {};
    if ((0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_1__/* .isString */ .H)(tags)) {
        tags.split(separator).map((elm) => {
            elm = (0,jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_0__/* .trim */ .fy)(elm);
            const attr = attributesReg.exec(elm), allowAttributes = {}, attributeMap = (attrName) => {
                attrName = (0,jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_0__/* .trim */ .fy)(attrName);
                const val = attrReg.exec(attrName);
                if (val) {
                    allowAttributes[val[1]] = val[2];
                }
                else {
                    allowAttributes[attrName] = true;
                }
            };
            if (attr) {
                const attr2 = attr[2].split(separator);
                if (attr[1]) {
                    attr2.forEach(attributeMap);
                    tagsHash[attr[1].toUpperCase()] = allowAttributes;
                }
            }
            else {
                tagsHash[elm.toUpperCase()] = true;
            }
        });
        return tagsHash;
    }
    if (tags) {
        Object.keys(tags).forEach(tagName => {
            tagsHash[tagName.toUpperCase()] = tags[tagName];
        });
        return tagsHash;
    }
    return false;
}


/***/ }),

/***/ 94270:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   XR: function() { return /* reexport safe */ _get_hash__WEBPACK_IMPORTED_MODULE_0__.X; },
/* harmony export */   qZ: function() { return /* reexport safe */ _remove_format_remove_format_for_selection__WEBPACK_IMPORTED_MODULE_2__.q; },
/* harmony export */   sK: function() { return /* reexport safe */ _remove_format_remove_format_for_collapsed_selection__WEBPACK_IMPORTED_MODULE_1__.s; },
/* harmony export */   s_: function() { return /* reexport safe */ _visitor_visit_node_walker__WEBPACK_IMPORTED_MODULE_3__.s; }
/* harmony export */ });
/* harmony import */ var _get_hash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37213);
/* harmony import */ var _remove_format_remove_format_for_collapsed_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3688);
/* harmony import */ var _remove_format_remove_format_for_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(83837);
/* harmony import */ var _visitor_visit_node_walker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(90455);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module plugins/clean-html
 */






/***/ }),

/***/ 3688:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   r: function() { return /* binding */ isInlineBlock; },
/* harmony export */   s: function() { return /* binding */ removeFormatForCollapsedSelection; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62924);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/**
 * For collapsed selection move cursor outside or split inline block
 * @private
 */
function removeFormatForCollapsedSelection(jodit, fake) {
    const { s } = jodit;
    let fakeNode = fake;
    if (!fakeNode) {
        fakeNode = jodit.createInside.fake();
        const { range } = s;
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeInsertNode(range, fakeNode);
        range.collapse();
    }
    const mainInline = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.furthest(fakeNode, isInlineBlock, jodit.editor);
    if (mainInline) {
        if (s.cursorOnTheLeft(mainInline)) {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.before(mainInline, fakeNode);
        }
        else if (s.cursorOnTheRight(mainInline)) {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.after(mainInline, fakeNode);
        }
        else {
            const leftHand = s.splitSelection(mainInline);
            leftHand && jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.after(leftHand, fakeNode);
        }
    }
    if (!fake) {
        s.setCursorBefore(fakeNode);
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(fakeNode);
    }
}
/**
 * Element has inline display mode
 * @private
 */
function isInlineBlock(node) {
    return jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isInlineBlock(node) && !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(node, jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.INSEPARABLE_TAGS);
}


/***/ }),

/***/ 83837:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   q: function() { return /* binding */ removeFormatForSelection; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(86284);
/* harmony import */ var _remove_format_for_collapsed_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3688);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



/**
 * Remove formatting for all selected elements
 * @private
 */
function removeFormatForSelection(jodit) {
    const { s, editor, createInside } = jodit, { range } = s, left = range.cloneRange(), right = range.cloneRange(), fakeLeft = createInside.fake(), fakeRight = createInside.fake();
    left.collapse(true);
    right.collapse(false);
    jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeInsertNode(left, fakeLeft);
    jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeInsertNode(right, fakeRight);
    range.setStartBefore(fakeLeft);
    range.collapse(true);
    s.selectRange(range);
    (0,_remove_format_for_collapsed_selection__WEBPACK_IMPORTED_MODULE_2__/* .removeFormatForCollapsedSelection */ .s)(jodit, fakeLeft);
    range.setEndAfter(fakeRight);
    range.collapse(false);
    s.selectRange(range);
    (0,_remove_format_for_collapsed_selection__WEBPACK_IMPORTED_MODULE_2__/* .removeFormatForCollapsedSelection */ .s)(jodit, fakeRight);
    const shouldUnwrap = [];
    jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.between(fakeLeft, fakeRight, node => {
        if ((0,_remove_format_for_collapsed_selection__WEBPACK_IMPORTED_MODULE_2__/* .isInlineBlock */ .r)(node) && !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(node, 'a')) {
            shouldUnwrap.push(node);
        }
        if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isElement(node) && (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.attr)(node, 'style')) {
            (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.attr)(node, 'style', null);
        }
    });
    shouldUnwrap.forEach(node => jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.unwrap(node));
    const clearParent = (node, left) => {
        if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.findNotEmptySibling(node, left)) {
            const pn = node.parentNode;
            if (pn && pn !== editor && (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.attr)(pn, 'style')) {
                (0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_1__.attr)(pn, 'style', null);
                clearParent(pn, left);
                return true;
            }
        }
    };
    clearParent(fakeLeft, true) && clearParent(fakeRight, false);
    range.setStartAfter(fakeLeft);
    range.setEndBefore(fakeRight);
    s.selectRange(range);
    jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(fakeLeft);
    jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(fakeRight);
}


/***/ }),

/***/ 27098:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   b: function() { return /* binding */ allowAttributes; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * @private
 */
function allowAttributes(jodit, nodeElm, hadEffect, allow) {
    if (allow && jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isElement(nodeElm) && allow[nodeElm.nodeName] !== true) {
        const attrs = nodeElm.attributes;
        if (attrs && attrs.length) {
            const removeAttrs = [];
            for (let i = 0; i < attrs.length; i += 1) {
                const attr = allow[nodeElm.nodeName][attrs[i].name];
                if (!attr || (attr !== true && attr !== attrs[i].value)) {
                    removeAttrs.push(attrs[i].name);
                }
            }
            if (removeAttrs.length) {
                hadEffect = true;
            }
            removeAttrs.forEach(attr => {
                nodeElm.removeAttribute(attr);
            });
        }
    }
    return hadEffect;
}


/***/ }),

/***/ 60901:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   _: function() { return /* binding */ fillEmptyParagraph; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62924);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/**
 * @private
 */
function fillEmptyParagraph(jodit, nodeElm, hadEffect) {
    if (jodit.o.cleanHTML.fillEmptyParagraph &&
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isBlock(nodeElm) &&
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isEmpty(nodeElm, jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.INSEPARABLE_TAGS)) {
        const br = jodit.createInside.element('br');
        nodeElm.appendChild(br);
        return true;
    }
    return hadEffect;
}


/***/ }),

/***/ 24129:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   allowAttributes: function() { return /* reexport safe */ _allow_attributes__WEBPACK_IMPORTED_MODULE_1__.b; },
/* harmony export */   fillEmptyParagraph: function() { return /* reexport safe */ _fill_empty_paragraph__WEBPACK_IMPORTED_MODULE_2__._; },
/* harmony export */   removeEmptyTextNode: function() { return /* reexport safe */ _remove_empty_text_node__WEBPACK_IMPORTED_MODULE_4__.W; },
/* harmony export */   removeInvTextNodes: function() { return /* reexport safe */ _remove_inv_text_nodes__WEBPACK_IMPORTED_MODULE_5__.e; },
/* harmony export */   replaceOldTags: function() { return /* reexport safe */ _replace_old_tags__WEBPACK_IMPORTED_MODULE_0__.G; },
/* harmony export */   sanitizeAttributes: function() { return /* reexport safe */ _sanitize_attributes__WEBPACK_IMPORTED_MODULE_6__.F; },
/* harmony export */   tryRemoveNode: function() { return /* reexport safe */ _try_remove_node__WEBPACK_IMPORTED_MODULE_3__.P; }
/* harmony export */ });
/* harmony import */ var _replace_old_tags__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6200);
/* harmony import */ var _allow_attributes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(27098);
/* harmony import */ var _fill_empty_paragraph__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60901);
/* harmony import */ var _try_remove_node__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(63604);
/* harmony import */ var _remove_empty_text_node__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(47133);
/* harmony import */ var _remove_inv_text_nodes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(33589);
/* harmony import */ var _sanitize_attributes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(52846);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module plugins/clean-html
 */
/**
 * @private
 */









/***/ }),

/***/ 47133:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   W: function() { return /* binding */ removeEmptyTextNode; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * @private
 */
function removeEmptyTextNode(jodit, node, hadEffect, arg, argi, currentNode) {
    if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isText(node) && !node.nodeValue) {
        if (node === currentNode && jodit.s.isCollapsed()) {
            jodit.s.setCursorAfter(node);
        }
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(node);
        return true;
    }
    return hadEffect;
}


/***/ }),

/***/ 33589:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   e: function() { return /* binding */ removeInvTextNodes; }
/* harmony export */ });
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9162);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/**
 * @private
 */
function removeInvTextNodes(jodit, node, hadEffect, arg, argi, currentNode) {
    if (currentNode === node || !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(node) || node.nodeValue == null) {
        return hadEffect;
    }
    if (!(0,jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.INVISIBLE_SPACE_REG_EXP)().test(node.nodeValue)) {
        return hadEffect;
    }
    const focusBox = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.furthest(currentNode, jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isBlock, jodit.editor);
    if (!focusBox || jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isOrContains(focusBox, node)) {
        return hadEffect;
    }
    node.nodeValue = node.nodeValue.replace((0,jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.INVISIBLE_SPACE_REG_EXP)(), '');
    if (node === currentNode && jodit.s.isCollapsed()) {
        jodit.s.setCursorAfter(node);
    }
    if (!node.nodeValue) {
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(node);
    }
    return true;
}


/***/ }),

/***/ 6200:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   G: function() { return /* binding */ replaceOldTags; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * @private
 */
function replaceOldTags(jodit, nodeElm, hadEffect) {
    const newNodeElm = replaceIfMatched(jodit, nodeElm, jodit.o.cleanHTML.replaceOldTags);
    if (nodeElm !== newNodeElm) {
        nodeElm = newNodeElm;
        return true;
    }
    return hadEffect;
}
/**
 * Replaces an element with a newer one if specified in the configuration match
 * @private
 */
function replaceIfMatched(jodit, oldParent, list) {
    if (!list || !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isHTMLElement(oldParent)) {
        return oldParent;
    }
    const tagName = list[oldParent.nodeName.toLowerCase()] || list[oldParent.nodeName];
    if (tagName) {
        return jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.replace(oldParent, tagName, jodit.createInside, true, false);
    }
    return oldParent;
}


/***/ }),

/***/ 52846:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   F: function() { return /* binding */ sanitizeAttributes; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76974);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/**
 * @private
 */
function sanitizeAttributes(jodit, nodeElm, hadEffect) {
    if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isElement(nodeElm) &&
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.sanitizeHTMLElement)(nodeElm, {
            safeJavaScriptLink: jodit.options.cleanHTML.safeJavaScriptLink,
            removeOnError: jodit.options.cleanHTML.removeOnError
        })) {
        return true;
    }
    return hadEffect;
}


/***/ }),

/***/ 63604:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   P: function() { return /* binding */ tryRemoveNode; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76562);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



/**
 * @private
 */
function tryRemoveNode(jodit, nodeElm, hadEffect, allowTags, denyTags, currentSelectionNode) {
    if (isRemovableNode(jodit, nodeElm, currentSelectionNode, allowTags, denyTags)) {
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(nodeElm);
        return true;
    }
    return hadEffect;
}
/**
 * @private
 */
function isRemovableNode(jodit, node, current, allow, deny) {
    if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isText(node) &&
        ((allow && !allow[node.nodeName]) || (deny && deny[node.nodeName]))) {
        return true;
    }
    return (jodit.o.cleanHTML.removeEmptyElements &&
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isElement(node) &&
        node.nodeName.match(jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.IS_INLINE) != null &&
        !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTemporary(node) &&
        (0,jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_2__/* .trim */ .fy)(node.innerHTML).length === 0 &&
        (current == null || !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isOrContains(node, current)));
}


/***/ }),

/***/ 90455:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   s: function() { return /* binding */ visitNodeWalker; }
/* harmony export */ });
/* harmony import */ var _filters__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(24129);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62924);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


const keys = Object.keys(_filters__WEBPACK_IMPORTED_MODULE_0__);
/**
 * @private
 */
function visitNodeWalker(jodit, nodeElm, allowTags, denyTags, currentSelectionNode) {
    let hadEffect = false;
    const dcf = jodit.o.cleanHTML.disableCleanFilter;
    for (const key of keys) {
        if (dcf && dcf.has(key)) {
            continue;
        }
        const filter = _filters__WEBPACK_IMPORTED_MODULE_0__[key];
        const tmp = hadEffect;
        hadEffect = filter(jodit, nodeElm, hadEffect, allowTags, denyTags, currentSelectionNode);
        if (!jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.IS_PROD && !tmp && hadEffect) {
            console.warn(`CleanHTML: Effect "${key}"`);
        }
        if (!nodeElm.isConnected) {
            return true;
        }
    }
    return hadEffect;
}


/***/ }),

/***/ 13949:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export color */
/* harmony import */ var jodit_core_helpers___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(79102);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(92552);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



/**
 * Process commands `background` and `forecolor`
 */
function color(editor) {
    editor.registerButton({
        name: 'brush',
        group: 'color'
    });
    const callback = (command, second, third) => {
        const colorHEX = (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_0__.normalizeColor)(third);
        switch (command) {
            case 'background':
                editor.s.commitStyle({
                    attributes: {
                        style: {
                            backgroundColor: !colorHEX
                                ? ''
                                : colorHEX
                        }
                    }
                });
                break;
            case 'forecolor':
                editor.s.commitStyle({
                    attributes: {
                        style: {
                            color: !colorHEX ? '' : colorHEX
                        }
                    }
                });
                break;
        }
        editor.synchronizeValues();
        return false;
    };
    editor
        .registerCommand('forecolor', callback)
        .registerCommand('background', callback);
}
jodit_core_global__WEBPACK_IMPORTED_MODULE_1__/* .pluginSystem */ .pw.add('color', color);


/***/ }),

/***/ 92552:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_helpers___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76974);
/* harmony import */ var jodit_modules_widget__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6658);
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(30052);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(9162);
/* harmony import */ var _brush_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(89371);
/* harmony import */ var _brush_svg__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_brush_svg__WEBPACK_IMPORTED_MODULE_5__);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */






jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_3__/* .Icon */ .J.set('brush', (_brush_svg__WEBPACK_IMPORTED_MODULE_5___default()));
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.brush = {
    update(editor, button) {
        const color = (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_1__.dataBind)(button, 'color');
        const update = (key, value) => {
            if (value && value !== (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_1__.css)(editor.editor, key).toString()) {
                button.state.icon.fill = value;
                return;
            }
        };
        if (color) {
            const mode = (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_1__.dataBind)(button, 'color');
            update(mode === 'color' ? mode : 'background-color', color);
            return;
        }
        const current = editor.s.current();
        if (current && !button.state.disabled) {
            const currentBpx = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.closest(current, jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.isElement, editor.editor) || editor.editor;
            update('color', (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_1__.css)(currentBpx, 'color').toString());
            update('background-color', (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_1__.css)(currentBpx, 'background-color').toString());
        }
        button.state.icon.fill = '';
        button.state.activated = false;
    },
    popup: (editor, current, close, button) => {
        let colorHEX = '', bg_color = '', tabs = [], currentElement = null;
        if (current && current !== editor.editor && jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.isNode(current)) {
            if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.isElement(current) &&
                editor.s.isCollapsed() &&
                !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.isTag(current, new Set(['br', 'hr']))) {
                currentElement = current;
            }
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.up(current, (node) => {
                if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.isHTMLElement(node)) {
                    const color = (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_1__.css)(node, 'color', true), background = (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_1__.css)(node, 'background-color', true);
                    if (color) {
                        colorHEX = color.toString();
                        return true;
                    }
                    if (background) {
                        bg_color = background.toString();
                        return true;
                    }
                }
            }, editor.editor);
        }
        const backgroundTag = (0,jodit_modules_widget__WEBPACK_IMPORTED_MODULE_2__/* .ColorPickerWidget */ .YW)(editor, (value) => {
            if (!currentElement) {
                editor.execCommand('background', false, value);
            }
            else {
                currentElement.style.backgroundColor = value;
            }
            (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_1__.dataBind)(button, 'color', value);
            (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_1__.dataBind)(button, 'color-mode', 'background');
            close();
        }, bg_color);
        const colorTab = (0,jodit_modules_widget__WEBPACK_IMPORTED_MODULE_2__/* .ColorPickerWidget */ .YW)(editor, (value) => {
            if (!currentElement) {
                editor.execCommand('forecolor', false, value);
            }
            else {
                currentElement.style.color = value;
            }
            (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_1__.dataBind)(button, 'color', value);
            (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_1__.dataBind)(button, 'color-mode', 'color');
            close();
        }, colorHEX);
        tabs = [
            {
                name: 'Background',
                content: backgroundTag
            },
            {
                name: 'Text',
                content: colorTab
            }
        ];
        if (editor.o.colorPickerDefaultTab !== 'background') {
            tabs = tabs.reverse();
        }
        return (0,jodit_modules_widget__WEBPACK_IMPORTED_MODULE_2__/* .TabsWidget */ .IL)(editor, tabs, currentElement);
    },
    exec(jodit, current, { button }) {
        const mode = (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_1__.dataBind)(button, 'color-mode'), color = (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_1__.dataBind)(button, 'color');
        if (!mode) {
            return false;
        }
        if (current &&
            current !== jodit.editor &&
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.isNode(current) &&
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.isElement(current)) {
            switch (mode) {
                case 'color':
                    current.style.color = color;
                    break;
                case 'background':
                    current.style.backgroundColor = color;
                    break;
            }
        }
        else {
            jodit.execCommand(mode === 'background' ? mode : 'forecolor', false, color);
        }
    },
    tooltip: 'Fill color or set the text color'
};


/***/ }),

/***/ 12706:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export copyFormat */
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(71737);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(79102);
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(30052);
/* harmony import */ var _copy_format_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(79031);
/* harmony import */ var _copy_format_svg__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_copy_format_svg__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _langs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(60338);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */







const pluginKey = 'copy-format';
/**
 * Plug-in copy and paste formatting from one element to another
 */
const copyStyles = [
    'fontWeight',
    'fontStyle',
    'fontSize',
    'color',
    'margin',
    'padding',
    'borderWidth',
    'borderStyle',
    'borderColor',
    'borderRadius',
    'backgroundColor',
    'textDecorationLine',
    'fontFamily'
];
const getStyle = (editor, key, box, defaultStyles) => {
    let result = (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_6__/* .css */ .i)(box, key);
    if (result === defaultStyles[key]) {
        if (box.parentNode &&
            box !== editor.editor &&
            box.parentNode !== editor.editor) {
            result = getStyle(editor, key, box.parentNode, defaultStyles);
        }
        else {
            result = undefined;
        }
    }
    return result;
};
const getStyles = (editor, box, defaultStyles) => {
    const result = {};
    if (box) {
        copyStyles.forEach((key) => {
            result[key] = getStyle(editor, key, box, defaultStyles);
            if (key.match(/border(Style|Color)/) && !result.borderWidth) {
                result[key] = undefined;
            }
        });
    }
    return result;
};
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.copyformat = {
    exec: (editor, current, { button }) => {
        if (!current) {
            return;
        }
        if (editor.buffer.exists(pluginKey)) {
            editor.buffer.delete(pluginKey);
            editor.e.off(editor.editor, 'mouseup.' + pluginKey);
        }
        else {
            const defaultStyles = {}, box = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.up(current, (elm) => elm && !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(elm), editor.editor) || editor.editor;
            const ideal = editor.createInside.span();
            editor.editor.appendChild(ideal);
            copyStyles.forEach((key) => {
                defaultStyles[key] = (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_6__/* .css */ .i)(ideal, key);
            });
            if (ideal !== editor.editor) {
                jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(ideal);
            }
            const format = getStyles(editor, box, defaultStyles);
            const onMouseUp = () => {
                editor.buffer.delete(pluginKey);
                const currentNode = editor.s.current();
                if (currentNode) {
                    if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTag(currentNode, 'img')) {
                        (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_6__/* .css */ .i)(currentNode, format);
                    }
                    else {
                        editor.s.commitStyle({
                            attributes: {
                                style: format
                            }
                        });
                    }
                }
                editor.e.off(editor.editor, 'mouseup.' + pluginKey);
            };
            editor.e.on(editor.editor, 'mouseup.' + pluginKey, onMouseUp);
            editor.buffer.set(pluginKey, true);
        }
        button.update();
    },
    isActive: (editor) => editor.buffer.exists(pluginKey),
    tooltip: 'Paint format'
};
function copyFormat(editor) {
    editor.registerButton({
        name: 'copyformat',
        group: 'clipboard'
    });
    (0,jodit_core_global__WEBPACK_IMPORTED_MODULE_2__/* .extendLang */ .xl)(_langs__WEBPACK_IMPORTED_MODULE_5__);
}
jodit_core_global__WEBPACK_IMPORTED_MODULE_2__/* .pluginSystem */ .pw.add('copyformat', copyFormat);
jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_3__/* .Icon */ .J.set('copyformat', (_copy_format_svg__WEBPACK_IMPORTED_MODULE_4___default()));


/***/ }),

/***/ 95847:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    'copy-format': 'Kopírovat formát'
};


/***/ }),

/***/ 98627:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    'copy-format': 'Format kopierenт'
};


/***/ }),

/***/ 20901:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    'copy-format': 'Copiar formato'
};


/***/ }),

/***/ 67888:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    'copy-format': 'Format de copie'
};


/***/ }),

/***/ 71316:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    'copy-format': 'Formátum másolás'
};


/***/ }),

/***/ 60338:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ar: function() { return /* reexport default from dynamic */ _ar_js__WEBPACK_IMPORTED_MODULE_0___default.a; },
/* harmony export */   cs_cz: function() { return /* reexport default from dynamic */ _cs_cz_js__WEBPACK_IMPORTED_MODULE_1___default.a; },
/* harmony export */   de: function() { return /* reexport default from dynamic */ _de_js__WEBPACK_IMPORTED_MODULE_2___default.a; },
/* harmony export */   es: function() { return /* reexport default from dynamic */ _es_js__WEBPACK_IMPORTED_MODULE_3___default.a; },
/* harmony export */   fa: function() { return /* reexport default from dynamic */ _ar_js__WEBPACK_IMPORTED_MODULE_0___default.a; },
/* harmony export */   fr: function() { return /* reexport default from dynamic */ _fr_js__WEBPACK_IMPORTED_MODULE_4___default.a; },
/* harmony export */   he: function() { return /* reexport default from dynamic */ _ar_js__WEBPACK_IMPORTED_MODULE_0___default.a; },
/* harmony export */   hu: function() { return /* reexport default from dynamic */ _hu_js__WEBPACK_IMPORTED_MODULE_5___default.a; },
/* harmony export */   id: function() { return /* reexport default from dynamic */ _ar_js__WEBPACK_IMPORTED_MODULE_0___default.a; },
/* harmony export */   it: function() { return /* reexport default from dynamic */ _it_js__WEBPACK_IMPORTED_MODULE_6___default.a; },
/* harmony export */   ja: function() { return /* reexport default from dynamic */ _ja_js__WEBPACK_IMPORTED_MODULE_7___default.a; },
/* harmony export */   ko: function() { return /* reexport default from dynamic */ _ar_js__WEBPACK_IMPORTED_MODULE_0___default.a; },
/* harmony export */   mn: function() { return /* reexport default from dynamic */ _ar_js__WEBPACK_IMPORTED_MODULE_0___default.a; },
/* harmony export */   nl: function() { return /* reexport default from dynamic */ _nl_js__WEBPACK_IMPORTED_MODULE_8___default.a; },
/* harmony export */   pl: function() { return /* reexport default from dynamic */ _pl_js__WEBPACK_IMPORTED_MODULE_9___default.a; },
/* harmony export */   pt_br: function() { return /* reexport default from dynamic */ _pt_br_js__WEBPACK_IMPORTED_MODULE_10___default.a; },
/* harmony export */   ru: function() { return /* reexport default from dynamic */ _ar_js__WEBPACK_IMPORTED_MODULE_0___default.a; },
/* harmony export */   tr: function() { return /* reexport default from dynamic */ _tr_js__WEBPACK_IMPORTED_MODULE_11___default.a; },
/* harmony export */   zh_cn: function() { return /* reexport default from dynamic */ _zh_cn_js__WEBPACK_IMPORTED_MODULE_12___default.a; },
/* harmony export */   zh_tw: function() { return /* reexport default from dynamic */ _zh_tw_js__WEBPACK_IMPORTED_MODULE_13___default.a; }
/* harmony export */ });
/* harmony import */ var _ar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(45143);
/* harmony import */ var _ar_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ar_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _cs_cz_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(95847);
/* harmony import */ var _cs_cz_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_cs_cz_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _de_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(98627);
/* harmony import */ var _de_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_de_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _es_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20901);
/* harmony import */ var _es_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_es_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _fr_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(67888);
/* harmony import */ var _fr_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_fr_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _hu_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(71316);
/* harmony import */ var _hu_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_hu_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _it_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(87229);
/* harmony import */ var _it_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_it_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _ja_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(74235);
/* harmony import */ var _ja_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_ja_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _nl_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(21276);
/* harmony import */ var _nl_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_nl_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _pl_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(76216);
/* harmony import */ var _pl_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_pl_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _pt_br_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(30088);
/* harmony import */ var _pt_br_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_pt_br_js__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _tr_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(21263);
/* harmony import */ var _tr_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_tr_js__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _zh_cn_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(79511);
/* harmony import */ var _zh_cn_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_zh_cn_js__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _zh_tw_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(12027);
/* harmony import */ var _zh_tw_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_zh_tw_js__WEBPACK_IMPORTED_MODULE_13__);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */























/***/ }),

/***/ 87229:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    'copy-format': 'Copia il formato'
};


/***/ }),

/***/ 74235:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    'copy-format': 'copyformat'
};


/***/ }),

/***/ 21276:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    'copy-format': 'opmaak kopiëren'
};


/***/ }),

/***/ 76216:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    'copy-format': 'format kopii'
};


/***/ }),

/***/ 30088:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    'copy-format': 'Copiar formato'
};


/***/ }),

/***/ 21263:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    'copy-format': 'Kopyalama Biçimi'
};


/***/ }),

/***/ 79511:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    'copy-format': '复制格式'
};


/***/ }),

/***/ 12027:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    'copy-format': '複製格式'
};


/***/ }),

/***/ 43839:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export enter */
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_plugin_plugin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(97651);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_helpers_checker_is_boolean__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(88751);
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(84834);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(79102);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */









/**
 * One of most important core plugins. It is responsible for all the browsers to have the same effect when the Enter
 * button is pressed. By default, it should insert the <p>
 */
class enter extends jodit_core_plugin_plugin__WEBPACK_IMPORTED_MODULE_1__/* .Plugin */ .S {
    /** @override */
    afterInit(editor) {
        // use 'enter' option if no set
        const defaultTag = editor.o.enter.toLowerCase();
        const brMode = defaultTag === jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.BR.toLowerCase();
        if (!editor.o.enterBlock) {
            editor.o.enterBlock = brMode
                ? jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.PARAGRAPH
                : defaultTag;
        }
        editor.registerCommand('enter', (command, value, event = {}) => this.onEnter(event));
    }
    onEnterKeyDown(event) {
        if (event.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.KEY_ENTER) {
            const editor = this.j;
            const beforeEnter = editor.e.fire('beforeEnter', event);
            if (beforeEnter !== undefined) {
                return beforeEnter;
            }
            if (!editor.s.isCollapsed()) {
                editor.execCommand('Delete');
            }
            editor.s.focus();
            this.onEnter(event);
            editor.e.fire('afterEnter', event);
            editor.synchronizeValues(); // fire change
            return false;
        }
    }
    onEnter(event) {
        const { jodit } = this;
        const fake = jodit.createInside.fake();
        try {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeInsertNode(jodit.s.range, fake);
            (0,_helpers__WEBPACK_IMPORTED_MODULE_4__/* .moveCursorOutFromSpecialTags */ .ku)(jodit, fake, ['a']);
            let block = (0,_helpers__WEBPACK_IMPORTED_MODULE_4__/* .getBlockWrapper */ .pW)(fake, jodit);
            const isLi = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isLeaf(block);
            // if use <br> defaultTag for break line or when was entered SHIFt key or in <td> or <th> or <blockquote>
            if ((!isLi || (event === null || event === void 0 ? void 0 : event.shiftKey)) &&
                (0,_helpers__WEBPACK_IMPORTED_MODULE_4__/* .checkBR */ .vs)(fake, jodit, event === null || event === void 0 ? void 0 : event.shiftKey)) {
                return false;
            }
            // wrap no wrapped element
            if (!block && !(0,_helpers__WEBPACK_IMPORTED_MODULE_4__/* .hasPreviousBlock */ .VP)(fake, jodit)) {
                block = (0,_helpers__WEBPACK_IMPORTED_MODULE_4__/* .wrapText */ .lD)(fake, jodit);
            }
            if (!block) {
                (0,_helpers__WEBPACK_IMPORTED_MODULE_4__/* .insertParagraph */ .Vz)(fake, jodit, isLi ? 'li' : jodit.o.enter);
                return false;
            }
            if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_4__/* .checkUnsplittableBox */ .IG)(fake, jodit, block)) {
                return false;
            }
            if (isLi && this.__isEmptyListLeaf(block)) {
                (0,_helpers__WEBPACK_IMPORTED_MODULE_4__/* .processEmptyLILeaf */ .t7)(fake, jodit, block);
                return false;
            }
            (0,_helpers__WEBPACK_IMPORTED_MODULE_4__/* .splitFragment */ .gX)(fake, jodit, block);
        }
        finally {
            fake.isConnected && jodit.s.setCursorBefore(fake);
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(fake);
        }
    }
    __isEmptyListLeaf(li) {
        const result = this.j.e.fire('enterIsEmptyListLeaf', li);
        return (0,jodit_core_helpers_checker_is_boolean__WEBPACK_IMPORTED_MODULE_6__/* .isBoolean */ .j)(result) ? result : jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isEmpty(li);
    }
    /** @override */
    beforeDestruct(editor) {
        editor.e.off('keydown.enter');
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__.watch)(':keydown.enter')
], enter.prototype, "onEnterKeyDown", null);
jodit_core_global__WEBPACK_IMPORTED_MODULE_5__/* .pluginSystem */ .pw.add('enter', enter);


/***/ }),

/***/ 28705:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   v: function() { return /* binding */ checkBR; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers_utils_scroll_into_view__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18068);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62924);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



/**
 * Checks the possibility and necessity of inserting a BR instead of a block
 * @private
 */
function checkBR(fake, jodit, shiftKeyPressed) {
    const isMultiLineBlock = Boolean(jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.closest(fake, ['pre', 'blockquote'], jodit.editor));
    const isBRMode = jodit.o.enter.toLowerCase() === jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.BR.toLowerCase();
    // if use <br> defaultTag for break line or when was entered SHIFt key or in <td> or <th> or <blockquote>
    if (isBRMode ||
        (shiftKeyPressed && !isMultiLineBlock) ||
        (!shiftKeyPressed && isMultiLineBlock)) {
        // 2 BR before
        if (isMultiLineBlock && checkSeveralBR(fake)) {
            return false;
        }
        const br = jodit.createInside.element('br');
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.before(fake, br);
        if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.findNotEmptySibling(br, false)) {
            const clone = br.cloneNode();
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.after(br, clone);
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.before(clone, fake);
        }
        (0,jodit_core_helpers_utils_scroll_into_view__WEBPACK_IMPORTED_MODULE_1__/* .scrollIntoViewIfNeeded */ .n)(br, jodit.editor, jodit.ed);
        return true;
    }
    return false;
}
function checkSeveralBR(fake) {
    // 2 BR before
    const preBr = brBefore(brBefore(fake));
    if (preBr) {
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(brBefore(fake));
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(preBr);
        return true;
    }
    return false;
}
function brBefore(start) {
    if (!start) {
        return false;
    }
    const prev = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.findSibling(start, true);
    if (!prev || !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(prev, 'br')) {
        return false;
    }
    return prev;
}


/***/ }),

/***/ 77910:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   I: function() { return /* binding */ checkUnsplittableBox; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * Inside quote/tables cell, etc. you can't split so just add br
 * @private
 */
function checkUnsplittableBox(fake, jodit, currentBox) {
    if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.canSplitBlock(currentBox)) {
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.before(fake, jodit.createInside.element('br'));
        return false;
    }
    return true;
}


/***/ }),

/***/ 6985:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   p: function() { return /* binding */ getBlockWrapper; }
/* harmony export */ });
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9162);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/**
 * Finds a suitable parent block container
 * @private
 */
function getBlockWrapper(fake, jodit, tagReg = jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.IS_BLOCK) {
    let node = fake;
    const root = jodit.editor;
    do {
        if (!node || node === root) {
            break;
        }
        if (tagReg.test(node.nodeName)) {
            if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isLeaf(node)) {
                return node;
            }
            return (getBlockWrapper(node.parentNode, jodit, /^li$/i) ||
                node);
        }
        node = node.parentNode;
    } while (node && node !== root);
    return null;
}


/***/ }),

/***/ 68690:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   V: function() { return /* binding */ hasPreviousBlock; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * @private
 */
function hasPreviousBlock(fake, jodit) {
    return Boolean(jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.prev(fake, elm => jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isBlock(elm) || jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isImage(elm), jodit.editor));
}


/***/ }),

/***/ 84834:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IG: function() { return /* reexport safe */ _check_unsplittable_box__WEBPACK_IMPORTED_MODULE_1__.I; },
/* harmony export */   VP: function() { return /* reexport safe */ _has_previous_block__WEBPACK_IMPORTED_MODULE_4__.V; },
/* harmony export */   Vz: function() { return /* reexport safe */ _insert_paragraph__WEBPACK_IMPORTED_MODULE_5__.V; },
/* harmony export */   gX: function() { return /* reexport safe */ _split_fragment__WEBPACK_IMPORTED_MODULE_6__.g; },
/* harmony export */   ku: function() { return /* reexport safe */ _move_cursor_out_from_specal_tags__WEBPACK_IMPORTED_MODULE_8__.k; },
/* harmony export */   lD: function() { return /* reexport safe */ _wrap_text__WEBPACK_IMPORTED_MODULE_7__.l; },
/* harmony export */   pW: function() { return /* reexport safe */ _get_block_wrapper__WEBPACK_IMPORTED_MODULE_3__.p; },
/* harmony export */   t7: function() { return /* reexport safe */ _process_empty_li_leaf__WEBPACK_IMPORTED_MODULE_2__.t; },
/* harmony export */   vs: function() { return /* reexport safe */ _check_br__WEBPACK_IMPORTED_MODULE_0__.v; }
/* harmony export */ });
/* harmony import */ var _check_br__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(28705);
/* harmony import */ var _check_unsplittable_box__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(77910);
/* harmony import */ var _process_empty_li_leaf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20275);
/* harmony import */ var _get_block_wrapper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(6985);
/* harmony import */ var _has_previous_block__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(68690);
/* harmony import */ var _insert_paragraph__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(9502);
/* harmony import */ var _split_fragment__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(78048);
/* harmony import */ var _wrap_text__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(48631);
/* harmony import */ var _move_cursor_out_from_specal_tags__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(72110);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module plugins/enter
 */











/***/ }),

/***/ 9502:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   V: function() { return /* binding */ insertParagraph; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers_utils_scroll_into_view__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18068);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/**
 * Insert default paragraph
 * @private
 */
function insertParagraph(fake, editor, wrapperTag, style) {
    const isBR = wrapperTag.toLowerCase() === 'br', { createInside } = editor, p = createInside.element(wrapperTag), br = createInside.element('br');
    if (!isBR) {
        p.appendChild(br);
    }
    if (style && style.cssText) {
        p.setAttribute('style', style.cssText);
    }
    jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.after(fake, p);
    jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.before(isBR ? p : br, fake);
    (0,jodit_core_helpers_utils_scroll_into_view__WEBPACK_IMPORTED_MODULE_1__/* .scrollIntoViewIfNeeded */ .n)(p, editor.editor, editor.ed);
    return p;
}


/***/ }),

/***/ 72110:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   k: function() { return /* binding */ moveCursorOutFromSpecialTags; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * Checks if the cursor is on the edge of a special tag and exits if so
 * @private
 */
function moveCursorOutFromSpecialTags(jodit, fake, tags) {
    const { s } = jodit;
    const link = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.closest(fake, tags, jodit.editor);
    if (link) {
        if (s.cursorOnTheRight(link, fake)) {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.after(link, fake);
        }
        else if (s.cursorOnTheLeft(link, fake)) {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.before(link, fake);
        }
    }
}


/***/ }),

/***/ 20275:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   t: function() { return /* binding */ processEmptyLILeaf; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers_utils_selector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(93789);
/* harmony import */ var _insert_paragraph__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9502);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



/**
 * Handles pressing the Enter key inside an empty LI inside a list
 * @private
 */
function processEmptyLILeaf(fake, jodit, li) {
    const list = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.closest(li, ['ol', 'ul'], jodit.editor);
    if (!list) {
        return;
    }
    const parentLi = list.parentElement, listInsideLeaf = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isLeaf(parentLi);
    const container = listInsideLeaf ? parentLi : list;
    // Empty element in the middle of the list
    const leftRange = jodit.s.createRange();
    leftRange.setStartAfter(li);
    leftRange.setEndAfter(list);
    const rightPart = leftRange.extractContents();
    jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.after(container, fake);
    jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(li);
    if (!(0,jodit_core_helpers_utils_selector__WEBPACK_IMPORTED_MODULE_1__.$$)('li', list).length) {
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(list);
    }
    const newLi = (0,_insert_paragraph__WEBPACK_IMPORTED_MODULE_2__/* .insertParagraph */ .V)(fake, jodit, listInsideLeaf ? 'li' : jodit.o.enter);
    if (!rightPart.querySelector('li')) {
        return;
    }
    if (listInsideLeaf) {
        newLi.appendChild(rightPart);
    }
    else {
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.after(newLi, rightPart);
    }
}


/***/ }),

/***/ 78048:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   g: function() { return /* binding */ splitFragment; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_utils_scroll_into_view__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18068);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9162);
/* harmony import */ var _insert_paragraph__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9502);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



/**
 * Splits a block element into two parts
 * and adds a new default block in the middle/start/end
 * @private
 */
function splitFragment(fake, jodit, block) {
    const sel = jodit.s, { enter } = jodit.o;
    const defaultTag = enter.toLowerCase();
    const isLi = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isLeaf(block);
    const canSplit = block.tagName.toLowerCase() === defaultTag || isLi;
    const cursorOnTheRight = sel.cursorOnTheRight(block, fake);
    const cursorOnTheLeft = sel.cursorOnTheLeft(block, fake);
    if (!canSplit && (cursorOnTheRight || cursorOnTheLeft)) {
        if (cursorOnTheRight) {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.after(block, fake);
        }
        else {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.before(block, fake);
        }
        (0,_insert_paragraph__WEBPACK_IMPORTED_MODULE_2__/* .insertParagraph */ .V)(fake, jodit, defaultTag);
        if (cursorOnTheLeft && !cursorOnTheRight) {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.prepend(block, fake);
        }
        return;
    }
    const newP = sel.splitSelection(block, fake);
    (0,jodit_core_helpers_utils_scroll_into_view__WEBPACK_IMPORTED_MODULE_0__/* .scrollIntoViewIfNeeded */ .n)(newP, jodit.editor, jodit.ed);
}


/***/ }),

/***/ 48631:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   l: function() { return /* binding */ wrapText; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * If there is no container outside,
 * then we wrap all the nearest inline nodes in a container
 * @private
 */
function wrapText(fake, jodit) {
    let needWrap = fake;
    jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.up(needWrap, node => {
        if (node && node.hasChildNodes() && node !== jodit.editor) {
            needWrap = node;
        }
    }, jodit.editor);
    const currentBox = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.wrapInline(needWrap, jodit.o.enter, jodit);
    if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isEmpty(currentBox)) {
        const br = jodit.createInside.element('br');
        currentBox.appendChild(br);
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.before(br, fake);
    }
    return currentBox;
}


/***/ }),

/***/ 74083:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(71737);
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(30052);
/* harmony import */ var _icons_fontsize_svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(51416);
/* harmony import */ var _icons_fontsize_svg__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_icons_fontsize_svg__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _icons_font_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(84209);
/* harmony import */ var _icons_font_svg__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_icons_font_svg__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(76562);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */







/**
 * Default font-size points
 */
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.defaultFontSizePoints = 'px';
jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_1__/* .Icon */ .J.set('font', (_icons_font_svg__WEBPACK_IMPORTED_MODULE_3___default())).set('fontsize', (_icons_fontsize_svg__WEBPACK_IMPORTED_MODULE_2___default()));
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.fontsize = {
    command: 'fontsize',
    data: {
        cssRule: 'font-size',
        normalise: (v, editor) => {
            if (/pt$/i.test(v) && editor.o.defaultFontSizePoints === 'pt') {
                return v.replace(/pt$/i, '');
            }
            return v;
        }
    },
    list: [8, 9, 10, 11, 12, 14, 16, 18, 24, 30, 32, 34, 36, 48, 60, 72, 96],
    textTemplate: (editor, value) => {
        return value + editor.o.defaultFontSizePoints;
    },
    childTemplate: (editor, key, value) => {
        return `${value}${editor.o.defaultFontSizePoints}`;
    },
    tooltip: 'Font size',
    value: (editor, button) => {
        var _a;
        const current = editor.s.current();
        if (!current) {
            return;
        }
        const box = jodit_core_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.closest(current, jodit_core_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.isElement, editor.editor);
        if (!box) {
            return;
        }
        const control = button.control;
        const cssKey = ((_a = control.data) === null || _a === void 0 ? void 0 : _a.cssRule) || 'font-size';
        const value = (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_6__/* .css */ .i)(box, cssKey);
        return value.toString();
    },
    isChildActive: (editor, button) => {
        var _a, _b;
        const value = button.state.value;
        const normalize = (_b = (_a = button.control.data) === null || _a === void 0 ? void 0 : _a.normalize) !== null && _b !== void 0 ? _b : ((v) => v);
        return Boolean(value &&
            button.control.args &&
            normalize(button.control.args[0].toString()) ===
                normalize(value.toString()));
    },
    isActive: (editor, button) => {
        var _a, _b;
        const value = button.state.value;
        if (!value) {
            return false;
        }
        const normalize = (_b = (_a = button.control.data) === null || _a === void 0 ? void 0 : _a.normalize) !== null && _b !== void 0 ? _b : ((v) => v);
        let keySet = button.control.data.cacheListSet;
        if (!keySet) {
            const keys = Object.keys(button.control.list).map(normalize);
            keySet = new Set(keys);
            button.control.data.cacheListSet = keySet;
        }
        return keySet.has(normalize(value.toString()));
    }
};
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.font = Object.assign(Object.assign({}, jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.fontsize), { command: 'fontname', textTemplate: (j, value) => {
        const [first] = value.split(',');
        return (0,jodit_core_helpers_string_trim__WEBPACK_IMPORTED_MODULE_5__/* .trimChars */ .cE)(first, '"\'');
    }, list: {
        '': 'Default',
        'Arial, Helvetica, sans-serif': 'Arial',
        "'Courier New', Courier, monospace": 'Courier New',
        'Georgia, Palatino, serif': 'Georgia',
        "'Lucida Sans Unicode', 'Lucida Grande', sans-serif": 'Lucida Sans Unicode',
        'Tahoma, Geneva, sans-serif': 'Tahoma',
        "'Times New Roman', Times, serif": 'Times New Roman',
        "'Trebuchet MS', Helvetica, sans-serif": 'Trebuchet MS',
        'Helvetica, sans-serif': 'Helvetica',
        'Impact, Charcoal, sans-serif': 'Impact',
        'Verdana, Geneva, sans-serif': 'Verdana'
    }, childTemplate: (editor, key, value) => {
        let isAvailable = false;
        try {
            isAvailable =
                key.indexOf('dings') === -1 &&
                    document.fonts.check(`16px ${key}`, value);
        }
        catch (_a) { }
        return `<span data-style="${key}" style="${isAvailable ? `font-family: ${key}!important;` : ''}">${value}</span>`;
    }, data: {
        cssRule: 'font-family',
        normalize: (v) => {
            return v
                .toLowerCase()
                .replace(/['"]+/g, '')
                .replace(/[^a-z0-9-]+/g, ',');
        }
    }, tooltip: 'Font family' });


/***/ }),

/***/ 95768:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export font */
/* harmony import */ var jodit_core_helpers___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(79102);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(74083);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



/**
 * Process commands `fontsize` and `fontname`
 */
function font(editor) {
    editor
        .registerButton({
        name: 'font',
        group: 'font'
    })
        .registerButton({
        name: 'fontsize',
        group: 'font'
    });
    const callback = (command, second, third) => {
        switch (command) {
            case 'fontsize':
                editor.s.commitStyle({
                    attributes: {
                        style: {
                            fontSize: (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_0__.normalizeSize)(third, editor.o.defaultFontSizePoints)
                        }
                    }
                });
                break;
            case 'fontname':
                editor.s.commitStyle({
                    attributes: {
                        style: {
                            fontFamily: third
                        }
                    }
                });
                break;
        }
        editor.synchronizeValues();
        return false;
    };
    editor
        .registerCommand('fontsize', callback)
        .registerCommand('fontname', callback);
}
jodit_core_global__WEBPACK_IMPORTED_MODULE_1__/* .pluginSystem */ .pw.add('font', font);


/***/ }),

/***/ 67393:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(30052);
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(46879);
/* harmony import */ var _paragraph_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(59940);
/* harmony import */ var _paragraph_svg__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_paragraph_svg__WEBPACK_IMPORTED_MODULE_3__);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_0__/* .Icon */ .J.set('paragraph', (_paragraph_svg__WEBPACK_IMPORTED_MODULE_3___default()));
jodit_config__WEBPACK_IMPORTED_MODULE_1__/* .Config */ .D.prototype.controls.paragraph = {
    command: 'formatBlock',
    value(editor, button) {
        var _a, _b;
        const control = button.control, current = editor.s.current();
        const currentBox = jodit_core_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.closest(current, jodit_core_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isBlock, editor.editor);
        return (_a = currentBox === null || currentBox === void 0 ? void 0 : currentBox.nodeName.toLowerCase()) !== null && _a !== void 0 ? _a : (_b = control.data) === null || _b === void 0 ? void 0 : _b.currentValue;
    },
    update(editor, button) {
        const control = button.control, current = editor.s.current();
        if (!current) {
            return false;
        }
        const currentValue = button.state.value, list = control.list;
        if (list && list[currentValue.toString()]) {
            if (editor.o.textIcons) {
                button.state.text = list[currentValue.toString()].toString();
            }
        }
        return false;
    },
    data: {
        currentValue: 'p'
    },
    list: {
        p: 'Paragraph',
        h1: 'Heading 1',
        h2: 'Heading 2',
        h3: 'Heading 3',
        h4: 'Heading 4',
        blockquote: 'Quote',
        pre: 'Code'
    },
    isChildActive: (editor, button) => {
        var _a, _b;
        return Boolean(button.state.value === ((_b = (_a = button.control) === null || _a === void 0 ? void 0 : _a.args) === null || _b === void 0 ? void 0 : _b[0]));
    },
    isActive: (editor, button) => {
        var _a;
        return (button.state.value !== editor.o.enter &&
            Boolean((_a = button.control.list) === null || _a === void 0 ? void 0 : _a[button.state.value]));
    },
    childTemplate: (e, key, value) => `<${key} style="margin:0;padding:0"><span>${e.i18n(value)}</span></${key}>`,
    tooltip: 'Insert format block'
};


/***/ }),

/***/ 33631:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export formatBlock */
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(79102);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67393);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/**
 * Process command - `formatblock`
 */
function formatBlock(editor) {
    editor.registerButton({
        name: 'paragraph',
        group: 'font'
    });
    editor.registerCommand('formatblock', (command, second, third) => {
        editor.s.commitStyle({
            element: third
        });
        editor.synchronizeValues();
        return false;
    });
}
jodit_core_global__WEBPACK_IMPORTED_MODULE_0__/* .pluginSystem */ .pw.add('formatBlock', formatBlock);


/***/ }),

/***/ 59222:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(30052);
/* harmony import */ var _icons_fullsize_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(7764);
/* harmony import */ var _icons_fullsize_svg__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_icons_fullsize_svg__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _icons_shrink_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(32108);
/* harmony import */ var _icons_shrink_svg__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_icons_shrink_svg__WEBPACK_IMPORTED_MODULE_4__);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module plugins/fullsize
 */






jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.fullsize = false;
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.globalFullSize = true;
jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_2__/* .Icon */ .J.set('fullsize', (_icons_fullsize_svg__WEBPACK_IMPORTED_MODULE_3___default())).set('shrink', (_icons_shrink_svg__WEBPACK_IMPORTED_MODULE_4___default()));
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.fullsize = {
    exec: (editor) => {
        editor.toggleFullSize();
    },
    update(editor, button) {
        const mode = editor.isFullSize ? 'shrink' : 'fullsize';
        button.state.activated = editor.isFullSize;
        if (editor.o.textIcons) {
            button.state.text = mode;
        }
        else {
            button.state.icon.name = mode;
        }
    },
    tooltip: 'Open in fullsize',
    mode: jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_SOURCE + jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_WYSIWYG
};


/***/ }),

/***/ 32255:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export fullsize */
/* harmony import */ var jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(71737);
/* harmony import */ var jodit_core_helpers_checker_is_jodit_object__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8133);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(79102);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59222);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * [[include:plugins/fullsize/README.md]]
 * @packageDocumentation
 * @module plugins/fullsize
 */





const fullsizeStack = new Set();
/**
 * Process `toggleFullSize` event, and behavior - set/unset fullsize mode
 */
function fullsize(editor) {
    editor.registerButton({
        name: 'fullsize'
    });
    let isEnabled = false, oldHeight = 0, oldWidth = 0, wasToggled = false;
    const resize = () => {
        const { container, events } = editor;
        if (!events) {
            return;
        }
        if (isEnabled) {
            oldHeight = (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_2__/* .css */ .i)(container, 'height', true);
            oldWidth = (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_2__/* .css */ .i)(container, 'width', true);
            (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_2__/* .css */ .i)(container, {
                height: editor.ow.innerHeight,
                width: editor.ow.innerWidth
            });
            wasToggled = true;
        }
        else if (wasToggled) {
            (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_2__/* .css */ .i)(container, {
                height: oldHeight || 'auto',
                width: oldWidth || 'auto'
            });
        }
    }, 
    /**
     * Change editor's state between FullSize and normal
     */
    toggle = (enable) => {
        var _a;
        const { container, events } = editor;
        if (!container) {
            return;
        }
        if (enable === undefined) {
            enable = !container.classList.contains('jodit_fullsize');
        }
        editor.setMod('fullsize', enable);
        editor.o.fullsize = enable;
        isEnabled = enable;
        container.classList.toggle('jodit_fullsize', enable);
        if (editor.toolbar) {
            (0,jodit_core_helpers_checker_is_jodit_object__WEBPACK_IMPORTED_MODULE_3__/* .isJoditObject */ .Z)(editor) &&
                ((_a = editor.toolbarContainer) === null || _a === void 0 ? void 0 : _a.appendChild(editor.toolbar.container));
            (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_2__/* .css */ .i)(editor.toolbar.container, 'width', 'auto');
        }
        enable
            ? fullsizeStack.add(container)
            : fullsizeStack.delete(container);
        const shouldToggleGlobalFullsize = editor.o.globalFullSize &&
            ((fullsizeStack.size === 1 && enable) ||
                (fullsizeStack.size === 0 && !enable));
        if (shouldToggleGlobalFullsize) {
            let node = container.parentNode;
            while (node &&
                node.nodeType !== Node.DOCUMENT_NODE &&
                node.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {
                node.classList.toggle('jodit_fullsize-box_true', enable);
                node = node.parentNode;
            }
            resize();
        }
        events.fire('afterResize');
    };
    if (editor.o.globalFullSize) {
        editor.e.on(editor.ow, 'resize', resize);
    }
    editor.e
        .on('afterInit afterOpen', () => {
        var _a;
        editor.toggleFullSize((_a = editor === null || editor === void 0 ? void 0 : editor.options) === null || _a === void 0 ? void 0 : _a.fullsize);
    })
        .on('toggleFullSize', toggle)
        .on('beforeDestruct', () => {
        isEnabled && toggle(false);
    })
        .on('beforeDestruct', () => {
        editor.events && editor.e.off(editor.ow, 'resize', resize);
    });
}
jodit_core_global__WEBPACK_IMPORTED_MODULE_0__/* .pluginSystem */ .pw.add('fullsize', fullsize);


/***/ }),

/***/ 14463:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * You can redefine hotkeys for some command
 *
 * @example
 * ```js
 * var jodit = Jodit.make('#editor', {
 *  commandToHotkeys: {
 *      bold: 'ctrl+shift+b',
 *      italic: ['ctrl+i', 'ctrl+b'],
 *  }
 * })
 * ```
 */
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.commandToHotkeys = {
    removeFormat: ['ctrl+shift+m', 'cmd+shift+m'],
    insertOrderedList: ['ctrl+shift+7', 'cmd+shift+7'],
    insertUnorderedList: ['ctrl+shift+8, cmd+shift+8'],
    selectall: ['ctrl+a', 'cmd+a']
};


/***/ }),

/***/ 88766:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export hotkeys */
/* harmony import */ var jodit_core_plugin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7331);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(79102);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(14463);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */





/**
 * Allow set hotkey for command or button
 */
class hotkeys extends jodit_core_plugin__WEBPACK_IMPORTED_MODULE_0__/* .Plugin */ .S {
    constructor() {
        super(...arguments);
        this.onKeyPress = (event) => {
            const special = this.specialKeys[event.which], character = (event.key || String.fromCharCode(event.which)).toLowerCase();
            const modif = [special || character];
            ['alt', 'ctrl', 'shift', 'meta'].forEach(specialKey => {
                if (event[specialKey + 'Key'] && special !== specialKey) {
                    modif.push(specialKey);
                }
            });
            return (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.normalizeKeyAliases)(modif.join('+'));
        };
        this.specialKeys = {
            8: 'backspace',
            9: 'tab',
            10: 'return',
            13: 'return',
            16: 'shift',
            17: 'ctrl',
            18: 'alt',
            19: 'pause',
            20: 'capslock',
            27: 'esc',
            32: 'space',
            33: 'pageup',
            34: 'pagedown',
            35: 'end',
            36: 'home',
            37: 'left',
            38: 'up',
            39: 'right',
            40: 'down',
            45: 'insert',
            46: 'del',
            59: ';',
            61: '=',
            91: 'meta',
            96: '0',
            97: '1',
            98: '2',
            99: '3',
            100: '4',
            101: '5',
            102: '6',
            103: '7',
            104: '8',
            105: '9',
            106: '*',
            107: '+',
            109: '-',
            110: '.',
            111: '/',
            112: 'f1',
            113: 'f2',
            114: 'f3',
            115: 'f4',
            116: 'f5',
            117: 'f6',
            118: 'f7',
            119: 'f8',
            120: 'f9',
            121: 'f10',
            122: 'f11',
            123: 'f12',
            144: 'numlock',
            145: 'scroll',
            173: '-',
            186: ';',
            187: '=',
            188: ',',
            189: '-',
            190: '.',
            191: '/',
            192: '`',
            219: '[',
            220: '\\',
            221: ']',
            222: "'"
        };
    }
    /** @override */
    afterInit(editor) {
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.keys)(editor.o.commandToHotkeys, false).forEach((commandName) => {
            const shortcuts = editor.o.commandToHotkeys[commandName];
            if (shortcuts && ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isArray)(shortcuts) || (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isString)(shortcuts))) {
                editor.registerHotkeyToCommand(shortcuts, commandName);
            }
        });
        let itIsHotkey = false;
        editor.e
            .off('.hotkeys')
            .on([editor.ow, editor.ew], 'keydown.hotkeys', (e) => {
            if (e.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.KEY_ESC) {
                return this.j.e.fire('escape', e);
            }
        })
            .on('keydown.hotkeys', (event) => {
            const shortcut = this.onKeyPress(event), stop = {
                shouldStop: true
            };
            const resultOfFire = this.j.e.fire(shortcut + '.hotkey', event.type, stop);
            if (resultOfFire === false) {
                if (stop.shouldStop) {
                    itIsHotkey = true;
                    editor.e.stopPropagation('keydown');
                    return false;
                }
                else {
                    event.preventDefault();
                }
            }
        }, { top: true })
            .on('keyup.hotkeys', () => {
            if (itIsHotkey) {
                itIsHotkey = false;
                editor.e.stopPropagation('keyup');
                return false;
            }
        }, { top: true });
    }
    /** @override */
    beforeDestruct(jodit) {
        if (jodit.events) {
            jodit.e.off('.hotkeys');
        }
    }
}
jodit_core_global__WEBPACK_IMPORTED_MODULE_3__/* .pluginSystem */ .pw.add('hotkeys', hotkeys);


/***/ }),

/***/ 16719:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export hr */
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(79102);
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(30052);
/* harmony import */ var _hr_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(8223);
/* harmony import */ var _hr_svg__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_hr_svg__WEBPACK_IMPORTED_MODULE_4__);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */





jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_3__/* .Icon */ .J.set('hr', (_hr_svg__WEBPACK_IMPORTED_MODULE_4___default()));
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.hr = {
    command: 'insertHorizontalRule',
    tags: ['hr'],
    tooltip: 'Insert Horizontal Line'
};
function hr(editor) {
    editor.registerButton({
        name: 'hr',
        group: 'insert'
    });
    editor.registerCommand('insertHorizontalRule', () => {
        const elm = editor.createInside.element('hr');
        editor.s.insertNode(elm, false, false);
        const block = jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.closest(elm.parentElement, jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isBlock, editor.editor);
        if (block && jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isEmpty(block) && block !== editor.editor) {
            jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.after(block, elm);
            jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(block);
        }
        let p = jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.next(elm, jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isBlock, editor.editor, false);
        if (!p) {
            p = editor.createInside.element(editor.o.enter);
            jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.after(elm, p);
        }
        editor.s.setCursorIn(p);
        return false;
    });
}
jodit_core_global__WEBPACK_IMPORTED_MODULE_2__/* .pluginSystem */ .pw.add('hr', hr);


/***/ }),

/***/ 97731:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module plugins/image-processor
 */

jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.imageProcessor = {
    replaceDataURIToBlobIdInView: true
};


/***/ }),

/***/ 58991:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export imageProcessor */
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_plugin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7331);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(79102);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(97731);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */







const JODIT_IMAGE_PROCESSOR_BINDED = '__jodit_imageprocessor_binded';
const JODIT_IMAGE_BLOB_ID = JODIT_IMAGE_PROCESSOR_BINDED + 'blob-id';
/**
 * Change editor's size after load all images
 */
class imageProcessor extends jodit_core_plugin__WEBPACK_IMPORTED_MODULE_1__/* .Plugin */ .S {
    afterInit(jodit) { }
    beforeDestruct(jodit) {
        const list = jodit.buffer.get(JODIT_IMAGE_BLOB_ID);
        if (list) {
            const keys = Object.keys(list);
            for (const uri of keys) {
                URL.revokeObjectURL(uri);
            }
            jodit.buffer.delete(JODIT_IMAGE_BLOB_ID);
        }
    }
    onAfterGetValueFromEditor(data, consumer) {
        if (consumer !== jodit_core_constants__WEBPACK_IMPORTED_MODULE_3__.SOURCE_CONSUMER) {
            return this.onBeforeSetElementValue(data);
        }
    }
    onBeforeSetElementValue(data) {
        const { jodit: editor } = this;
        if (!editor.o.imageProcessor.replaceDataURIToBlobIdInView) {
            return;
        }
        const list = editor.buffer.get(JODIT_IMAGE_BLOB_ID);
        if (list) {
            const keys = Object.keys(list);
            for (const uri of keys) {
                while (data.value.includes(uri)) {
                    data.value = data.value.replace(uri, list[uri]);
                }
            }
        }
    }
    afterChange(data) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__/* .__awaiter */ .mG)(this, void 0, void 0, function* () {
            const { jodit: editor } = this;
            if (!editor.editor) {
                return;
            }
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.$$)('img', editor.editor).forEach(elm => {
                if (!(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.dataBind)(elm, JODIT_IMAGE_PROCESSOR_BINDED)) {
                    (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.dataBind)(elm, JODIT_IMAGE_PROCESSOR_BINDED, true);
                    if (!elm.complete) {
                        editor.e.on(elm, 'load', function ElementOnLoad() {
                            var _a;
                            !editor.isInDestruct && ((_a = editor.e) === null || _a === void 0 ? void 0 : _a.fire('resize'));
                            editor.e.off(elm, 'load', ElementOnLoad);
                        });
                    }
                    if (elm.src && /^data:/.test(elm.src)) {
                        replaceDataURIToBlobUUID(editor, elm);
                    }
                    editor.e.on(elm, 'mousedown touchstart', () => {
                        editor.s.select(elm);
                    });
                }
            });
        });
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_6__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_2__.watch)(':afterGetValueFromEditor')
], imageProcessor.prototype, "onAfterGetValueFromEditor", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_6__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_2__.watch)(':beforeSetElementValue')
], imageProcessor.prototype, "onBeforeSetElementValue", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_6__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_2__.watch)([':change', ':afterInit', ':changePlace']),
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_2__.debounce)()
], imageProcessor.prototype, "afterChange", null);
function replaceDataURIToBlobUUID(editor, elm) {
    if (!editor.o.imageProcessor.replaceDataURIToBlobIdInView) {
        return;
    }
    if (typeof ArrayBuffer === 'undefined' || typeof URL === 'undefined') {
        return;
    }
    const dataUri = elm.src, blob = dataURItoBlob(dataUri);
    elm.src = URL.createObjectURL(blob);
    editor.e.fire('internalUpdate');
    const { buffer } = editor;
    const list = buffer.get(JODIT_IMAGE_BLOB_ID) || {};
    list[elm.src] = dataUri;
    editor.buffer.set(JODIT_IMAGE_BLOB_ID, list);
}
// https://stackoverflow.com/a/12300351
function dataURItoBlob(dataURI) {
    // convert base64 to raw binary data held in a string
    // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this
    const byteString = atob(dataURI.split(',')[1]);
    // separate out the mime component
    const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];
    // write the bytes of the string to an ArrayBuffer
    const ab = new ArrayBuffer(byteString.length);
    // create a view into the buffer
    const ia = new Uint8Array(ab);
    // set the bytes of the buffer to the correct values
    for (let i = 0; i < byteString.length; i++) {
        ia[i] = byteString.charCodeAt(i);
    }
    // write the ArrayBuffer to a blob, and you're done
    return new Blob([ab], { type: mimeString });
}
jodit_core_global__WEBPACK_IMPORTED_MODULE_4__/* .pluginSystem */ .pw.add('imageProcessor', imageProcessor);


/***/ }),

/***/ 98139:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module plugins/image-properties
 */

jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.image = {
    dialogWidth: 600,
    openOnDblClick: true,
    editSrc: true,
    useImageEditor: true,
    editTitle: true,
    editAlt: true,
    editLink: true,
    editSize: true,
    editBorderRadius: true,
    editMargins: true,
    editClass: true,
    availableClasses: [],
    editStyle: true,
    editId: true,
    editAlign: true,
    showPreview: true,
    selectImageAfterClose: true
};


/***/ }),

/***/ 47:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export imageProperties */
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(97582);
/* harmony import */ var jodit_modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(27801);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76974);
/* harmony import */ var jodit_modules_widget__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6658);
/* harmony import */ var jodit_core_ui_button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(64856);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(13666);
/* harmony import */ var jodit_modules_image_editor_image_editor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(59210);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(79102);
/* harmony import */ var _templates_form__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(54079);
/* harmony import */ var _templates_main_tab__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(89980);
/* harmony import */ var _templates_position_tab__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(5150);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(98139);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * [[include:plugins/image-properties/README.md]]
 * @packageDocumentation
 * @module plugins/image-properties
 */












/**
 * Plug-in for image editing window
 *
 * @example
 * ```javascript
 * const editor = Jodit.make('#editor', {
 *     image: {
 *         editSrc: false,
 *         editLink: false
 *     }
 * });
 * ```
 */
const normalSizeToString = (value) => {
    value = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.trim)(value);
    return /^[0-9]+$/.test(value) ? value + 'px' : value;
};
const normalSizeFromString = (value) => {
    return /^[-+]?[0-9.]+px$/.test(value.toString())
        ? parseFloat(value.toString())
        : value;
};
/**
 * Show dialog with image's options
 */
class imageProperties extends jodit_modules__WEBPACK_IMPORTED_MODULE_0__.Plugin {
    constructor() {
        super(...arguments);
        this.state = {
            image: new Image(),
            get ratio() {
                return this.image.naturalWidth / this.image.naturalHeight || 1;
            },
            sizeIsLocked: true,
            marginIsLocked: true
        };
        this.activeTabState = {
            __activeTab: 'Image'
        };
    }
    onChangeMarginIsLocked() {
        if (!this.form) {
            return;
        }
        const { marginRight, marginBottom, marginLeft, lockMargin } = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.refs)(this.form);
        [marginRight, marginBottom, marginLeft].forEach(elm => {
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(elm, 'disabled', this.state.marginIsLocked || null);
        });
        lockMargin.innerHTML = jodit_modules__WEBPACK_IMPORTED_MODULE_0__.Icon.get(this.state.marginIsLocked ? 'lock' : 'unlock');
    }
    onChangeSizeIsLocked() {
        if (!this.form) {
            return;
        }
        const { lockSize, imageWidth } = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.refs)(this.form);
        lockSize.innerHTML = jodit_modules__WEBPACK_IMPORTED_MODULE_0__.Icon.get(this.state.sizeIsLocked ? 'lock' : 'unlock');
        lockSize.classList.remove('jodit-properties__lock');
        lockSize.classList.remove('jodit-properties__unlock');
        lockSize.classList.add(this.state.sizeIsLocked
            ? 'jodit-properties__lock'
            : 'jodit-properties__unlock');
        this.j.e.fire(imageWidth, 'change');
    }
    /**
     * Open dialog editing image properties
     *
     * @example
     * ```javascript
     * const editor = Jodit.makeJodit('#editor');
     *     img = editor.createInside.element('img');
     *
     * img.setAttribute('src', 'images/some-image.png');
     * editor.s.insertImage(img);
     * // open the properties of the editing window
     * editor.events.fire('openImageProperties', img);
     * ```
     */
    open() {
        this.makeForm();
        this.activeTabState.__activeTab = 'Image';
        this.j.e.fire('hidePopup');
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.markOwner)(this.j, this.dialog.container);
        this.state.marginIsLocked = true;
        this.state.sizeIsLocked = true;
        this.onChangeMarginIsLocked();
        this.onChangeSizeIsLocked();
        this.updateValues();
        this.dialog.open().setModal(true).setPosition();
        return false;
    }
    /**
     * Create form for edit image properties
     */
    makeForm() {
        if (this.dialog) {
            return;
        }
        this.dialog = this.j.dlg({
            minWidth: Math.min(400, screen.width),
            minHeight: 590,
            buttons: ['fullsize', 'dialog.close']
        });
        const editor = this.j, opt = editor.o, i18n = editor.i18n.bind(editor), buttons = {
            check: (0,jodit_core_ui_button__WEBPACK_IMPORTED_MODULE_3__/* .Button */ .zx)(editor, 'ok', 'Apply', 'primary'),
            remove: (0,jodit_core_ui_button__WEBPACK_IMPORTED_MODULE_3__/* .Button */ .zx)(editor, 'bin', 'Delete')
        };
        editor.e.on(this.dialog, 'afterClose', () => {
            if (this.state.image.parentNode &&
                opt.image.selectImageAfterClose) {
                editor.s.select(this.state.image);
            }
        });
        buttons.remove.onAction(() => {
            editor.s.removeNode(this.state.image);
            this.dialog.close();
        });
        const { dialog } = this;
        dialog.setHeader(i18n('Image properties'));
        const mainForm = (0,_templates_form__WEBPACK_IMPORTED_MODULE_7__/* .form */ .c)(editor);
        this.form = mainForm;
        dialog.setContent(mainForm);
        const { tabsBox } = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.refs)(this.form);
        if (tabsBox) {
            tabsBox.appendChild((0,jodit_modules_widget__WEBPACK_IMPORTED_MODULE_2__/* .TabsWidget */ .IL)(editor, [
                { name: 'Image', content: (0,_templates_main_tab__WEBPACK_IMPORTED_MODULE_8__/* .mainTab */ .t)(editor) },
                { name: 'Advanced', content: (0,_templates_position_tab__WEBPACK_IMPORTED_MODULE_9__/* .positionTab */ .G)(editor) }
            ], this.activeTabState));
        }
        buttons.check.onAction(this.onApply);
        const { changeImage, editImage } = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.refs)(this.form);
        editor.e.on(changeImage, 'click', this.openImagePopup);
        if (opt.image.useImageEditor) {
            editor.e.on(editImage, 'click', this.openImageEditor);
        }
        const { lockSize, lockMargin, imageWidth, imageHeight } = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.refs)(mainForm);
        if (lockSize) {
            editor.e.on(lockSize, 'click', () => {
                this.state.sizeIsLocked = !this.state.sizeIsLocked;
            });
        }
        editor.e.on(lockMargin, 'click', (e) => {
            this.state.marginIsLocked = !this.state.marginIsLocked;
            e.preventDefault();
        });
        const changeSizes = (event) => {
            if (!(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isNumeric)(imageWidth.value) || !(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isNumeric)(imageHeight.value)) {
                return;
            }
            const w = parseFloat(imageWidth.value), h = parseFloat(imageHeight.value);
            if (event.target === imageWidth) {
                imageHeight.value = Math.round(w / this.state.ratio).toString();
            }
            else {
                imageWidth.value = Math.round(h * this.state.ratio).toString();
            }
        };
        editor.e.on([imageWidth, imageHeight], 'change keydown mousedown paste', (event) => {
            if (!this.state.sizeIsLocked) {
                return;
            }
            editor.async.setTimeout(changeSizes.bind(this, event), {
                timeout: editor.defaultTimeout,
                label: 'image-properties-changeSize'
            });
        });
        dialog.setFooter([buttons.remove, buttons.check]);
        dialog.setSize(this.j.o.image.dialogWidth);
    }
    /**
     * Set input values from image
     */
    updateValues() {
        const opt = this.j.o;
        const { image } = this.state;
        const { marginTop, marginRight, marginBottom, marginLeft, lockMargin, imageSrc, id, classes, align, style, imageTitle, imageAlt, borderRadius, imageLink, imageWidth, imageHeight, imageLinkOpenInNewTab, imageViewSrc, lockSize } = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.refs)(this.form);
        const updateLock = () => {
            lockMargin.checked = this.state.marginIsLocked;
            lockSize.checked = this.state.sizeIsLocked;
        }, updateAlign = () => {
            if (image.style.cssFloat &&
                ['left', 'right'].indexOf(image.style.cssFloat.toLowerCase()) !== -1) {
                align.value = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.css)(image, 'float');
            }
            else {
                if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.css)(image, 'display') === 'block' &&
                    image.style.marginLeft === 'auto' &&
                    image.style.marginRight === 'auto') {
                    align.value = 'center';
                }
            }
        }, updateBorderRadius = () => {
            borderRadius.value = (parseInt(image.style.borderRadius || '0', 10) || '0').toString();
        }, updateId = () => {
            id.value = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(image, 'id') || '';
        }, updateStyle = () => {
            style.value = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(image, 'style') || '';
        }, updateClasses = () => {
            classes.value = ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(image, 'class') || '').replace(/jodit_focused_image[\s]*/, '');
        }, updateMargins = () => {
            if (!opt.image.editMargins) {
                return;
            }
            let equal = true, wasEmptyField = false;
            [marginTop, marginRight, marginBottom, marginLeft].forEach(elm => {
                const id = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(elm, 'data-ref') || '';
                let value = image.style.getPropertyValue((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.kebabCase)(id));
                if (!value) {
                    wasEmptyField = true;
                    elm.value = '';
                    return;
                }
                if (/^[0-9]+(px)?$/.test(value)) {
                    value = parseInt(value, 10);
                }
                elm.value = value.toString() || '';
                if ((wasEmptyField && elm.value) ||
                    (equal &&
                        id !== 'marginTop' &&
                        elm.value !== marginTop.value)) {
                    equal = false;
                }
            });
            this.state.marginIsLocked = equal;
        }, updateSizes = () => {
            const width = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(image, 'width') ||
                (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.css)(image, 'width', true) ||
                false, height = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(image, 'height') ||
                (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.css)(image, 'height', true) ||
                false;
            imageWidth.value =
                width !== false
                    ? normalSizeFromString(width).toString()
                    : image.offsetWidth.toString();
            imageHeight.value =
                height !== false
                    ? normalSizeFromString(height).toString()
                    : image.offsetHeight.toString();
            this.state.sizeIsLocked = (() => {
                if (!(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isNumeric)(imageWidth.value) ||
                    !(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isNumeric)(imageHeight.value)) {
                    return false;
                }
                const w = parseFloat(imageWidth.value), h = parseFloat(imageHeight.value);
                return Math.abs(w - h * this.state.ratio) < 1;
            })();
        }, updateText = () => {
            imageTitle.value = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(image, 'title') || '';
            imageAlt.value = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(image, 'alt') || '';
            const a = jodit_modules__WEBPACK_IMPORTED_MODULE_0__.Dom.closest(image, 'a', this.j.editor);
            if (a) {
                imageLink.value = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(a, 'href') || '';
                imageLinkOpenInNewTab.checked =
                    (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(a, 'target') === '_blank';
            }
            else {
                imageLink.value = '';
                imageLinkOpenInNewTab.checked = false;
            }
        }, updateSrc = () => {
            imageSrc.value = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(image, 'src') || '';
            if (imageViewSrc) {
                (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(imageViewSrc, 'src', (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(image, 'src') || '');
            }
        };
        updateLock();
        updateSrc();
        updateText();
        updateSizes();
        updateMargins();
        updateClasses();
        updateId();
        updateBorderRadius();
        updateAlign();
        updateStyle();
    }
    /**
     * Apply form's values to image
     */
    onApply() {
        const { style, imageSrc, borderRadius, imageTitle, imageAlt, imageLink, imageWidth, imageHeight, marginTop, marginRight, marginBottom, marginLeft, imageLinkOpenInNewTab, align, classes, id } = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.refs)(this.form);
        const opt = this.j.o;
        const { image } = this.state;
        // styles
        if (opt.image.editStyle) {
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(image, 'style', style.value || null);
        }
        // Src
        if (imageSrc.value) {
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(image, 'src', imageSrc.value);
        }
        else {
            jodit_modules__WEBPACK_IMPORTED_MODULE_0__.Dom.safeRemove(image);
            this.dialog.close();
            return;
        }
        // Border radius
        if (borderRadius.value !== '0' && /^[0-9]+$/.test(borderRadius.value)) {
            image.style.borderRadius = borderRadius.value + 'px';
        }
        else {
            image.style.borderRadius = '';
        }
        // Title
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(image, 'title', imageTitle.value || null);
        // Alt
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(image, 'alt', imageAlt.value || null);
        // Link
        let link = jodit_modules__WEBPACK_IMPORTED_MODULE_0__.Dom.closest(image, 'a', this.j.editor);
        if (imageLink.value) {
            if (!link) {
                link = jodit_modules__WEBPACK_IMPORTED_MODULE_0__.Dom.wrap(image, 'a', this.j.createInside);
            }
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(link, 'href', imageLink.value);
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(link, 'target', imageLinkOpenInNewTab.checked ? '_blank' : null);
        }
        else {
            if (link && link.parentNode) {
                link.parentNode.replaceChild(image, link);
            }
        }
        // Size
        if (imageWidth.value !== image.offsetWidth.toString() ||
            imageHeight.value !== image.offsetHeight.toString()) {
            const updatedtWidth = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.trim)(imageWidth.value)
                ? normalSizeToString(imageWidth.value)
                : null;
            const updatedHeight = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.trim)(imageHeight.value)
                ? normalSizeToString(imageHeight.value)
                : null;
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.css)(image, {
                width: updatedtWidth,
                height: updatedHeight
            });
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(image, 'width', (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(image, 'width') ? updatedtWidth : null);
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(image, 'height', (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(image, 'height') ? updatedHeight : null);
        }
        const margins = [marginTop, marginRight, marginBottom, marginLeft];
        if (opt.image.editMargins) {
            if (!this.state.marginIsLocked) {
                margins.forEach((margin) => {
                    const side = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(margin, 'data-ref') || '';
                    (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.css)(image, side, normalSizeToString(margin.value));
                });
            }
            else {
                (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.css)(image, 'margin', normalSizeToString(marginTop.value));
            }
        }
        if (opt.image.editClass) {
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(image, 'class', classes.value || null);
        }
        if (opt.image.editId) {
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(image, 'id', id.value || null);
        }
        if (opt.image.editAlign) {
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.hAlignElement)(image, align.value);
        }
        this.j.synchronizeValues();
        this.dialog.close();
    }
    /**
     * Open image editor dialog
     */
    openImageEditor() {
        const url = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(this.state.image, 'src') || '', a = this.j.c.element('a'), loadExternal = () => {
            if (a.host !== location.host) {
                this.j.confirm('You can only edit your own images. Download this image on the host?', yes => {
                    if (yes && this.j.uploader) {
                        this.j.uploader.uploadRemoteImage(a.href.toString(), resp => {
                            this.j.alert('The image has been successfully uploaded to the host!', () => {
                                if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isString)(resp.newfilename)) {
                                    (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(this.state.image, 'src', resp.baseurl +
                                        resp.newfilename);
                                    this.updateValues();
                                }
                            });
                        }, error => {
                            this.j.alert('There was an error loading %s', error.message);
                        });
                    }
                });
                return;
            }
        };
        a.href = url;
        this.j.filebrowser.dataProvider
            .getPathByUrl(a.href.toString())
            .then(resp => {
            jodit_modules_image_editor_image_editor__WEBPACK_IMPORTED_MODULE_5__/* .openImageEditor */ .r.call(this.j.filebrowser, a.href, resp.name, resp.path, resp.source, () => {
                const timestamp = new Date().getTime();
                (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(this.state.image, 'src', url +
                    (url.indexOf('?') !== -1 ? '' : '?') +
                    '&_tmp=' +
                    timestamp.toString());
                this.updateValues();
            }, error => {
                this.j.alert(error.message);
            });
        })
            .catch(error => {
            this.j.alert(error.message, loadExternal);
        });
    }
    /**
     * Open popup with filebrowser/uploader buttons for image
     */
    openImagePopup(event) {
        const popup = new jodit_modules__WEBPACK_IMPORTED_MODULE_0__.Popup(this.j), { changeImage } = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.refs)(this.form);
        popup.setZIndex(this.dialog.getZIndex() + 1);
        popup
            .setContent((0,jodit_modules_widget__WEBPACK_IMPORTED_MODULE_2__/* .FileSelectorWidget */ .ov)(this.j, {
            upload: (data) => {
                if (data.files && data.files.length) {
                    (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(this.state.image, 'src', data.baseurl + data.files[0]);
                }
                this.updateValues();
                popup.close();
            },
            filebrowser: (data) => {
                if (data &&
                    (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isArray)(data.files) &&
                    data.files.length) {
                    (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(this.state.image, 'src', data.files[0]);
                    popup.close();
                    this.updateValues();
                }
            }
        }, this.state.image, popup.close))
            .open(() => (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.position)(changeImage));
        event.stopPropagation();
    }
    /** @override **/
    afterInit(editor) {
        const self = this;
        editor.e
            .on('afterConstructor changePlace', () => {
            editor.e
                .off(editor.editor, '.imageproperties')
                .on(editor.editor, 'dblclick.imageproperties', (e) => {
                const image = e.target;
                if (!jodit_modules__WEBPACK_IMPORTED_MODULE_0__.Dom.isTag(image, 'img')) {
                    return;
                }
                if (editor.o.image.openOnDblClick) {
                    if (this.j.e.fire('openOnDblClick', image) ===
                        false) {
                        return;
                    }
                    self.state.image = image;
                    if (!editor.o.readonly) {
                        e.stopImmediatePropagation();
                        e.preventDefault();
                        self.open();
                    }
                }
                else {
                    e.stopImmediatePropagation();
                    editor.s.select(image);
                }
            });
        })
            .on('openImageProperties.imageproperties', (image) => {
            this.state.image = image;
            this.open();
        });
    }
    /** @override */
    beforeDestruct(editor) {
        this.dialog && this.dialog.destruct();
        editor.e.off(editor.editor, '.imageproperties').off('.imageproperties');
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_11__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__.watch)('state.marginIsLocked')
], imageProperties.prototype, "onChangeMarginIsLocked", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_11__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__.watch)('state.sizeIsLocked')
], imageProperties.prototype, "onChangeSizeIsLocked", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_11__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__.autobind
], imageProperties.prototype, "onApply", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_11__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__.autobind
], imageProperties.prototype, "openImageEditor", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_11__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__.autobind
], imageProperties.prototype, "openImagePopup", null);
jodit_core_global__WEBPACK_IMPORTED_MODULE_6__/* .pluginSystem */ .pw.add('imageProperties', imageProperties);


/***/ }),

/***/ 54079:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c: function() { return /* binding */ form; }
/* harmony export */ });
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(30052);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

function form(editor) {
    const { showPreview, editSize } = editor.o.image, gi = jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_0__/* .Icon */ .J.get.bind(jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_0__/* .Icon */ .J);
    return editor.c.fromHTML(`<form class="jodit-properties">
		<div class="jodit-grid jodit-grid_xs-column">
			<div class="jodit_col-lg-2-5 jodit_col-xs-5-5">
				<div class="jodit-properties_view_box">
					<div style="${!showPreview ? 'display:none' : ''}" class="jodit-properties_image_view">
						<img data-ref="imageViewSrc" src="" alt=""/>
					</div>
					<div style="${!editSize ? 'display:none' : ''}" class="jodit-form__group jodit-properties_image_sizes">
						<input data-ref="imageWidth" type="text" class="jodit-input"/>
						<a data-ref="lockSize" class="jodit-properties__lock">${gi('lock')}</a>
						<input data-ref="imageHeight" type="text" class="imageHeight jodit-input"/>
					</div>
				</div>
			</div>
			<div data-ref="tabsBox" class="jodit_col-lg-3-5 jodit_col-xs-5-5"></div>
		</div>
	</form>`);
}


/***/ }),

/***/ 89980:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   t: function() { return /* binding */ mainTab; }
/* harmony export */ });
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(30052);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

function mainTab(editor) {
    const opt = editor.o, i18n = editor.i18n.bind(editor), gi = jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_0__/* .Icon */ .J.get.bind(jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_0__/* .Icon */ .J), hasFbUrl = opt.filebrowser.ajax.url || opt.uploader.url, hasEditor = opt.image.useImageEditor;
    return editor.c.fromHTML(`<div style="${!opt.image.editSrc ? 'display:none' : ''}" class="jodit-form__group">
			<label>${i18n('Src')}</label>
			<div class="jodit-input_group">
				<input data-ref="imageSrc" class="jodit-input" type="text"/>
				<div
					class="jodit-input_group-buttons"
					style="${hasFbUrl ? '' : 'display: none'}"
				>
						<a
							data-ref="changeImage"
							class="jodit-button"
						>${gi('image')}</a>
						<a
							data-ref="editImage"
							class="jodit-button"
							style="${hasEditor ? '' : 'display: none'}"
						>${gi('crop')}</a>
				</div>
			</div>
		</div>
		<div style="${!opt.image.editTitle ? 'display:none' : ''}" class="jodit-form__group">
			<label>${i18n('Title')}</label>
			<input data-ref="imageTitle" type="text" class="jodit-input"/>
		</div>
		<div style="${!opt.image.editAlt ? 'display:none' : ''}" class="jodit-form__group">
			<label>${i18n('Alternative')}</label>
			<input data-ref="imageAlt" type="text" class="jodit-input"/>
		</div>
		<div style="${!opt.image.editLink ? 'display:none' : ''}" class="jodit-form__group">
			<label>${i18n('Link')}</label>
			<input data-ref="imageLink" type="text" class="jodit-input"/>
		</div>
		<div style="${!opt.image.editLink ? 'display:none' : ''}" class="jodit-form__group">
			<label class="jodit_vertical_middle">
				<input data-ref="imageLinkOpenInNewTab" type="checkbox" class="jodit-checkbox"/>
				<span>${i18n('Open link in new tab')}</span>
			</label>
		</div>`);
}


/***/ }),

/***/ 5150:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   G: function() { return /* binding */ positionTab; }
/* harmony export */ });
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(30052);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

function positionTab(editor) {
    const opt = editor.o, i18n = editor.i18n.bind(editor), gi = jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_0__/* .Icon */ .J.get.bind(jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_0__/* .Icon */ .J);
    const classInput = [];
    if (opt.image.availableClasses.length > 0) {
        classInput.push('<select data-ref="classes" class="jodit-input jodit-select">');
        opt.image.availableClasses.forEach(item => {
            if (typeof item === 'string') {
                classInput.push(`<option value="${item}">${item}</option>`);
            }
            else {
                classInput.push(`<option value="${item[0]}">${item[1]}</option>`);
            }
        });
        classInput.push('</select>');
    }
    else {
        classInput.push('<input data-ref="classes" type="text" class="jodit-input"/>');
    }
    return editor.c.fromHTML(`<div style="${!opt.image.editMargins ? 'display:none' : ''}" class="jodit-form__group">
			<label>${i18n('Margins')}</label>
			<div class="jodit-grid jodit_vertical_middle">
				<input class="jodit_col-lg-1-5 jodit-input" data-ref="marginTop" type="text" placeholder="${i18n('top')}"/>
				<a style="text-align: center;" data-ref="lockMargin" class="jodit-properties__lock jodit_col-lg-1-5">${gi('lock')}</a>
				<input disabled="true" class="jodit_col-lg-1-5 jodit-input" data-ref="marginRight" type="text" placeholder="${i18n('right')}"/>
				<input disabled="true" class="jodit_col-lg-1-5 jodit-input" data-ref="marginBottom" type="text" placeholder="${i18n('bottom')}"/>
				<input disabled="true" class="jodit_col-lg-1-5 jodit-input" data-ref="marginLeft" type="text" placeholder="${i18n('left')}"/>
			</div>
		</div>
		<div
			style="${!opt.image.editAlign ? 'display:none' : ''}"
			class="jodit-form__group"
		>
			<label>${i18n('Align')}</label>
			<select data-ref="align" class="jodit-select">
				<option value="">${i18n('--Not Set--')}</option>
				<option value="left">${i18n('Left')}</option>
				<option value="center">${i18n('Center')}</option>
				<option value="right">${i18n('Right')}</option>
			</select>
		</div>
		<div style="${!opt.image.editStyle ? 'display:none' : ''}" class="jodit-form__group">
			<label>${i18n('Styles')}</label>
			<input data-ref="style" type="text" class="jodit-input"/>
		</div>
		<div style="${!opt.image.editClass ? 'display:none' : ''}" class="jodit-form__group">
			<label>${i18n('Classes')}</label>
			${classInput.join('')}
		</div>
		<div style="${!opt.image.editId ? 'display:none' : ''}" class="jodit-form__group">
			<label>Id</label>
			<input data-ref="id" type="text" class="jodit-input"/>
		</div>
		<div
			style="${!opt.image.editBorderRadius ? 'display:none' : ''}"
			class="jodit-form__group"
		>
			<label>${i18n('Border radius')}</label>
				<input data-ref="borderRadius" type="number" class="jodit-input"/>
		</div>`);
}


/***/ }),

/***/ 11226:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export image */
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76974);
/* harmony import */ var jodit_modules_widget__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6658);
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(79102);
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(30052);
/* harmony import */ var _image_svg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(51382);
/* harmony import */ var _image_svg__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_image_svg__WEBPACK_IMPORTED_MODULE_6__);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */








jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_5__/* .Icon */ .J.set('image', (_image_svg__WEBPACK_IMPORTED_MODULE_6___default()));
jodit_config__WEBPACK_IMPORTED_MODULE_3__/* .Config */ .D.prototype.controls.image = {
    popup: (editor, current, close) => {
        let sourceImage = null;
        if (current &&
            !jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isText(current) &&
            jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isHTMLElement(current) &&
            (jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(current, 'img') || (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.$$)('img', current).length)) {
            sourceImage = jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(current, 'img')
                ? current
                : (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.$$)('img', current)[0];
        }
        editor.s.save();
        return (0,jodit_modules_widget__WEBPACK_IMPORTED_MODULE_2__/* .FileSelectorWidget */ .ov)(editor, {
            filebrowser: (data) => {
                editor.s.restore();
                data.files &&
                    data.files.forEach(file => editor.s.insertImage(data.baseurl + file, null, editor.o.imageDefaultWidth));
                close();
            },
            upload: true,
            url: (url, text) => (0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__awaiter */ .mG)(void 0, void 0, void 0, function* () {
                editor.s.restore();
                if (/^[a-z\d_-]+(\.[a-z\d_-]+)+/i.test(url)) {
                    url = '//' + url;
                }
                const image = sourceImage || editor.createInside.element('img');
                image.setAttribute('src', url);
                image.setAttribute('alt', text);
                if (!sourceImage) {
                    yield editor.s.insertImage(image, null, editor.o.imageDefaultWidth);
                }
                close();
            })
        }, sourceImage, close);
    },
    tags: ['img'],
    tooltip: 'Insert Image'
};
function image(editor) {
    editor.registerButton({
        name: 'image',
        group: 'media'
    });
}
jodit_core_global__WEBPACK_IMPORTED_MODULE_4__/* .pluginSystem */ .pw.add('image', image);


/***/ }),

/***/ 18016:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(30052);
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(64258);
/* harmony import */ var _icons_indent_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(30863);
/* harmony import */ var _icons_indent_svg__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_icons_indent_svg__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _icons_outdent_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(89721);
/* harmony import */ var _icons_outdent_svg__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_icons_outdent_svg__WEBPACK_IMPORTED_MODULE_5__);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */






jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_2__/* .Icon */ .J.set('indent', (_icons_indent_svg__WEBPACK_IMPORTED_MODULE_4___default())).set('outdent', (_icons_outdent_svg__WEBPACK_IMPORTED_MODULE_5___default()));
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.indent = {
    tooltip: 'Increase Indent'
};
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.outdent = {
    isDisabled: (editor) => {
        const current = editor.s.current();
        if (current) {
            const currentBox = jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.closest(current, jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isBlock, editor.editor);
            if (currentBox) {
                const arrow = (0,_helpers__WEBPACK_IMPORTED_MODULE_3__/* .getKey */ .k)(editor.o.direction, currentBox);
                return (!currentBox.style[arrow] ||
                    parseInt(currentBox.style[arrow], 10) <= 0);
            }
        }
        return true;
    },
    tooltip: 'Decrease Indent'
};
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.indentMargin = 10;


/***/ }),

/***/ 64258:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   k: function() { return /* binding */ getKey; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module plugins/indent
 */

/**
 * Get style rule key for current direction
 * @internal
 */
const getKey = (direction, box) => `${jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isCell(box) ? 'padding' : 'margin'}${direction === 'rtl' ? 'Right' : 'Left'}`;


/***/ }),

/***/ 31423:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export indent */
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(79102);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(18016);
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(64258);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */






/**
 * Indents the line containing the selection or insertion point.
 */
function indent(editor) {
    editor
        .registerButton({
        name: 'indent',
        group: 'indent'
    })
        .registerButton({
        name: 'outdent',
        group: 'indent'
    });
    const callback = (command) => {
        const processedElements = [];
        editor.s.eachSelection((current) => {
            editor.s.save();
            let currentBox = current
                ? jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.up(current, jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isBlock, editor.editor)
                : false;
            const { enter } = editor.o;
            if (!currentBox && current) {
                currentBox = jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.wrapInline(current, enter !== jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.BR ? enter : jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.PARAGRAPH, editor);
            }
            if (!currentBox) {
                editor.s.restore();
                return false;
            }
            const alreadyIndented = processedElements.includes(currentBox);
            if (currentBox && !alreadyIndented) {
                const key = (0,_helpers__WEBPACK_IMPORTED_MODULE_5__/* .getKey */ .k)(editor.o.direction, currentBox);
                processedElements.push(currentBox);
                let value = currentBox.style[key]
                    ? parseInt(currentBox.style[key], 10)
                    : 0;
                value +=
                    editor.o.indentMargin * (command === 'outdent' ? -1 : 1);
                currentBox.style[key] = value > 0 ? value + 'px' : '';
                if (!(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.attr)(currentBox, 'style')) {
                    (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.attr)(currentBox, 'style', null);
                }
            }
            editor.s.restore();
        });
        editor.synchronizeValues();
        return false;
    };
    editor.registerCommand('indent', {
        exec: callback,
        hotkeys: ['ctrl+]', 'cmd+]']
    });
    editor.registerCommand('outdent', {
        exec: callback,
        hotkeys: ['ctrl+[', 'cmd+[']
    });
}
jodit_core_global__WEBPACK_IMPORTED_MODULE_3__/* .pluginSystem */ .pw.add('indent', indent);


/***/ }),

/***/ 14219:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_plugins_about_about__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(45143);
/* harmony import */ var jodit_plugins_about_about__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jodit_plugins_about_about__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var jodit_plugins_backspace_backspace__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(12487);
/* harmony import */ var jodit_plugins_bold_bold__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(59232);
/* harmony import */ var jodit_plugins_clean_html_clean_html__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(80586);
/* harmony import */ var jodit_plugins_color_color__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(13949);
/* harmony import */ var jodit_plugins_copy_format_copy_format__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(12706);
/* harmony import */ var jodit_plugins_enter_enter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(43839);
/* harmony import */ var jodit_plugins_font_font__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(95768);
/* harmony import */ var jodit_plugins_format_block_format_block__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(33631);
/* harmony import */ var jodit_plugins_fullsize_fullsize__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(32255);
/* harmony import */ var jodit_plugins_hotkeys_hotkeys__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(88766);
/* harmony import */ var jodit_plugins_hr_hr__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(16719);
/* harmony import */ var jodit_plugins_image_image__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(11226);
/* harmony import */ var jodit_plugins_image_processor_image_processor__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(58991);
/* harmony import */ var jodit_plugins_image_properties_image_properties__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(47);
/* harmony import */ var jodit_plugins_indent_indent__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(31423);
/* harmony import */ var jodit_plugins_inline_popup_inline_popup__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(63066);
/* harmony import */ var jodit_plugins_justify_justify__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(49201);
/* harmony import */ var jodit_plugins_link_link__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(52183);
/* harmony import */ var jodit_plugins_mobile_mobile__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(86899);
/* harmony import */ var jodit_plugins_ordered_list_ordered_list__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(73602);
/* harmony import */ var jodit_plugins_paste_paste__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(90302);
/* harmony import */ var jodit_plugins_redo_undo_redo_undo__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(72735);
/* harmony import */ var jodit_plugins_resize_cells_resize_cells__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(56866);
/* harmony import */ var jodit_plugins_resizer_resizer__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(68135);
/* harmony import */ var jodit_plugins_select_select__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(94895);
/* harmony import */ var jodit_plugins_select_cells_select_cells__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(31541);
/* harmony import */ var jodit_plugins_source_source__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(1759);
/* harmony import */ var jodit_plugins_symbols_symbols__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(1720);
/* harmony import */ var jodit_plugins_tab_tab__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(41012);
/* harmony import */ var jodit_plugins_table_table__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(98457);
/* harmony import */ var jodit_plugins_table_keyboard_navigation_table_keyboard_navigation__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(62);
/* harmony import */ var jodit_plugins_video_video__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(79745);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * [[include:plugins/README.md]]
 * @packageDocumentation
 * @module plugins
 */































































/***/ }),

/***/ 95508:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(30052);
/* harmony import */ var jodit_plugins_inline_popup_icons_addcolumn_svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(10147);
/* harmony import */ var jodit_plugins_inline_popup_icons_addcolumn_svg__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jodit_plugins_inline_popup_icons_addcolumn_svg__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var jodit_plugins_inline_popup_icons_addrow_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(14165);
/* harmony import */ var jodit_plugins_inline_popup_icons_addrow_svg__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(jodit_plugins_inline_popup_icons_addrow_svg__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var jodit_plugins_inline_popup_icons_merge_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(42516);
/* harmony import */ var jodit_plugins_inline_popup_icons_merge_svg__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(jodit_plugins_inline_popup_icons_merge_svg__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var jodit_plugins_inline_popup_icons_th_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(68315);
/* harmony import */ var jodit_plugins_inline_popup_icons_th_svg__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(jodit_plugins_inline_popup_icons_th_svg__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var jodit_plugins_inline_popup_icons_splitg_svg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(80554);
/* harmony import */ var jodit_plugins_inline_popup_icons_splitg_svg__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(jodit_plugins_inline_popup_icons_splitg_svg__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var jodit_plugins_inline_popup_icons_splitv_svg__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(10328);
/* harmony import */ var jodit_plugins_inline_popup_icons_splitv_svg__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(jodit_plugins_inline_popup_icons_splitv_svg__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var jodit_plugins_inline_popup_icons_th_list_svg__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(69187);
/* harmony import */ var jodit_plugins_inline_popup_icons_th_list_svg__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(jodit_plugins_inline_popup_icons_th_list_svg__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _items_a__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(62029);
/* harmony import */ var _items_img__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(15432);
/* harmony import */ var _items_cells__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(11754);
/* harmony import */ var _items_toolbar__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(78658);
/* harmony import */ var _items_iframe__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(54182);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
















jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.toolbarInline = true;
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.toolbarInlineForSelection = false;
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.toolbarInlineDisableFor = [];
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.toolbarInlineDisabledButtons = ['source'];
jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_1__/* .Icon */ .J.set('addcolumn', (jodit_plugins_inline_popup_icons_addcolumn_svg__WEBPACK_IMPORTED_MODULE_2___default()))
    .set('addrow', (jodit_plugins_inline_popup_icons_addrow_svg__WEBPACK_IMPORTED_MODULE_3___default()))
    .set('merge', (jodit_plugins_inline_popup_icons_merge_svg__WEBPACK_IMPORTED_MODULE_4___default()))
    .set('th', (jodit_plugins_inline_popup_icons_th_svg__WEBPACK_IMPORTED_MODULE_5___default()))
    .set('splitg', (jodit_plugins_inline_popup_icons_splitg_svg__WEBPACK_IMPORTED_MODULE_6___default()))
    .set('splitv', (jodit_plugins_inline_popup_icons_splitv_svg__WEBPACK_IMPORTED_MODULE_7___default()))
    .set('th-list', (jodit_plugins_inline_popup_icons_th_list_svg__WEBPACK_IMPORTED_MODULE_8___default()));
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.popup = {
    a: _items_a__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z,
    img: _items_img__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z,
    cells: _items_cells__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z,
    toolbar: _items_toolbar__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z,
    jodit: _items_iframe__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z,
    iframe: _items_iframe__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z,
    'jodit-media': _items_iframe__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z,
    selection: [
        'bold',
        'underline',
        'italic',
        'ul',
        'ol',
        '\n',
        'outdent',
        'indent',
        'fontsize',
        'brush',
        'cut',
        '\n',
        'paragraph',
        'link',
        'align',
        'dots'
    ]
};


/***/ }),

/***/ 62029:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_core_helpers_utils_attr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(23144);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/* harmony default export */ __webpack_exports__.Z = ([
    {
        name: 'eye',
        tooltip: 'Open link',
        exec: (editor, current) => {
            const href = (0,jodit_core_helpers_utils_attr__WEBPACK_IMPORTED_MODULE_0__/* .attr */ .L)(current, 'href');
            if (current && href) {
                editor.ow.open(href);
            }
        }
    },
    {
        name: 'link',
        tooltip: 'Edit link',
        icon: 'pencil'
    },
    'unlink',
    'brush',
    'file'
]);


/***/ }),

/***/ 11754:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(78157);
/* harmony import */ var jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(71737);
/* harmony import */ var jodit_modules_widget__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6658);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



const cmd = (control) => control.args && (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isString */ .HD)(control.args[0])
    ? control.args[0].toLowerCase()
    : '';
/* harmony default export */ __webpack_exports__.Z = ([
    {
        name: 'brush',
        popup: (editor, _, close) => {
            if (!(0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isJoditObject */ .Zu)(editor)) {
                return;
            }
            const tableModule = editor.getInstance('Table', editor.o), selected = tableModule.getAllSelectedCells();
            if (!selected.length) {
                return false;
            }
            const makeColorPicker = (key) => (0,jodit_modules_widget__WEBPACK_IMPORTED_MODULE_1__/* .ColorPickerWidget */ .YW)(editor, (value) => {
                selected.forEach(cell => {
                    (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_2__/* .css */ .i)(cell, key, value);
                });
                editor.lock();
                editor.synchronizeValues();
                close();
                editor.unlock();
            }, (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_2__/* .css */ .i)(selected[0], key));
            return (0,jodit_modules_widget__WEBPACK_IMPORTED_MODULE_1__/* .TabsWidget */ .IL)(editor, [
                {
                    name: 'Background',
                    content: makeColorPicker('background-color')
                },
                { name: 'Text', content: makeColorPicker('color') },
                { name: 'Border', content: makeColorPicker('border-color') }
            ]);
        },
        tooltip: 'Background'
    },
    {
        name: 'valign',
        list: ['Top', 'Middle', 'Bottom', 'Normal'],
        childTemplate: (_, __, value) => value,
        exec: (editor, table, { control }) => {
            const command = cmd(control);
            editor
                .getInstance('Table', editor.o)
                .getAllSelectedCells()
                .forEach((cell) => {
                (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_2__/* .css */ .i)(cell, 'vertical-align', command === 'normal' ? '' : command);
            });
        },
        tooltip: 'Vertical align'
    },
    {
        name: 'splitv',
        list: {
            tablesplitv: 'Split vertical',
            tablesplitg: 'Split horizontal'
        },
        tooltip: 'Split'
    },
    {
        name: 'align',
        icon: 'left'
    },
    '\n',
    {
        name: 'merge',
        command: 'tablemerge',
        tooltip: 'Merge'
    },
    {
        name: 'addcolumn',
        list: {
            tableaddcolumnbefore: 'Insert column before',
            tableaddcolumnafter: 'Insert column after'
        },
        exec: (editor, table, { control }) => {
            if (!(0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isJoditObject */ .Zu)(editor)) {
                return;
            }
            const command = cmd(control);
            editor.execCommand(command, false, table);
        },
        tooltip: 'Add column'
    },
    {
        name: 'addrow',
        list: {
            tableaddrowbefore: 'Insert row above',
            tableaddrowafter: 'Insert row below'
        },
        exec: (editor, table, { control }) => {
            if (!(0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isJoditObject */ .Zu)(editor)) {
                return;
            }
            const command = cmd(control);
            editor.execCommand(command, false, table);
        },
        tooltip: 'Add row'
    },
    {
        name: 'delete',
        icon: 'bin',
        list: {
            tablebin: 'Delete table',
            tablebinrow: 'Delete row',
            tablebincolumn: 'Delete column',
            tableempty: 'Empty cell'
        },
        exec: (editor, table, { control }) => {
            if (!(0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isJoditObject */ .Zu)(editor)) {
                return;
            }
            const command = cmd(control);
            editor.execCommand(command, false, table);
            editor.e.fire('hidePopup');
        },
        tooltip: 'Delete'
    }
]);


/***/ }),

/***/ 54182:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _img__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(15432);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/* harmony default export */ __webpack_exports__.Z = ([
    {
        name: 'bin',
        tooltip: 'Delete',
        exec: (editor, image) => {
            image && editor.s.removeNode(image);
        }
    },
    _img__WEBPACK_IMPORTED_MODULE_0__/* .align */ .A
]);


/***/ }),

/***/ 15432:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: function() { return /* binding */ align; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2926);
/* harmony import */ var jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(71737);
/* harmony import */ var jodit_core_helpers_utils_align__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(13931);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




const align = {
    name: 'left',
    childTemplate: (_, __, value) => value,
    list: ['Left', 'Right', 'Center', 'Normal'],
    exec: (editor, elm, { control }) => {
        if (!jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(elm, new Set(['img', 'jodit', 'jodit-media']))) {
            return;
        }
        const command = control.args && (0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_2__/* .isString */ .H)(control.args[0])
            ? control.args[0].toLowerCase()
            : '';
        if (!command) {
            return false;
        }
        (0,jodit_core_helpers_utils_align__WEBPACK_IMPORTED_MODULE_1__/* .hAlignElement */ .zC)(elm, command);
        if (jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(elm, new Set(['jodit', 'jodit-media'])) &&
            elm.firstElementChild) {
            (0,jodit_core_helpers_utils_align__WEBPACK_IMPORTED_MODULE_1__/* .hAlignElement */ .zC)(elm.firstElementChild, command);
        }
        editor.synchronizeValues();
        editor.e.fire('recalcPositionPopup');
    },
    tooltip: 'Horizontal align'
};
/* harmony default export */ __webpack_exports__.Z = ([
    {
        name: 'delete',
        icon: 'bin',
        tooltip: 'Delete',
        exec: (editor, image) => {
            image && editor.s.removeNode(image);
        }
    },
    {
        name: 'pencil',
        exec(editor, current) {
            const tagName = current.tagName.toLowerCase();
            if (tagName === 'img') {
                editor.e.fire('openImageProperties', current);
            }
        },
        tooltip: 'Edit'
    },
    {
        name: 'valign',
        list: ['Top', 'Middle', 'Bottom', 'Normal'],
        tooltip: 'Vertical align',
        exec: (editor, image, { control }) => {
            if (!jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(image, 'img')) {
                return;
            }
            const command = control.args && (0,jodit_core_helpers_checker_is_string__WEBPACK_IMPORTED_MODULE_2__/* .isString */ .H)(control.args[0])
                ? control.args[0].toLowerCase()
                : '';
            if (!command) {
                return false;
            }
            (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_3__/* .css */ .i)(image, 'vertical-align', command === 'normal' ? '' : command);
            editor.e.fire('recalcPositionPopup');
        }
    },
    align
]);


/***/ }),

/***/ 78658:
/***/ (function(__unused_webpack_module, __webpack_exports__) {

"use strict";
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module plugins/inline-popup
 */
/* harmony default export */ __webpack_exports__.Z = ([
    'bold',
    'italic',
    '|',
    'ul',
    'ol',
    'eraser',
    '|',
    'fontsize',
    'brush',
    'paragraph',
    '---',
    'image',
    'table',
    '\n',
    'link',
    '|',
    'align',
    '|',
    'undo',
    'redo',
    '|',
    'copyformat',
    'fullsize',
    '---',
    'dots'
]);


/***/ }),

/***/ 63066:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export inlinePopup */
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_plugin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7331);
/* harmony import */ var jodit_modules_toolbar_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(55027);
/* harmony import */ var jodit_core_ui_popup__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8855);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_ui__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(14712);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(79102);
/* harmony import */ var _config_config__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(95508);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * [[include:plugins/inline-popup/README.md]]
 * @packageDocumentation
 * @module plugins/inline-popup
 */










/**
 * Plugin for show inline popup dialog
 */
class inlinePopup extends jodit_core_plugin__WEBPACK_IMPORTED_MODULE_0__/* .Plugin */ .S {
    constructor() {
        super(...arguments);
        this.type = null;
        this.snapRange = null;
        this.elmsList = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.keys)(this.j.o.popup, false).filter(s => !this.isExcludedTarget(s));
    }
    get popup() {
        return new jodit_core_ui_popup__WEBPACK_IMPORTED_MODULE_2__/* .Popup */ .G(this.jodit, false);
    }
    get toolbar() {
        return (0,jodit_modules_toolbar_factory__WEBPACK_IMPORTED_MODULE_1__/* .makeCollection */ .RP)(this.jodit, this.popup);
    }
    onClick(node) {
        const elements = this.elmsList, target = jodit_core_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.isTag(node, 'img')
            ? node
            : jodit_core_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.closest(node, elements, this.j.editor);
        if (target && this.canShowPopupForType(target.nodeName.toLowerCase())) {
            this.showPopup(() => (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.position)(target, this.j), target.nodeName.toLowerCase(), target);
            return false;
        }
    }
    /**
     * Show inline popup with some toolbar
     *
     * @param type - selection, img, a etc.
     */
    showPopup(rect, type, target) {
        type = type.toLowerCase();
        if (!this.canShowPopupForType(type)) {
            return false;
        }
        if (this.type !== type || target !== this.previousTarget) {
            this.previousTarget = target;
            const data = this.j.o.popup[type];
            let content;
            if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isFunction)(data)) {
                content = data(this.j, target, this.popup.close);
            }
            else {
                content = data;
            }
            if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isArray)(content)) {
                this.toolbar.build(content, target);
                this.toolbar.buttonSize = this.j.o.toolbarButtonSize;
                content = this.toolbar.container;
            }
            this.popup.setContent(content);
            this.type = type;
        }
        this.popup.open(rect);
        return true;
    }
    /**
     * Hide opened popup
     */
    hidePopup(type) {
        if (this.popup.isOpened && (!(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isString)(type) || type === this.type)) {
            this.popup.close();
        }
    }
    onOutsideClick() {
        this.popup.close();
    }
    /**
     * Can show popup for this type
     */
    canShowPopupForType(type) {
        const data = this.j.o.popup[type.toLowerCase()];
        if (this.j.o.readonly || !this.j.o.toolbarInline || !data) {
            return false;
        }
        return !this.isExcludedTarget(type);
    }
    /**
     * For some elements do not show popup
     */
    isExcludedTarget(type) {
        return (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.splitArray)(this.j.o.toolbarInlineDisableFor)
            .map(a => a.toLowerCase())
            .includes(type.toLowerCase());
    }
    /** @override **/
    afterInit(jodit) {
        this.j.e
            .on('getDiffButtons.mobile', (toolbar) => {
            if (this.toolbar === toolbar) {
                const names = this.toolbar.getButtonsNames();
                return (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.toArray)(jodit.registeredButtons)
                    .filter(btn => !this.j.o.toolbarInlineDisabledButtons.includes(btn.name))
                    .filter(item => {
                    const name = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isString)(item) ? item : item.name;
                    return (name &&
                        name !== '|' &&
                        name !== '\n' &&
                        !names.includes(name));
                });
            }
        })
            .on('hidePopup', this.hidePopup)
            .on('showInlineToolbar', this.showInlineToolbar)
            .on('showPopup', (elm, rect, type) => {
            this.showPopup(rect, type || ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isString)(elm) ? elm : elm.nodeName), (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isString)(elm) ? undefined : elm);
        })
            .on('mousedown keydown', this.onSelectionStart)
            .on('change', () => {
            if (this.popup.isOpened &&
                this.previousTarget &&
                !this.previousTarget.parentNode) {
                this.hidePopup();
                this.previousTarget = undefined;
            }
        })
            .on([this.j.ew, this.j.ow], 'mouseup keyup', this.onSelectionEnd);
        this.addListenersForElements();
    }
    onSelectionStart() {
        this.snapRange = this.j.s.range.cloneRange();
    }
    onSelectionEnd(e) {
        if (e &&
            e.target &&
            jodit_core_ui__WEBPACK_IMPORTED_MODULE_5__/* .UIElement */ .u1.closestElement(e.target, jodit_core_ui_popup__WEBPACK_IMPORTED_MODULE_2__/* .Popup */ .G)) {
            return;
        }
        const { snapRange } = this, { range } = this.j.s;
        if (!snapRange ||
            range.collapsed ||
            range.startContainer !== snapRange.startContainer ||
            range.startOffset !== snapRange.startOffset ||
            range.endContainer !== snapRange.endContainer ||
            range.endOffset !== snapRange.endOffset) {
            this.onSelectionChange();
        }
    }
    /**
     * Selection change handler
     */
    onSelectionChange() {
        if (!this.j.o.toolbarInlineForSelection) {
            return;
        }
        const type = 'selection', sel = this.j.s.sel, range = this.j.s.range;
        if ((sel === null || sel === void 0 ? void 0 : sel.isCollapsed) ||
            this.isSelectedTarget(range) ||
            this.tableModule.getAllSelectedCells().length) {
            if (this.type === type && this.popup.isOpened) {
                this.hidePopup();
            }
            return;
        }
        const node = this.j.s.current();
        if (!node) {
            return;
        }
        this.showPopup(() => range.getBoundingClientRect(), type);
    }
    /**
     * In not collapsed selection - only one image
     */
    isSelectedTarget(r) {
        const sc = r.startContainer;
        return (jodit_core_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.isElement(sc) &&
            sc === r.endContainer &&
            jodit_core_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.isTag(sc.childNodes[r.startOffset], new Set((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.keys)(this.j.o.popup, false))) &&
            r.startOffset === r.endOffset - 1);
    }
    /**
     * Shortcut for Table module
     */
    get tableModule() {
        return this.j.getInstance('Table', this.j.o);
    }
    /** @override **/
    beforeDestruct(jodit) {
        jodit.e
            .off('showPopup')
            .off([this.j.ew, this.j.ow], 'mouseup keyup', this.onSelectionEnd);
        this.removeListenersForElements();
    }
    _eventsList() {
        const el = this.elmsList;
        return el
            .map(e => (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.camelCase)(`click_${e}`))
            .concat(el.map(e => (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.camelCase)(`touchstart_${e}`)))
            .join(' ');
    }
    addListenersForElements() {
        this.j.e.on(this._eventsList(), this.onClick);
    }
    removeListenersForElements() {
        this.j.e.off(this._eventsList(), this.onClick);
    }
    /**
     * Show the inline WYSIWYG toolbar editor.
     */
    showInlineToolbar(bound) {
        this.showPopup(() => {
            if (bound) {
                return bound;
            }
            const { range } = this.j.s;
            return range.getBoundingClientRect();
        }, 'toolbar');
    }
}
inlinePopup.requires = ['select'];
(0,tslib__WEBPACK_IMPORTED_MODULE_9__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_6__.cache
], inlinePopup.prototype, "popup", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_9__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_6__.cache
], inlinePopup.prototype, "toolbar", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_9__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_6__.autobind
], inlinePopup.prototype, "onClick", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_9__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_6__.wait)((ctx) => !ctx.j.isLocked)
], inlinePopup.prototype, "showPopup", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_9__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_6__.watch)([':clickEditor', ':beforeCommandDelete', ':backSpaceAfterDelete']),
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_6__.autobind
], inlinePopup.prototype, "hidePopup", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_9__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_6__.watch)(':outsideClick')
], inlinePopup.prototype, "onOutsideClick", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_9__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_6__.autobind
], inlinePopup.prototype, "onSelectionStart", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_9__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_6__.autobind
], inlinePopup.prototype, "onSelectionEnd", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_9__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_6__.debounce)(ctx => ctx.defaultTimeout)
], inlinePopup.prototype, "onSelectionChange", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_9__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_6__.autobind
], inlinePopup.prototype, "showInlineToolbar", null);
jodit_core_global__WEBPACK_IMPORTED_MODULE_7__/* .pluginSystem */ .pw.add('inlinePopup', inlinePopup);


/***/ }),

/***/ 49201:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export justify */
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(71737);
/* harmony import */ var jodit_core_helpers_utils_align__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(13931);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(79102);
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(30052);
/* harmony import */ var _justify_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(94484);
/* harmony import */ var _justify_svg__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_justify_svg__WEBPACK_IMPORTED_MODULE_5__);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */







jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_4__/* .Icon */ .J.set('justify', (_justify_svg__WEBPACK_IMPORTED_MODULE_5___default()));
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.align = {
    name: 'left',
    tooltip: 'Align',
    update(editor, button) {
        const control = button.control, current = editor.s.current();
        if (current) {
            const currentBox = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.closest(current, jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isBlock, editor.editor) ||
                editor.editor;
            let currentValue = (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_6__/* .css */ .i)(currentBox, 'text-align').toString();
            if (control.defaultValue &&
                control.defaultValue.indexOf(currentValue) !== -1) {
                currentValue = 'left';
            }
            if (control.data &&
                control.data.currentValue !== currentValue &&
                control.list &&
                control.list[currentValue]) {
                if (editor.o.textIcons || control.component === 'select') {
                    button.state.text = currentValue;
                }
                else {
                    button.state.icon.name = currentValue;
                }
                control.data.currentValue = currentValue;
            }
        }
    },
    isActive: (editor, btn) => {
        const current = editor.s.current();
        if (!current || !btn.control.defaultValue) {
            return false;
        }
        const currentBox = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.closest(current, jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isBlock, editor.editor) ||
            editor.editor;
        return (btn.control.defaultValue.indexOf((0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_6__/* .css */ .i)(currentBox, 'text-align').toString()) === -1);
    },
    defaultValue: ['left', 'start', 'inherit'],
    data: {
        currentValue: 'left'
    },
    list: ['center', 'left', 'right', 'justify']
};
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.center = {
    command: 'justifyCenter',
    css: {
        'text-align': 'center'
    },
    tooltip: 'Align Center'
};
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.justify = {
    command: 'justifyFull',
    css: {
        'text-align': 'justify'
    },
    tooltip: 'Align Justify'
};
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.left = {
    command: 'justifyLeft',
    css: {
        'text-align': 'left'
    },
    tooltip: 'Align Left'
};
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.right = {
    command: 'justifyRight',
    css: {
        'text-align': 'right'
    },
    tooltip: 'Align Right'
};
/**
 * Process commands: `justifyfull`, `justifyleft`, `justifyright`, `justifycenter`
 */
function justify(editor) {
    editor.registerButton({
        name: 'align',
        group: 'indent'
    });
    const callback = (command) => {
        editor.s.focus();
        editor.s.eachSelection((current) => {
            if (!current) {
                return;
            }
            let currentBox = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.up(current, jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isBlock, editor.editor);
            if (!currentBox) {
                currentBox = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.wrapInline(current, editor.o.enterBlock, editor);
            }
            (0,jodit_core_helpers_utils_align__WEBPACK_IMPORTED_MODULE_2__/* .alignElement */ .E3)(command, currentBox);
        });
        return false;
    };
    editor.registerCommand('justifyfull', callback);
    editor.registerCommand('justifyright', callback);
    editor.registerCommand('justifyleft', callback);
    editor.registerCommand('justifycenter', callback);
}
jodit_core_global__WEBPACK_IMPORTED_MODULE_3__/* .pluginSystem */ .pw.add('justify', justify);


/***/ }),

/***/ 93584:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var _template__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(88134);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(30052);
/* harmony import */ var _icons_link_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(10530);
/* harmony import */ var _icons_link_svg__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_icons_link_svg__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _icons_unlink_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(52401);
/* harmony import */ var _icons_unlink_svg__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_icons_unlink_svg__WEBPACK_IMPORTED_MODULE_5__);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */






jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.link = {
    formTemplate: _template__WEBPACK_IMPORTED_MODULE_1__/* .formTemplate */ .t,
    followOnDblClick: false,
    processVideoLink: true,
    processPastedLink: true,
    noFollowCheckbox: true,
    openInNewTabCheckbox: true,
    modeClassName: 'input',
    selectMultipleClassName: true,
    selectSizeClassName: 3,
    selectOptionsClassName: [],
    hotkeys: ['ctrl+k', 'cmd+k']
};
jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_3__/* .Icon */ .J.set('link', (_icons_link_svg__WEBPACK_IMPORTED_MODULE_4___default())).set('unlink', (_icons_unlink_svg__WEBPACK_IMPORTED_MODULE_5___default()));
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.unlink = {
    exec: (editor, current) => {
        const anchor = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.closest(current, 'a', editor.editor);
        if (anchor) {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.unwrap(anchor);
        }
        editor.synchronizeValues();
        editor.e.fire('hidePopup');
    },
    tooltip: 'Unlink'
};
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.link = {
    isActive: (editor) => {
        const current = editor.s.current();
        return Boolean(current && jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.closest(current, 'a', editor.editor));
    },
    popup: (editor, current, close) => {
        return editor.e.fire('generateLinkForm.link', current, close);
    },
    tags: ['a'],
    tooltip: 'Insert link'
};


/***/ }),

/***/ 52183:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export link */
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_plugin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7331);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(79102);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(93584);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */







/**
 * Process link. Insert, dblclick or remove format
 */
class link extends jodit_core_plugin__WEBPACK_IMPORTED_MODULE_2__/* .Plugin */ .S {
    constructor() {
        super(...arguments);
        /** @override */
        this.buttons = [
            {
                name: 'link',
                group: 'insert'
            }
        ];
    }
    /** @override */
    afterInit(jodit) {
        if (jodit.o.link.followOnDblClick) {
            jodit.e.on('dblclick.link', this.onDblClickOnLink);
        }
        if (jodit.o.link.processPastedLink) {
            jodit.e.on('processPaste.link', this.onProcessPasteLink);
        }
        jodit.e.on('generateLinkForm.link', this.__generateForm);
        jodit.registerCommand('openLinkDialog', {
            exec: () => {
                const dialog = jodit.dlg({
                    resizable: false
                });
                const htmlForm = this.__generateForm(jodit.s.current(), () => {
                    dialog.close();
                });
                htmlForm.container.classList.add('jodit-dialog_alert');
                dialog.setContent(htmlForm);
                dialog.open();
                jodit.async.requestIdleCallback(() => {
                    const { url_input } = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.refs)(htmlForm.container);
                    url_input === null || url_input === void 0 ? void 0 : url_input.focus();
                });
            },
            hotkeys: jodit.o.link.hotkeys
        });
    }
    onDblClickOnLink(e) {
        if (!jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(e.target, 'a')) {
            return;
        }
        const href = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(e.target, 'href');
        if (href) {
            location.href = href;
            e.preventDefault();
        }
    }
    onProcessPasteLink(ignore, html) {
        const { jodit } = this;
        if (!(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isURL)(html) || !jodit.o.link.processPastedLink) {
            return;
        }
        jodit.e.stopPropagation('processPaste');
        if (jodit.o.link.processVideoLink) {
            const embed = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.convertMediaUrlToVideoEmbed)(html);
            if (embed !== html) {
                return jodit.createInside.fromHTML(embed);
            }
        }
        if (jodit.s.isCollapsed()) {
            const a = jodit.createInside.element('a');
            a.setAttribute('href', html);
            a.textContent = html;
            jodit.e.fire('applyLink', jodit, a, null);
            return a;
        }
        jodit.s.commitStyle({
            element: 'a',
            attributes: {
                href: html
            }
        });
        return true;
    }
    __generateForm(current, close) {
        const { jodit } = this;
        const i18n = jodit.i18n.bind(jodit), { openInNewTabCheckbox, noFollowCheckbox, formTemplate, formClassName, modeClassName } = jodit.o.link;
        const html = formTemplate(jodit), form = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isString)(html)
            ? jodit.c.fromHTML(html, {
                target_checkbox_box: openInNewTabCheckbox,
                nofollow_checkbox_box: noFollowCheckbox
            })
            : html, htmlForm = jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isElement(form) ? form : form.container;
        const elements = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.refs)(htmlForm), { insert, unlink, content_input_box } = elements, { target_checkbox, nofollow_checkbox, url_input } = elements, currentElement = current, isImageContent = jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isImage(currentElement);
        let { content_input } = elements;
        const { className_input } = elements, { className_select } = elements;
        if (!content_input) {
            content_input = jodit.c.element('input', {
                type: 'hidden',
                ref: 'content_input'
            });
        }
        if (formClassName) {
            htmlForm.classList.add(formClassName);
        }
        if (isImageContent) {
            jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.hide(content_input_box);
        }
        let link;
        const getSelectionText = () => link
            ? link.innerText
            : (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.stripTags)(jodit.s.range.cloneContents(), jodit.ed);
        if (current && jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.closest(current, 'a', jodit.editor)) {
            link = jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.closest(current, 'a', jodit.editor);
        }
        else {
            link = false;
        }
        if (!isImageContent && current) {
            content_input.value = getSelectionText();
        }
        if (link) {
            url_input.value = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(link, 'href') || '';
            if (modeClassName) {
                switch (modeClassName) {
                    case 'input':
                        if (className_input) {
                            className_input.value = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(link, 'class') || '';
                        }
                        break;
                    case 'select':
                        if (className_select) {
                            for (let i = 0; i < className_select.selectedOptions.length; i++) {
                                const option = className_select.options.item(i);
                                if (option) {
                                    option.selected = false;
                                }
                            }
                            const classNames = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(link, 'class') || '';
                            classNames.split(' ').forEach(className => {
                                if (className) {
                                    for (let i = 0; i < className_select.options.length; i++) {
                                        const option = className_select.options.item(i);
                                        if ((option === null || option === void 0 ? void 0 : option.value) &&
                                            option.value === className) {
                                            option.selected = true;
                                        }
                                    }
                                }
                            });
                        }
                        break;
                }
            }
            if (openInNewTabCheckbox && target_checkbox) {
                target_checkbox.checked = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(link, 'target') === '_blank';
            }
            if (noFollowCheckbox && nofollow_checkbox) {
                nofollow_checkbox.checked = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(link, 'rel') === 'nofollow';
            }
            insert.textContent = i18n('Update');
        }
        else {
            jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.hide(unlink);
        }
        jodit.editor.normalize();
        const snapshot = jodit.history.snapshot.make();
        if (unlink) {
            jodit.e.on(unlink, 'click', (e) => {
                jodit.s.restore();
                jodit.history.snapshot.restore(snapshot);
                if (link) {
                    jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.unwrap(link);
                }
                jodit.synchronizeValues();
                close();
                e.preventDefault();
            });
        }
        const onSubmit = () => {
            if (!url_input.value.trim().length) {
                url_input.focus();
                url_input.classList.add('jodit_error');
                return false;
            }
            let links;
            jodit.s.restore();
            jodit.s.removeMarkers();
            jodit.editor.normalize();
            jodit.history.snapshot.restore(snapshot);
            const textWasChanged = getSelectionText() !== content_input.value.trim();
            const ci = jodit.createInside;
            if (!link) {
                if (!jodit.s.isCollapsed()) {
                    const node = jodit.s.current();
                    if (jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(node, 'img')) {
                        links = [jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.wrap(node, 'a', ci)];
                    }
                    else {
                        links = jodit.s.wrapInTag('a');
                    }
                }
                else {
                    const a = ci.element('a');
                    jodit.s.insertNode(a, false, false);
                    links = [a];
                }
                links.forEach(link => jodit.s.select(link));
            }
            else {
                links = [link];
            }
            links.forEach(a => {
                var _a;
                (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(a, 'href', url_input.value);
                if (modeClassName && (className_input !== null && className_input !== void 0 ? className_input : className_select)) {
                    if (modeClassName === 'input') {
                        if (className_input.value === '' &&
                            a.hasAttribute('class')) {
                            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(a, 'class', null);
                        }
                        if (className_input.value !== '') {
                            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(a, 'class', className_input.value);
                        }
                    }
                    else if (modeClassName === 'select') {
                        if (a.hasAttribute('class')) {
                            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(a, 'class', null);
                        }
                        for (let i = 0; i < className_select.selectedOptions.length; i++) {
                            const className = (_a = className_select.selectedOptions.item(i)) === null || _a === void 0 ? void 0 : _a.value;
                            if (className) {
                                a.classList.add(className);
                            }
                        }
                    }
                }
                if (!isImageContent) {
                    let newContent = a.textContent;
                    if (content_input.value.trim().length) {
                        if (textWasChanged) {
                            newContent = content_input.value;
                        }
                    }
                    else {
                        newContent = url_input.value;
                    }
                    const content = a.textContent;
                    if (newContent !== content) {
                        a.textContent = newContent;
                    }
                }
                if (openInNewTabCheckbox && target_checkbox) {
                    (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(a, 'target', target_checkbox.checked ? '_blank' : null);
                }
                if (noFollowCheckbox && nofollow_checkbox) {
                    (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.attr)(a, 'rel', nofollow_checkbox.checked ? 'nofollow' : null);
                }
                jodit.e.fire('applyLink', jodit, a, form);
            });
            jodit.synchronizeValues();
            close();
            return false;
        };
        if (jodit_core_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isElement(form)) {
            jodit.e.on(form, 'submit', (event) => {
                event.preventDefault();
                event.stopImmediatePropagation();
                onSubmit();
                return false;
            });
        }
        else {
            form.onSubmit(onSubmit);
        }
        return form;
    }
    /** @override */
    beforeDestruct(jodit) {
        jodit.e
            .off('generateLinkForm.link', this.__generateForm)
            .off('dblclick.link', this.onDblClickOnLink)
            .off('processPaste.link', this.onProcessPasteLink);
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_6__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__.autobind
], link.prototype, "onDblClickOnLink", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_6__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__.autobind
], link.prototype, "onProcessPasteLink", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_6__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__.autobind
], link.prototype, "__generateForm", null);
jodit_core_global__WEBPACK_IMPORTED_MODULE_4__/* .pluginSystem */ .pw.add('link', link);


/***/ }),

/***/ 88134:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   t: function() { return /* binding */ formTemplate; }
/* harmony export */ });
/* harmony import */ var jodit_core_ui_form__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(79000);
/* harmony import */ var jodit_core_ui_button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(64856);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


const formTemplate = (editor) => {
    const { openInNewTabCheckbox, noFollowCheckbox, modeClassName, selectSizeClassName, selectMultipleClassName, selectOptionsClassName } = editor.o.link;
    return new jodit_core_ui_form__WEBPACK_IMPORTED_MODULE_0__/* .UIForm */ .x4(editor, [
        new jodit_core_ui_form__WEBPACK_IMPORTED_MODULE_0__/* .UIBlock */ .eC(editor, [
            new jodit_core_ui_form__WEBPACK_IMPORTED_MODULE_0__/* .UIInput */ .u3(editor, {
                name: 'url',
                type: 'text',
                ref: 'url_input',
                label: 'URL',
                placeholder: 'http://',
                required: true
            })
        ]),
        new jodit_core_ui_form__WEBPACK_IMPORTED_MODULE_0__/* .UIBlock */ .eC(editor, [
            new jodit_core_ui_form__WEBPACK_IMPORTED_MODULE_0__/* .UIInput */ .u3(editor, {
                name: 'content',
                ref: 'content_input',
                label: 'Text'
            })
        ], {
            ref: 'content_input_box'
        }),
        modeClassName
            ? new jodit_core_ui_form__WEBPACK_IMPORTED_MODULE_0__/* .UIBlock */ .eC(editor, [
                (() => {
                    if (modeClassName === 'input') {
                        return new jodit_core_ui_form__WEBPACK_IMPORTED_MODULE_0__/* .UIInput */ .u3(editor, {
                            name: 'className',
                            ref: 'className_input',
                            label: 'Class name'
                        });
                    }
                    if (modeClassName === 'select') {
                        return new jodit_core_ui_form__WEBPACK_IMPORTED_MODULE_0__/* .UISelect */ .Cj(editor, {
                            name: 'className',
                            ref: 'className_select',
                            label: 'Class name',
                            size: selectSizeClassName,
                            multiple: selectMultipleClassName,
                            options: selectOptionsClassName
                        });
                    }
                    return null;
                })()
            ])
            : null,
        openInNewTabCheckbox
            ? new jodit_core_ui_form__WEBPACK_IMPORTED_MODULE_0__/* .UICheckbox */ .mA(editor, {
                name: 'target',
                ref: 'target_checkbox',
                label: 'Open in new tab'
            })
            : null,
        noFollowCheckbox
            ? new jodit_core_ui_form__WEBPACK_IMPORTED_MODULE_0__/* .UICheckbox */ .mA(editor, {
                name: 'nofollow',
                ref: 'nofollow_checkbox',
                label: 'No follow'
            })
            : null,
        new jodit_core_ui_form__WEBPACK_IMPORTED_MODULE_0__/* .UIBlock */ .eC(editor, [
            new jodit_core_ui_button__WEBPACK_IMPORTED_MODULE_1__/* .UIButton */ .y3(editor, {
                name: 'unlink',
                variant: 'default',
                text: 'Unlink'
            }),
            new jodit_core_ui_button__WEBPACK_IMPORTED_MODULE_1__/* .UIButton */ .y3(editor, {
                name: 'insert',
                type: 'submit',
                variant: 'primary',
                text: 'Insert'
            })
        ], {
            align: 'full'
        })
    ]);
};


/***/ }),

/***/ 91357:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62924);
/* harmony import */ var jodit_modules_toolbar_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(55027);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(76974);
/* harmony import */ var jodit_modules_toolbar_collection_collection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(32596);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module plugins/mobile
 */





jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.mobileTapTimeout = 300;
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.toolbarAdaptive = true;
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.buttonsMD = [
    {
        group: 'font-style',
        buttons: []
    },
    {
        group: 'list',
        buttons: []
    },
    {
        group: 'font',
        buttons: []
    },
    '---',
    {
        group: 'media',
        buttons: []
    },
    '\n',
    {
        group: 'state',
        buttons: []
    },
    {
        group: 'insert',
        buttons: []
    },
    {
        group: 'indent',
        buttons: []
    },
    {
        group: 'color',
        buttons: []
    },
    '---',
    {
        group: 'history',
        buttons: []
    },
    {
        group: 'other',
        buttons: []
    },
    '|',
    'dots'
];
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.buttonsSM = [
    {
        group: 'font-style',
        buttons: []
    },
    {
        group: 'list',
        buttons: []
    },
    '---',
    {
        group: 'font',
        buttons: []
    },
    '\n',
    {
        group: 'state',
        buttons: []
    },
    {
        group: 'indent',
        buttons: []
    },
    {
        group: 'color',
        buttons: []
    },
    '---',
    {
        group: 'history',
        buttons: []
    },
    '|',
    'dots'
];
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.buttonsXS = [
    {
        group: 'font-style',
        buttons: []
    },
    {
        group: 'list',
        buttons: []
    },
    '---',
    {
        group: 'font',
        buttons: []
    },
    {
        group: 'color',
        buttons: []
    },
    '---',
    'dots'
];
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.dots = {
    mode: jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_SOURCE + jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_WYSIWYG,
    popup: (editor, current, close, button) => {
        let store = button.control.data;
        if (store === undefined) {
            store = {
                toolbar: (0,jodit_modules_toolbar_factory__WEBPACK_IMPORTED_MODULE_2__/* .makeCollection */ .RP)(editor),
                rebuild: () => {
                    var _a, _b;
                    if (button) {
                        const buttons = editor.e.fire('getDiffButtons.mobile', button.closest(jodit_modules_toolbar_collection_collection__WEBPACK_IMPORTED_MODULE_4__/* .ToolbarCollection */ .n));
                        if (buttons && store) {
                            store.toolbar.build((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.splitArray)(buttons));
                            const w = ((_b = (_a = editor.toolbar) === null || _a === void 0 ? void 0 : _a.firstButton) === null || _b === void 0 ? void 0 : _b.container.offsetWidth) || 36;
                            store.toolbar.container.style.width =
                                (w + 4) * 3 + 'px';
                        }
                    }
                }
            };
            button.control.data = store;
        }
        store.rebuild();
        return store.toolbar;
    },
    tooltip: 'Show all'
};


/***/ }),

/***/ 86899:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export mobile */
/* harmony import */ var jodit_core_helpers___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_ui_helpers_buttons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(79392);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(79102);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(91357);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




/**
 * Rebuild toolbar in depends on editor's width
 */
function mobile(editor) {
    let timeout = 0, store = (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_0__.splitArray)(editor.o.buttons);
    if (editor.o.mobileTapTimeout) {
        // Emulate double tap
        editor.e.on('touchend', (e) => {
            if (e.changedTouches && e.changedTouches.length) {
                const now = new Date().getTime(), diff = now - timeout;
                if (diff > editor.o.mobileTapTimeout) {
                    timeout = now;
                    if (diff < editor.o.mobileTapTimeout * 1.5) {
                        editor.s.insertCursorAtPoint(e.clientX, e.clientY);
                    }
                }
            }
        });
    }
    editor.e.on('getDiffButtons.mobile', (toolbar) => {
        if (toolbar === editor.toolbar) {
            const buttons = (0,jodit_core_ui_helpers_buttons__WEBPACK_IMPORTED_MODULE_3__/* .flatButtonsSet */ .q)((0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_0__.splitArray)(editor.o.buttons), editor), flatStore = (0,jodit_core_ui_helpers_buttons__WEBPACK_IMPORTED_MODULE_3__/* .flatButtonsSet */ .q)(store, editor);
            return (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_0__.toArray)(buttons).reduce((acc, item) => {
                if (!flatStore.has(item)) {
                    acc.push(item);
                }
                return acc;
            }, []);
        }
    });
    if (editor.o.toolbarAdaptive) {
        editor.e
            .on('resize afterInit recalcAdaptive changePlace afterAddPlace', () => {
            var _a, _b;
            if (!editor.o.toolbar) {
                return;
            }
            const width = ((_a = editor.container.parentElement) !== null && _a !== void 0 ? _a : editor.container).offsetWidth;
            const newStore = (() => {
                if (editor.isFullSize || width >= editor.o.sizeLG) {
                    return (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_0__.splitArray)(editor.o.buttons);
                }
                if (width >= editor.o.sizeMD) {
                    return (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_0__.splitArray)(editor.o.buttonsMD);
                }
                if (width >= editor.o.sizeSM) {
                    return (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_0__.splitArray)(editor.o.buttonsSM);
                }
                return (0,jodit_core_helpers___WEBPACK_IMPORTED_MODULE_0__.splitArray)(editor.o.buttonsXS);
            })();
            if (newStore.toString() !== store.toString()) {
                store = newStore;
                editor.e.fire('closeAllPopups');
                (_b = editor.toolbar) === null || _b === void 0 ? void 0 : _b.setRemoveButtons(editor.o.removeButtons).build(store.concat(editor.o.extraButtons));
            }
        })
            .on(editor.ow, 'load resize', () => editor.e.fire('recalcAdaptive'));
    }
}
jodit_core_global__WEBPACK_IMPORTED_MODULE_1__/* .pluginSystem */ .pw.add('mobile', mobile);


/***/ }),

/***/ 5163:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_helpers_utils_data_bind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25920);
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(30052);
/* harmony import */ var _icons_ol_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(44931);
/* harmony import */ var _icons_ol_svg__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_icons_ol_svg__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _icons_ul_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(29845);
/* harmony import */ var _icons_ul_svg__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_icons_ul_svg__WEBPACK_IMPORTED_MODULE_4__);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */





const memoExec = (jodit, _, { control }) => {
    var _a;
    const key = `button${control.command}`;
    const value = (_a = (control.args && control.args[0])) !== null && _a !== void 0 ? _a : (0,jodit_core_helpers_utils_data_bind__WEBPACK_IMPORTED_MODULE_1__/* .dataBind */ .q)(jodit, key);
    (0,jodit_core_helpers_utils_data_bind__WEBPACK_IMPORTED_MODULE_1__/* .dataBind */ .q)(jodit, key, value);
    jodit.execCommand(control.command, false, value === 'default' ? null : value);
};
jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_2__/* .Icon */ .J.set('ol', (_icons_ol_svg__WEBPACK_IMPORTED_MODULE_3___default())).set('ul', (_icons_ul_svg__WEBPACK_IMPORTED_MODULE_4___default()));
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.ul = {
    command: 'insertUnorderedList',
    tags: ['ul'],
    tooltip: 'Insert Unordered List',
    list: {
        default: 'Default',
        circle: 'Circle',
        disc: 'Dot',
        square: 'Quadrate'
    },
    exec: memoExec
};
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.ol = {
    command: 'insertOrderedList',
    tags: ['ol'],
    tooltip: 'Insert Ordered List',
    list: {
        default: 'Default',
        'lower-alpha': 'Lower Alpha',
        'lower-greek': 'Lower Greek',
        'lower-roman': 'Lower Roman',
        'upper-alpha': 'Upper Alpha',
        'upper-roman': 'Upper Roman'
    },
    exec: memoExec
};


/***/ }),

/***/ 73602:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export orderedList */
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_plugin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7331);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(79102);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5163);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */





/**
 * Process commands insertOrderedList and insertUnOrderedList
 */
class orderedList extends jodit_core_plugin__WEBPACK_IMPORTED_MODULE_0__/* .Plugin */ .S {
    constructor() {
        super(...arguments);
        this.buttons = [
            {
                name: 'ul',
                group: 'list'
            },
            {
                name: 'ol',
                group: 'list'
            }
        ];
    }
    afterInit(jodit) {
        jodit
            .registerCommand('insertUnorderedList', this.onCommand)
            .registerCommand('insertOrderedList', this.onCommand);
    }
    onCommand(command, _, type) {
        this.jodit.s.commitStyle({
            element: command === 'insertunorderedlist' ? 'ul' : 'ol',
            attributes: {
                style: {
                    listStyleType: type !== null && type !== void 0 ? type : null
                }
            }
        });
        this.jodit.synchronizeValues();
        return false;
    }
    beforeDestruct(jodit) { }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_4__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.autobind
], orderedList.prototype, "onCommand", null);
jodit_core_global__WEBPACK_IMPORTED_MODULE_2__/* .pluginSystem */ .pw.add('orderedList', orderedList);


/***/ }),

/***/ 11432:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62924);
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(37446);
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(81310);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




jodit_config__WEBPACK_IMPORTED_MODULE_1__/* .Config */ .D.prototype.askBeforePasteHTML = true;
jodit_config__WEBPACK_IMPORTED_MODULE_1__/* .Config */ .D.prototype.processPasteHTML = true;
jodit_config__WEBPACK_IMPORTED_MODULE_1__/* .Config */ .D.prototype.scrollToPastedContent = true;
jodit_config__WEBPACK_IMPORTED_MODULE_1__/* .Config */ .D.prototype.pasteExcludeStripTags = ['br', 'hr'];
jodit_config__WEBPACK_IMPORTED_MODULE_1__/* .Config */ .D.prototype.pasteHTMLActionList = [
    { value: jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.INSERT_AS_HTML, text: 'Keep' },
    { value: jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.INSERT_AS_TEXT, text: 'Insert as Text' },
    { value: jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.INSERT_ONLY_TEXT, text: 'Insert only Text' }
];
jodit_config__WEBPACK_IMPORTED_MODULE_1__/* .Config */ .D.prototype.memorizeChoiceWhenPasteFragment = false;
jodit_config__WEBPACK_IMPORTED_MODULE_1__/* .Config */ .D.prototype.nl2brInPlainText = true;
const psKey = 'pasteStorage';
jodit_config__WEBPACK_IMPORTED_MODULE_1__/* .Config */ .D.prototype.controls.paste = {
    tooltip: 'Paste from clipboard',
    exec(editor, _, { control }) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__/* .__awaiter */ .mG)(this, void 0, void 0, function* () {
            if (control.name === psKey) {
                editor.execCommand('showPasteStorage');
                return;
            }
            editor.s.focus();
            let text = '', error = true;
            if (navigator.clipboard) {
                try {
                    const items = yield navigator.clipboard.read();
                    if (items && items.length) {
                        const textBlob = yield items[0].getType(jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.TEXT_PLAIN);
                        text = yield new Response(textBlob).text();
                    }
                    error = false;
                }
                catch (e) {
                    if (!jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.IS_PROD) {
                        console.log(e);
                    }
                }
                if (error) {
                    try {
                        text = yield navigator.clipboard.readText();
                        error = false;
                    }
                    catch (e) {
                        if (!jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.IS_PROD) {
                            console.log(e);
                        }
                    }
                }
            }
            if (error) {
                text = editor.buffer.get(jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.CLIPBOARD_ID) || '';
                error = text.length === 0;
            }
            const value = editor.value;
            if (error) {
                editor.ed.execCommand('paste');
                error = value === editor.value;
                !error && editor.e.fire('afterPaste');
            }
            else if (text.length) {
                (0,_helpers__WEBPACK_IMPORTED_MODULE_2__/* .pasteInsertHtml */ .kU)(null, editor, text);
                editor.e.fire('afterPaste');
            }
            else {
                if (error) {
                    editor.alert("Your browser doesn't support direct access to the clipboard.", () => void editor.s.focus());
                }
            }
        });
    },
    list: {
        [psKey]: 'Paste Storage'
    },
    isChildDisabled(j) {
        return j.e.fire('pasteStorageList') < 2;
    }
};


/***/ }),

/***/ 81310:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $t: function() { return /* binding */ askInsertTypeDialog; },
/* harmony export */   ZH: function() { return /* binding */ getAllTypes; },
/* harmony export */   kU: function() { return /* binding */ pasteInsertHtml; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(78157);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_ui_button_button_button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(22003);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




/**
 * Remove special HTML comments
 * @private
 */
function removeExtraFragments(html) {
    html = html.replace(/<meta[^>]+?>/g, '');
    const start = html.search(/<!--StartFragment-->/i);
    if (start !== -1) {
        html = html.substring(start + 20);
    }
    const end = html.search(/<!--EndFragment-->/i);
    if (end !== -1) {
        html = html.substring(0, end);
    }
    return html;
}
/**
 * @private
 */
function isDragEvent(e) {
    return Boolean(e && e.type === 'drop');
}
/**
 * One insert point for clipboard plugins
 * @private
 */
function pasteInsertHtml(e, editor, html) {
    if (editor.isInDestruct) {
        return;
    }
    if (isDragEvent(e)) {
        editor.s.insertCursorAtPoint(e.clientX, e.clientY);
    }
    const result = editor.e.fire('beforePasteInsert', html);
    if (!(0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isVoid */ .nj)(result) &&
        ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isString */ .HD)(result) || (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isNumber */ .hj)(result) || jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isNode(result))) {
        html = result;
    }
    if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isString */ .HD)(html)) {
        html = removeExtraFragments(html);
    }
    editor.s.insertHTML(html);
}
/**
 * Return all available data types in event
 * @private
 */
function getAllTypes(dt) {
    const types = dt.types;
    let types_str = '';
    if ((0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_0__/* .isArray */ .kJ)(types) ||
        {}.toString.call(types) === '[object DOMStringList]') {
        for (let i = 0; i < types.length; i += 1) {
            types_str += types[i] + ';';
        }
    }
    else {
        types_str = (types || jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.TEXT_PLAIN).toString() + ';';
    }
    return types_str;
}
/**
 * Make command dialog
 * @private
 */
function askInsertTypeDialog(jodit, msg, title, callback, buttonList) {
    if (jodit.e.fire('beforeOpenPasteDialog', msg, title, callback, buttonList) === false) {
        return;
    }
    const dialog = jodit.confirm(`<div style="word-break: normal; white-space: normal">${jodit.i18n(msg)}</div>`, jodit.i18n(title));
    const buttons = buttonList.map(({ text, value }) => (0,jodit_core_ui_button_button_button__WEBPACK_IMPORTED_MODULE_3__/* .Button */ .zx)(jodit, {
        text,
        name: text.toLowerCase(),
        tabIndex: 0
    }).onAction(() => {
        dialog.close();
        callback(value);
    }));
    dialog.e.one(dialog, 'afterClose', () => {
        if (!jodit.s.isFocused()) {
            jodit.s.focus();
        }
    });
    const cancel = (0,jodit_core_ui_button_button_button__WEBPACK_IMPORTED_MODULE_3__/* .Button */ .zx)(jodit, {
        text: 'Cancel',
        tabIndex: 0
    }).onAction(() => {
        dialog.close();
    });
    dialog.setFooter([...buttons, cancel]);
    buttons[0].focus();
    buttons[0].state.variant = 'primary';
    jodit.e.fire('afterOpenPasteDialog', dialog, msg, title, callback, buttonList);
    return dialog;
}


/***/ }),

/***/ 90302:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export paste */
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_plugin_plugin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(97651);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(79102);
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(81310);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(11432);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */









/**
 * Ask before paste HTML source
 */
class paste extends jodit_core_plugin_plugin__WEBPACK_IMPORTED_MODULE_0__/* .Plugin */ .S {
    constructor() {
        super(...arguments);
        this.pasteStack = new jodit_core_helpers__WEBPACK_IMPORTED_MODULE_4__.LimitedStack(20);
        /**
         * The dialog box was already open
         */
        this._isDialogOpened = false;
    }
    /** @override **/
    afterInit(jodit) {
        jodit.e
            .on('paste.paste', this.onPaste)
            .on('pasteStack.paste', (item) => this.pasteStack.push(item));
        if (jodit.o.nl2brInPlainText) {
            this.j.e.on('processPaste.paste', this.onProcessPasteReplaceNl2Br);
        }
    }
    /** @override **/
    beforeDestruct(jodit) {
        jodit.e
            .off('paste.paste', this.onPaste)
            .off('processPaste.paste', this.onProcessPasteReplaceNl2Br)
            .off('.paste');
    }
    /**
     * Paste event handler
     */
    onPaste(e) {
        try {
            if (this.customPasteProcess(e) === false ||
                this.j.e.fire('beforePaste', e) === false) {
                e.preventDefault();
                return false;
            }
            this.defaultPasteProcess(e);
        }
        finally {
            this.j.e.fire('afterPaste', e);
        }
    }
    /**
     * Process before paste
     */
    customPasteProcess(e) {
        if (!this.j.o.processPasteHTML) {
            return;
        }
        const dt = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_4__.getDataTransfer)(e), texts = [
            dt === null || dt === void 0 ? void 0 : dt.getData(jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.TEXT_PLAIN),
            dt === null || dt === void 0 ? void 0 : dt.getData(jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.TEXT_HTML),
            dt === null || dt === void 0 ? void 0 : dt.getData(jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.TEXT_RTF)
        ];
        for (const value of texts) {
            if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_4__.isHTML)(value) &&
                (this.j.e.fire('processHTML', e, value, {
                    plain: texts[0],
                    html: texts[1],
                    rtf: texts[2]
                }) ||
                    this.processHTML(e, value))) {
                return false;
            }
        }
    }
    /**
     * Default paster process
     */
    defaultPasteProcess(e) {
        const dt = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_4__.getDataTransfer)(e);
        let text = (dt === null || dt === void 0 ? void 0 : dt.getData(jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.TEXT_HTML)) || (dt === null || dt === void 0 ? void 0 : dt.getData(jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.TEXT_PLAIN));
        if (dt && text && (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_4__.trim)(text) !== '') {
            const result = this.j.e.fire('processPaste', e, text, (0,_helpers__WEBPACK_IMPORTED_MODULE_6__/* .getAllTypes */ .ZH)(dt));
            if (result !== undefined) {
                text = result;
            }
            if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_4__.isString)(text) || jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isNode(text)) {
                this.__insertByType(e, text, this.j.o.defaultActionOnPaste);
            }
            e.preventDefault();
            e.stopPropagation();
        }
    }
    /**
     * Process usual HTML text fragment
     */
    processHTML(e, html) {
        if (!this.j.o.askBeforePasteHTML) {
            return false;
        }
        if (this.j.o.memorizeChoiceWhenPasteFragment) {
            const cached = this.pasteStack.find(cachedItem => cachedItem.html === html);
            if (cached) {
                this.__insertByType(e, html, cached.action || this.j.o.defaultActionOnPaste);
                return true;
            }
        }
        if (this._isDialogOpened) {
            return true;
        }
        const dialog = (0,_helpers__WEBPACK_IMPORTED_MODULE_6__/* .askInsertTypeDialog */ .$t)(this.j, 'Your code is similar to HTML. Keep as HTML?', 'Paste as HTML', insertType => {
            this._isDialogOpened = false;
            this.__insertByType(e, html, insertType);
        }, this.j.o.pasteHTMLActionList);
        if (dialog) {
            this._isDialogOpened = true;
            dialog.e.on('beforeClose', () => {
                this._isDialogOpened = false;
            });
        }
        return true;
    }
    /**
     * Insert HTML by option type
     */
    __insertByType(e, html, action) {
        this.pasteStack.push({ html, action });
        if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_4__.isString)(html)) {
            this.j.buffer.set(jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.CLIPBOARD_ID, html);
            switch (action) {
                case jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.INSERT_CLEAR_HTML:
                    html = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_4__.cleanFromWord)(html);
                    break;
                case jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.INSERT_ONLY_TEXT:
                    html = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_4__.stripTags)(html, this.j.ed, new Set(this.j.o.pasteExcludeStripTags));
                    break;
                case jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.INSERT_AS_TEXT:
                    html = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_4__.htmlspecialchars)(html);
                    break;
                default:
            }
        }
        (0,_helpers__WEBPACK_IMPORTED_MODULE_6__/* .pasteInsertHtml */ .kU)(e, this.j, html);
    }
    /**
     * Replace all \\n chars in plain text to br
     */
    onProcessPasteReplaceNl2Br(ignore, text, type) {
        if (type === jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.TEXT_PLAIN + ';' && !(0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_4__.isHTML)(text)) {
            return (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_4__.nl2br)(text);
        }
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__.autobind
], paste.prototype, "onPaste", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__.autobind
], paste.prototype, "onProcessPasteReplaceNl2Br", null);
jodit_core_global__WEBPACK_IMPORTED_MODULE_5__/* .pluginSystem */ .pw.add('paste', paste);


/***/ }),

/***/ 72735:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export redoUndo */
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_plugin_plugin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(97651);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(79102);
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(30052);
/* harmony import */ var _icons_redo_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(52390);
/* harmony import */ var _icons_redo_svg__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_icons_redo_svg__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _icons_undo_svg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(28825);
/* harmony import */ var _icons_undo_svg__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_icons_undo_svg__WEBPACK_IMPORTED_MODULE_6__);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */







jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_4__/* .Icon */ .J.set('redo', (_icons_redo_svg__WEBPACK_IMPORTED_MODULE_5___default())).set('undo', (_icons_undo_svg__WEBPACK_IMPORTED_MODULE_6___default()));
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.redo = {
    mode: jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_SPLIT,
    isDisabled: (editor) => !editor.history.canRedo(),
    tooltip: 'Redo'
};
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.undo = {
    mode: jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_SPLIT,
    isDisabled: (editor) => !editor.history.canUndo(),
    tooltip: 'Undo'
};
/**
 * Custom process Redo and Undo functionality
 */
class redoUndo extends jodit_core_plugin_plugin__WEBPACK_IMPORTED_MODULE_2__/* .Plugin */ .S {
    constructor() {
        super(...arguments);
        /** @override */
        this.buttons = [
            {
                name: 'undo',
                group: 'history'
            },
            {
                name: 'redo',
                group: 'history'
            }
        ];
    }
    beforeDestruct() {
        // do nothing
    }
    afterInit(editor) {
        const callback = (command) => {
            editor.history[command]();
            return false;
        };
        editor.registerCommand('redo', {
            exec: callback,
            hotkeys: ['ctrl+y', 'ctrl+shift+z', 'cmd+y', 'cmd+shift+z']
        });
        editor.registerCommand('undo', {
            exec: callback,
            hotkeys: ['ctrl+z', 'cmd+z']
        });
    }
}
jodit_core_global__WEBPACK_IMPORTED_MODULE_3__/* .pluginSystem */ .pw.add('redoUndo', redoUndo);


/***/ }),

/***/ 92835:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module plugins/resize-cells
 */

jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.tableAllowCellResize = true;


/***/ }),

/***/ 56866:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export resizeCells */
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62924);
/* harmony import */ var jodit_modules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(27801);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(79102);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(92835);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * [[include:plugins/resize-cells/README.md]]
 * @packageDocumentation
 * @module plugins/resize-cells
 */








const key = 'table_processor_observer-resize';
/**
 * Process tables in editor
 */
class resizeCells extends jodit_modules__WEBPACK_IMPORTED_MODULE_1__.Plugin {
    constructor() {
        super(...arguments);
        this.selectMode = false;
        this.resizeDelta = 0;
        this.createResizeHandle = () => {
            if (!this.resizeHandler) {
                this.resizeHandler = this.j.c.div('jodit-table-resizer');
                this.j.e
                    .on(this.resizeHandler, 'mousedown.table touchstart.table', this.onHandleMouseDown)
                    .on(this.resizeHandler, 'mouseenter.table', () => {
                    this.j.async.clearTimeout(this.hideTimeout);
                });
            }
        };
        this.hideTimeout = 0;
        this.drag = false;
        this.minX = 0;
        this.maxX = 0;
        this.startX = 0;
    }
    /**
     * Shortcut for Table module
     */
    get module() {
        return this.j.getInstance('Table', this.j.o);
    }
    /**
     * Now editor has rtl direction
     */
    get isRTL() {
        return this.j.o.direction === 'rtl';
    }
    showResizeHandle() {
        this.j.async.clearTimeout(this.hideTimeout);
        this.j.workplace.appendChild(this.resizeHandler);
    }
    hideResizeHandle() {
        this.hideTimeout = this.j.async.setTimeout(() => {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.safeRemove(this.resizeHandler);
        }, {
            timeout: this.j.defaultTimeout,
            label: 'hideResizer'
        });
    }
    /**
     * Click on resize handle
     */
    onHandleMouseDown(event) {
        if (this.j.isLocked) {
            return;
        }
        this.drag = true;
        this.j.e
            .on(this.j.ow, 'mouseup.resize-cells touchend.resize-cells', this.onMouseUp)
            .on(this.j.ew, 'mousemove.table touchmove.table', this.onMouseMove);
        this.startX = event.clientX;
        this.j.lock(key);
        this.resizeHandler.classList.add('jodit-table-resizer_moved');
        let box, tableBox = this.workTable.getBoundingClientRect();
        this.minX = 0;
        this.maxX = 1000000;
        if (this.wholeTable != null) {
            tableBox = this.workTable.parentNode.getBoundingClientRect();
            this.minX = tableBox.left;
            this.maxX = this.minX + tableBox.width;
        }
        else {
            // find maximum columns
            const coordinate = this.module.formalCoordinate(this.workTable, this.workCell, true);
            this.module.formalMatrix(this.workTable, (td, i, j) => {
                if (coordinate[1] === j) {
                    box = td.getBoundingClientRect();
                    this.minX = Math.max(box.left + jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.NEARBY / 2, this.minX);
                }
                if (coordinate[1] + (this.isRTL ? -1 : 1) === j) {
                    box = td.getBoundingClientRect();
                    this.maxX = Math.min(box.left + box.width - jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.NEARBY / 2, this.maxX);
                }
            });
        }
        return false;
    }
    /**
     * Mouse move after click on resize handle
     */
    onMouseMove(event) {
        if (!this.drag) {
            return;
        }
        this.j.e.fire('closeAllPopups');
        let x = event.clientX;
        const workplacePosition = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.offset)((this.resizeHandler.parentNode ||
            this.j.od.documentElement), this.j, this.j.od, true);
        if (x < this.minX) {
            x = this.minX;
        }
        if (x > this.maxX) {
            x = this.maxX;
        }
        this.resizeDelta =
            x - this.startX + (!this.j.o.iframe ? 0 : workplacePosition.left);
        this.resizeHandler.style.left =
            x - (this.j.o.iframe ? 0 : workplacePosition.left) + 'px';
        const sel = this.j.s.sel;
        sel && sel.removeAllRanges();
    }
    /**
     * Mouse up every where after move and click
     */
    onMouseUp(e) {
        if (this.selectMode || this.drag) {
            this.selectMode = false;
            this.j.unlock();
        }
        if (!this.resizeHandler || !this.drag) {
            return;
        }
        this.drag = false;
        this.j.e.off(this.j.ew, 'mousemove.table touchmove.table', this.onMouseMove);
        this.resizeHandler.classList.remove('jodit-table-resizer_moved');
        if (this.startX !== e.clientX) {
            // resize column
            if (this.wholeTable == null) {
                this.resizeColumns();
            }
            else {
                this.resizeTable();
            }
        }
        this.j.synchronizeValues();
        this.j.s.focus();
    }
    /**
     * Resize only one column
     */
    resizeColumns() {
        const delta = this.resizeDelta;
        const marked = [];
        const tableModule = this.module;
        tableModule.setColumnWidthByDelta(this.workTable, tableModule.formalCoordinate(this.workTable, this.workCell, true)[1], delta, true, marked);
        const nextTD = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.call)(this.isRTL ? jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.prev : jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.next, this.workCell, jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.isCell, this.workCell.parentNode);
        tableModule.setColumnWidthByDelta(this.workTable, tableModule.formalCoordinate(this.workTable, nextTD)[1], -delta, false, marked);
    }
    /**
     * Resize whole table
     */
    resizeTable() {
        const delta = this.resizeDelta * (this.isRTL ? -1 : 1);
        const width = this.workTable.offsetWidth, parentWidth = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.getContentWidth)(this.workTable.parentNode, this.j.ew);
        // for RTL use mirror logic
        const rightSide = !this.wholeTable;
        const needChangeWidth = this.isRTL ? !rightSide : rightSide;
        // right side
        if (needChangeWidth) {
            this.workTable.style.width =
                ((width + delta) / parentWidth) * 100 + '%';
        }
        else {
            const side = this.isRTL ? 'marginRight' : 'marginLeft';
            const margin = parseInt(this.j.ew.getComputedStyle(this.workTable)[side] || '0', 10);
            this.workTable.style.width =
                ((width - delta) / parentWidth) * 100 + '%';
            this.workTable.style[side] =
                ((margin + delta) / parentWidth) * 100 + '%';
        }
    }
    /**
     * Memoize current cell
     *
     * @param wholeTable - resize whole table by left side,
     * false - resize whole table by right side, null - resize column
     */
    setWorkCell(cell, wholeTable = null) {
        this.wholeTable = wholeTable;
        this.workCell = cell;
        this.workTable = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.up(cell, (elm) => jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.isTag(elm, 'table'), this.j.editor);
    }
    /**
     * Calc helper resize handle position
     */
    calcHandlePosition(table, cell, offsetX = 0, delta = 0) {
        const box = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.offset)(cell, this.j, this.j.ed);
        if (offsetX > jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.NEARBY && offsetX < box.width - jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.NEARBY) {
            this.hideResizeHandle();
            return;
        }
        const workplacePosition = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.offset)(this.j.workplace, this.j, this.j.od, true), parentBox = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.offset)(table, this.j, this.j.ed);
        this.resizeHandler.style.left =
            (offsetX <= jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.NEARBY ? box.left : box.left + box.width) -
                workplacePosition.left +
                delta +
                'px';
        Object.assign(this.resizeHandler.style, {
            height: parentBox.height + 'px',
            top: parentBox.top - workplacePosition.top + 'px'
        });
        this.showResizeHandle();
        if (offsetX <= jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.NEARBY) {
            const prevTD = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.call)(this.isRTL ? jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.next : jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.prev, cell, jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.isCell, cell.parentNode);
            this.setWorkCell(prevTD || cell, prevTD ? null : true);
        }
        else {
            const nextTD = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.call)(!this.isRTL ? jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.next : jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.prev, cell, jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.isCell, cell.parentNode);
            this.setWorkCell(cell, !nextTD ? false : null);
        }
    }
    /** @override */
    afterInit(editor) {
        if (!editor.o.tableAllowCellResize) {
            return;
        }
        editor.e
            .off(this.j.ow, '.resize-cells')
            .off('.resize-cells')
            .on('change.resize-cells afterCommand.resize-cells afterSetMode.resize-cells', () => {
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.$$)('table', editor.editor).forEach(this.observe);
        })
            .on(this.j.ow, 'scroll.resize-cells', () => {
            if (!this.drag) {
                return;
            }
            const parent = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.up(this.workCell, (elm) => jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.isTag(elm, 'table'), editor.editor);
            if (parent) {
                const parentBox = parent.getBoundingClientRect();
                this.resizeHandler.style.top = parentBox.top + 'px';
            }
        })
            .on('beforeSetMode.resize-cells', () => {
            const tableModule = this.module;
            tableModule.getAllSelectedCells().forEach(td => {
                tableModule.removeSelection(td);
                tableModule.normalizeTable(jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.closest(td, 'table', editor.editor));
            });
        });
    }
    /**
     * Add to every Table listeners
     */
    observe(table) {
        if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.dataBind)(table, key)) {
            return;
        }
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.dataBind)(table, key, true);
        this.j.e
            .on(table, 'mouseleave.resize-cells', (e) => {
            if (this.resizeHandler &&
                this.resizeHandler !== e.relatedTarget) {
                this.hideResizeHandle();
            }
        })
            .on(table, 'mousemove.resize-cells touchmove.resize-cells', this.j.async.throttle((event) => {
            if (this.j.isLocked) {
                return;
            }
            const cell = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.up(event.target, jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_4__/* .Dom */ .i.isCell, table);
            if (!cell) {
                return;
            }
            this.calcHandlePosition(table, cell, event.offsetX);
        }, {
            timeout: this.j.defaultTimeout
        }));
        this.createResizeHandle();
    }
    beforeDestruct(jodit) {
        if (jodit.events) {
            jodit.e.off(this.j.ow, '.resize-cells');
            jodit.e.off('.resize-cells');
        }
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__.autobind
], resizeCells.prototype, "onHandleMouseDown", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__.autobind
], resizeCells.prototype, "onMouseMove", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__.autobind
], resizeCells.prototype, "onMouseUp", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_3__.autobind
], resizeCells.prototype, "observe", null);
jodit_core_global__WEBPACK_IMPORTED_MODULE_5__/* .pluginSystem */ .pw.add('resizeCells', resizeCells);


/***/ }),

/***/ 13617:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.allowResizeTags = new Set(['img', 'iframe', 'table', 'jodit']);
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.resizer = {
    showSize: true,
    hideSizeTimeout: 1000,
    forImageChangeAttributes: true,
    min_width: 10,
    min_height: 10,
    useAspectRatio: new Set(['img'])
};


/***/ }),

/***/ 68135:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export resizer */
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_plugin_plugin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(97651);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(79102);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(13666);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(13617);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * [[include:plugins/resizer/README.md]]
 * @packageDocumentation
 * @module plugins/resizer
 */










const keyBInd = '__jodit-resizer_binded';
/**
 * The module creates a supporting frame for resizing of the elements img and table
 */
class resizer extends jodit_core_plugin_plugin__WEBPACK_IMPORTED_MODULE_3__/* .Plugin */ .S {
    constructor() {
        super(...arguments);
        this.LOCK_KEY = 'resizer';
        this.element = null;
        this.isResizeMode = false;
        this.isShown = false;
        this.startX = 0;
        this.startY = 0;
        this.width = 0;
        this.height = 0;
        this.ratio = 0;
        this.rect = this.j.c.fromHTML(`<div title="${this.j.i18n('Press Alt for custom resizing')}" class="jodit-resizer">
				<div class="jodit-resizer__top-left"></div>
				<div class="jodit-resizer__top-right"></div>
				<div class="jodit-resizer__bottom-right"></div>
				<div class="jodit-resizer__bottom-left"></div>
				<span>100x100</span>
			</div>`);
        this.sizeViewer = this.rect.getElementsByTagName('span')[0];
        this.pointerX = 0;
        this.pointerY = 0;
        this.isAltMode = false;
        this.onClickElement = (element) => {
            if (this.isResizeMode) {
                return;
            }
            if (this.element !== element || !this.isShown) {
                this.element = element;
                this.show();
                if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTag(this.element, 'img') && !this.element.complete) {
                    this.j.e.one(this.element, 'load', this.updateSize);
                }
            }
        };
        this.updateSize = () => {
            if (this.isInDestruct || !this.isShown) {
                return;
            }
            if (this.element && this.rect) {
                const workplacePosition = this.getWorkplacePosition();
                const pos = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.offset)(this.element, this.j, this.j.ed), left = parseInt(this.rect.style.left || '0', 10), top = parseInt(this.rect.style.top || '0', 10), w = this.rect.offsetWidth, h = this.rect.offsetHeight;
                const newTop = pos.top - workplacePosition.top, newLeft = pos.left - workplacePosition.left;
                if (top !== newTop ||
                    left !== newLeft ||
                    w !== this.element.offsetWidth ||
                    h !== this.element.offsetHeight) {
                    (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css)(this.rect, {
                        top: newTop,
                        left: newLeft,
                        width: this.element.offsetWidth,
                        height: this.element.offsetHeight
                    });
                    if (this.j.events) {
                        this.j.e.fire(this.element, 'changesize');
                        // check for first init. Ex. inlinePopup hides when it was fired
                        if (!isNaN(left)) {
                            this.j.e.fire('resize');
                        }
                    }
                }
            }
        };
        this.hideSizeViewer = () => {
            this.sizeViewer.style.opacity = '0';
        };
    }
    /** @override */
    afterInit(editor) {
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.$$)('div', this.rect).forEach((resizeHandle) => {
            editor.e.on(resizeHandle, 'mousedown.resizer touchstart.resizer', this.onStartResizing.bind(this, resizeHandle));
        });
        jodit_core_global__WEBPACK_IMPORTED_MODULE_4__/* .eventEmitter */ .TB.on('hideHelpers', this.hide);
        editor.e
            .on('readonly', (isReadOnly) => {
            if (isReadOnly) {
                this.hide();
            }
        })
            .on('afterInit changePlace', this.addEventListeners.bind(this))
            .on('afterGetValueFromEditor.resizer', (data) => {
            const rgx = /<jodit[^>]+data-jodit_iframe_wrapper[^>]+>(.*?<iframe[^>]*>.*?<\/iframe>.*?)<\/jodit>/gi;
            if (rgx.test(data.value)) {
                data.value = data.value.replace(rgx, '$1');
            }
        })
            .on('hideResizer', this.hide)
            .on('change afterInit afterSetMode', this.onChangeEditor);
        this.addEventListeners();
        this.onChangeEditor();
    }
    /**
     * Click in the editor area
     */
    onEditorClick(e) {
        let node = e.target;
        const { editor, options: { allowResizeTags } } = this.j;
        while (node && node !== editor) {
            if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTag(node, allowResizeTags)) {
                this.bind(node);
                this.onClickElement(node);
                return;
            }
            node = node.parentNode;
        }
    }
    addEventListeners() {
        const editor = this.j;
        editor.e
            .off(editor.editor, '.resizer')
            .off(editor.ow, '.resizer')
            .on(editor.editor, 'keydown.resizer', (e) => {
            if (this.isShown &&
                e.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_DELETE &&
                this.element &&
                !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTag(this.element, 'table')) {
                this.onDelete(e);
            }
        })
            .on(editor.ow, 'resize.resizer', this.updateSize)
            .on('resize.resizer', this.updateSize)
            .on([editor.ow, editor.editor], 'scroll.resizer', () => {
            if (this.isShown && !this.isResizeMode) {
                this.hide();
            }
        })
            .on(editor.ow, 'keydown.resizer', this.onKeyDown)
            .on(editor.ow, 'keyup.resizer', this.onKeyUp)
            .on(editor.ow, 'mouseup.resizer touchend.resizer', this.onClickOutside);
    }
    onStartResizing(resizeHandle, e) {
        if (!this.element || !this.element.parentNode) {
            this.hide();
            return false;
        }
        this.handle = resizeHandle;
        if (e.cancelable) {
            e.preventDefault();
        }
        e.stopImmediatePropagation();
        this.width = this.element.offsetWidth;
        this.height = this.element.offsetHeight;
        this.ratio = this.width / this.height;
        this.isResizeMode = true;
        this.startX = e.clientX;
        this.startY = e.clientY;
        this.pointerX = e.clientX;
        this.pointerY = e.clientY;
        const { j } = this;
        j.e.fire('hidePopup');
        j.lock(this.LOCK_KEY);
        j.e.on(j.ow, 'mousemove.resizer touchmove.resizer', this.onResize);
    }
    onEndResizing() {
        const { j } = this;
        j.unlock();
        this.isResizeMode = false;
        this.isAltMode = false;
        j.synchronizeValues();
        j.e.off(j.ow, 'mousemove.resizer touchmove.resizer', this.onResize);
    }
    onResize(e) {
        if (this.isResizeMode) {
            if (!this.element) {
                return;
            }
            this.pointerX = e.clientX;
            this.pointerY = e.clientY;
            let diff_x, diff_y;
            if (this.j.options.iframe) {
                const workplacePosition = this.getWorkplacePosition();
                diff_x = e.clientX + workplacePosition.left - this.startX;
                diff_y = e.clientY + workplacePosition.top - this.startY;
            }
            else {
                diff_x = this.pointerX - this.startX;
                diff_y = this.pointerY - this.startY;
            }
            const className = this.handle.className;
            let new_w = 0, new_h = 0;
            const uar = this.j.o.resizer.useAspectRatio;
            if (!this.isAltMode &&
                (uar === true || (uar && jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTag(this.element, uar)))) {
                if (diff_x) {
                    new_w =
                        this.width +
                            (className.match(/left/) ? -1 : 1) * diff_x;
                    new_h = Math.round(new_w / this.ratio);
                }
                else {
                    new_h =
                        this.height +
                            (className.match(/top/) ? -1 : 1) * diff_y;
                    new_w = Math.round(new_h * this.ratio);
                }
                if (new_w > (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.innerWidth)(this.j.editor, this.j.ow)) {
                    new_w = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.innerWidth)(this.j.editor, this.j.ow);
                    new_h = Math.round(new_w / this.ratio);
                }
            }
            else {
                new_w =
                    this.width + (className.match(/left/) ? -1 : 1) * diff_x;
                new_h =
                    this.height + (className.match(/top/) ? -1 : 1) * diff_y;
            }
            if (new_w > this.j.o.resizer.min_width) {
                if (new_w < this.rect.parentNode.offsetWidth) {
                    this.applySize(this.element, 'width', new_w);
                }
                else {
                    this.applySize(this.element, 'width', '100%');
                }
            }
            if (new_h > this.j.o.resizer.min_height) {
                this.applySize(this.element, 'height', new_h);
            }
            this.updateSize();
            this.showSizeViewer(this.element.offsetWidth, this.element.offsetHeight);
            e.stopImmediatePropagation();
        }
    }
    onKeyDown(e) {
        this.isAltMode = e.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_ALT;
        if (!this.isAltMode && this.isResizeMode) {
            this.onEndResizing();
        }
    }
    onKeyUp() {
        if (this.isAltMode && this.isResizeMode && this.element) {
            this.width = this.element.offsetWidth;
            this.height = this.element.offsetHeight;
            this.ratio = this.width / this.height;
            this.startX = this.pointerX;
            this.startY = this.pointerY;
        }
        this.isAltMode = false;
    }
    onClickOutside(e) {
        if (!this.isShown) {
            return;
        }
        if (!this.isResizeMode) {
            return this.hide();
        }
        e.stopImmediatePropagation();
        this.onEndResizing();
    }
    getWorkplacePosition() {
        return (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.offset)((this.rect.parentNode || this.j.od.documentElement), this.j, this.j.od, true);
    }
    applySize(element, key, value) {
        const changeAttrs = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isImage(element) && this.j.o.resizer.forImageChangeAttributes;
        if (changeAttrs) {
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.attr)(element, key, value);
        }
        if (!changeAttrs || element.style[key]) {
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css)(element, key, value);
        }
    }
    onDelete(e) {
        if (!this.element) {
            return;
        }
        if (this.element.tagName !== 'JODIT') {
            this.j.s.select(this.element);
        }
        else {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(this.element);
            this.hide();
            e.preventDefault();
        }
    }
    onChangeEditor() {
        if (this.isShown) {
            if (!this.element || !this.element.parentNode) {
                this.hide();
            }
            else {
                this.updateSize();
            }
        }
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.$$)('iframe', this.j.editor).forEach(this.bind);
    }
    /**
     * Bind an edit element to element
     * @param element - The element that you want to add a function to resize
     */
    bind(element) {
        if (!jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isHTMLElement(element) ||
            !this.j.o.allowResizeTags.has(element.tagName.toLowerCase()) ||
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.dataBind)(element, keyBInd)) {
            return;
        }
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.dataBind)(element, keyBInd, true);
        let wrapper;
        if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTag(element, 'iframe')) {
            const iframe = element;
            if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isHTMLElement(element.parentNode) &&
                (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.attr)(element.parentNode, '-jodit_iframe_wrapper')) {
                element = element.parentNode;
            }
            else {
                wrapper = this.j.createInside.element('jodit', {
                    'data-jodit-temp': 1,
                    contenteditable: false,
                    draggable: true,
                    'data-jodit_iframe_wrapper': 1
                });
                (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.attr)(wrapper, 'style', (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.attr)(element, 'style'));
                (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css)(wrapper, {
                    display: element.style.display === 'inline-block'
                        ? 'inline-block'
                        : 'block',
                    width: element.offsetWidth,
                    height: element.offsetHeight
                });
                if (element.parentNode) {
                    element.parentNode.insertBefore(wrapper, element);
                }
                wrapper.appendChild(element);
                this.j.e.on(wrapper, 'click', () => {
                    (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.attr)(wrapper, 'data-jodit-wrapper_active', true);
                });
                element = wrapper;
            }
            this.j.e
                .off(element, 'mousedown.select touchstart.select')
                .on(element, 'mousedown.select touchstart.select', () => {
                this.j.s.select(element);
            })
                .off(element, 'changesize')
                .on(element, 'changesize', () => {
                iframe.setAttribute('width', element.offsetWidth + 'px');
                iframe.setAttribute('height', element.offsetHeight + 'px');
            });
        }
        this.j.e.on(element, 'dragstart', this.hide);
        if (!jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.IS_ES_NEXT && jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.IS_IE) {
            // for IE don't show native resizer
            this.j.e.on(element, 'mousedown', (event) => {
                if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTag(element, 'img')) {
                    event.preventDefault();
                }
            });
        }
    }
    showSizeViewer(w, h) {
        if (!this.j.o.resizer.showSize) {
            return;
        }
        if (w < this.sizeViewer.offsetWidth ||
            h < this.sizeViewer.offsetHeight) {
            this.hideSizeViewer();
            return;
        }
        this.sizeViewer.style.opacity = '1';
        this.sizeViewer.textContent = `${w} x ${h}`;
        this.j.async.setTimeout(this.hideSizeViewer, {
            timeout: this.j.o.resizer.hideSizeTimeout,
            label: 'hideSizeViewer'
        });
    }
    /**
     * Show resizer
     */
    show() {
        if (this.j.o.readonly || this.isShown) {
            return;
        }
        this.isShown = true;
        if (!this.rect.parentNode) {
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.markOwner)(this.j, this.rect);
            this.j.workplace.appendChild(this.rect);
        }
        if (this.j.isFullSize) {
            this.rect.style.zIndex = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.css)(this.j.container, 'zIndex').toString();
        }
        this.updateSize();
    }
    /**
     * Hide resizer
     */
    hide() {
        if (!this.isResizeMode) {
            this.isResizeMode = false;
            this.isShown = false;
            this.element = null;
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.safeRemove(this.rect);
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.$$)("[data-jodit-wrapper_active='true']", this.j.editor).forEach(elm => (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.attr)(elm, 'data-jodit-wrapper_active', false));
        }
    }
    beforeDestruct(jodit) {
        this.hide();
        jodit_core_global__WEBPACK_IMPORTED_MODULE_4__/* .eventEmitter */ .TB.off('hideHelpers', this.hide);
        jodit.e.off(this.j.ow, '.resizer').off('.resizer');
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.watch)(':click')
], resizer.prototype, "onEditorClick", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.autobind
], resizer.prototype, "onStartResizing", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.autobind
], resizer.prototype, "onEndResizing", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.autobind
], resizer.prototype, "onResize", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.autobind
], resizer.prototype, "onKeyDown", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.autobind
], resizer.prototype, "onKeyUp", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.autobind
], resizer.prototype, "onClickOutside", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.debounce)()
], resizer.prototype, "onChangeEditor", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.autobind
], resizer.prototype, "bind", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.autobind
], resizer.prototype, "hide", null);
jodit_core_global__WEBPACK_IMPORTED_MODULE_4__/* .pluginSystem */ .pw.add('resizer', resizer);


/***/ }),

/***/ 87876:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module plugins/select-cells
 */

jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.tableAllowCellSelection = true;


/***/ }),

/***/ 31541:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export selectCells */
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_plugin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7331);
/* harmony import */ var jodit_modules_table_table__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(45979);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(79102);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(87876);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */









const key = 'table_processor_observer';
const MOUSE_MOVE_LABEL = 'onMoveTableSelectCell';
class selectCells extends jodit_core_plugin__WEBPACK_IMPORTED_MODULE_0__/* .Plugin */ .S {
    constructor() {
        super(...arguments);
        /**
         * First selected cell
         */
        this.__selectedCell = null;
        /**
         * User is selecting cells now
         */
        this.__isSelectionMode = false;
    }
    /**
     * Shortcut for Jodit.modules.Table
     */
    get __tableModule() {
        return this.j.getInstance(jodit_modules_table_table__WEBPACK_IMPORTED_MODULE_1__/* .Table */ .i, this.j.o);
    }
    afterInit(jodit) {
        if (!jodit.o.tableAllowCellSelection) {
            return;
        }
        jodit.e
            .on('keydown.select-cells', (event) => {
            if (event.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_4__.KEY_TAB) {
                this.unselectCells();
            }
        })
            .on('beforeCommand.select-cells', this.onExecCommand)
            .on('afterCommand.select-cells', this.onAfterCommand)
            // see `plugins/select.ts`
            .on([
            'clickEditor',
            'mousedownTd',
            'mousedownTh',
            'touchstartTd',
            'touchstartTh'
        ]
            .map(e => e + '.select-cells')
            .join(' '), this.onStartSelection)
            // For `clickEditor` correct working. Because `mousedown` on first cell
            // and mouseup on another cell call `click` only for `TR` element.
            .on('clickTr clickTbody', () => {
            var _a;
            const cellsCount = this.__tableModule.getAllSelectedCells().length;
            if (cellsCount) {
                if (cellsCount > 1) {
                    (_a = this.j.s.sel) === null || _a === void 0 ? void 0 : _a.removeAllRanges();
                }
                return false;
            }
        });
    }
    /**
     * Mouse click inside the table
     */
    onStartSelection(cell) {
        if (this.j.o.readonly) {
            return;
        }
        this.unselectCells();
        if (cell === this.j.editor) {
            return;
        }
        const table = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.closest(cell, 'table', this.j.editor);
        if (!cell || !table) {
            return;
        }
        if (!cell.firstChild) {
            cell.appendChild(this.j.createInside.element('br'));
        }
        this.__isSelectionMode = true;
        this.__selectedCell = cell;
        this.__tableModule.addSelection(cell);
        this.j.e
            .on(table, 'mousemove.select-cells touchmove.select-cells', 
        // Don't use decorator because need clear label on mouseup
        this.j.async.throttle(this.__onMove.bind(this, table), {
            label: MOUSE_MOVE_LABEL,
            timeout: this.j.defaultTimeout / 2
        }))
            .on(table, 'mouseup.select-cells touchend.select-cells', this.__onStopSelection.bind(this, table));
        return false;
    }
    onOutsideClick() {
        this.__selectedCell = null;
        this.__onRemoveSelection();
    }
    onChange() {
        if (!this.j.isLocked && !this.__isSelectionMode) {
            this.__onRemoveSelection();
        }
    }
    /**
     * Mouse move inside the table
     */
    __onMove(table, e) {
        var _a;
        if (this.j.o.readonly && !this.j.isLocked) {
            return;
        }
        if (this.j.isLockedNotBy(key)) {
            return;
        }
        const node = this.j.ed.elementFromPoint(e.clientX, e.clientY);
        if (!node) {
            return;
        }
        const cell = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.closest(node, ['td', 'th'], table);
        if (!cell || !this.__selectedCell) {
            return;
        }
        if (cell !== this.__selectedCell) {
            this.j.lock(key);
        }
        this.unselectCells();
        const bound = this.__tableModule.getSelectedBound(table, [
            cell,
            this.__selectedCell
        ]), box = this.__tableModule.formalMatrix(table);
        for (let i = bound[0][0]; i <= bound[1][0]; i += 1) {
            for (let j = bound[0][1]; j <= bound[1][1]; j += 1) {
                this.__tableModule.addSelection(box[i][j]);
            }
        }
        const cellsCount = this.__tableModule.getAllSelectedCells().length;
        if (cellsCount > 1) {
            (_a = this.j.s.sel) === null || _a === void 0 ? void 0 : _a.removeAllRanges();
        }
        this.j.e.fire('hidePopup');
        e.stopPropagation();
        // Hack for FireFox for force redraw selection
        (() => {
            const n = this.j.createInside.fromHTML('<div style="color:rgba(0,0,0,0.01);width:0;height:0">&nbsp;</div>');
            cell.appendChild(n);
            this.j.async.setTimeout(() => {
                var _a;
                (_a = n.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(n);
            }, this.j.defaultTimeout / 5);
        })();
    }
    /**
     * On click in outside - remove selection
     */
    __onRemoveSelection(e) {
        var _a;
        if (!((_a = e === null || e === void 0 ? void 0 : e.buffer) === null || _a === void 0 ? void 0 : _a.actionTrigger) &&
            !this.__selectedCell &&
            this.__tableModule.getAllSelectedCells().length) {
            this.j.unlock();
            this.unselectCells();
            this.j.e.fire('hidePopup', 'cells');
            return;
        }
        this.__isSelectionMode = false;
        this.__selectedCell = null;
    }
    /**
     * Stop a selection process
     */
    __onStopSelection(table, e) {
        if (!this.__selectedCell) {
            return;
        }
        this.__isSelectionMode = false;
        this.j.unlock();
        const node = this.j.ed.elementFromPoint(e.clientX, e.clientY);
        if (!node) {
            return;
        }
        const cell = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.closest(node, ['td', 'th'], table);
        if (!cell) {
            return;
        }
        const ownTable = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.closest(cell, 'table', table);
        if (ownTable && ownTable !== table) {
            return; // Nested tables
        }
        const bound = this.__tableModule.getSelectedBound(table, [
            cell,
            this.__selectedCell
        ]), box = this.__tableModule.formalMatrix(table);
        const max = box[bound[1][0]][bound[1][1]], min = box[bound[0][0]][bound[0][1]];
        this.j.e.fire('showPopup', table, () => {
            const minOffset = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.position)(min, this.j), maxOffset = (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.position)(max, this.j);
            return {
                left: minOffset.left,
                top: minOffset.top,
                width: maxOffset.left - minOffset.left + maxOffset.width,
                height: maxOffset.top - minOffset.top + maxOffset.height
            };
        }, 'cells');
        (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.$$)('table', this.j.editor).forEach(table => {
            this.j.e.off(table, 'mousemove.select-cells touchmove.select-cells mouseup.select-cells touchend.select-cells');
        });
        this.j.async.clearTimeout(MOUSE_MOVE_LABEL);
    }
    /**
     * Remove selection for all cells
     */
    unselectCells(currentCell) {
        const module = this.__tableModule;
        const cells = module.getAllSelectedCells();
        if (cells.length) {
            cells.forEach(cell => {
                if (!currentCell || currentCell !== cell) {
                    module.removeSelection(cell);
                }
            });
        }
    }
    /**
     * Execute custom commands for table
     */
    onExecCommand(command) {
        if (/table(splitv|splitg|merge|empty|bin|binrow|bincolumn|addcolumn|addrow)/.test(command)) {
            command = command.replace('table', '');
            const cells = this.__tableModule.getAllSelectedCells();
            if (cells.length) {
                const [cell] = cells;
                if (!cell) {
                    return;
                }
                const table = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.closest(cell, 'table', this.j.editor);
                if (!table) {
                    return;
                }
                switch (command) {
                    case 'splitv':
                        this.__tableModule.splitVertical(table);
                        break;
                    case 'splitg':
                        this.__tableModule.splitHorizontal(table);
                        break;
                    case 'merge':
                        this.__tableModule.mergeSelected(table);
                        break;
                    case 'empty':
                        cells.forEach(td => jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.detach(td));
                        break;
                    case 'bin':
                        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.safeRemove(table);
                        break;
                    case 'binrow':
                        new Set(cells.map(td => td.parentNode)).forEach(row => {
                            this.__tableModule.removeRow(table, row.rowIndex);
                        });
                        break;
                    case 'bincolumn':
                        {
                            const columnsSet = new Set(), columns = cells.reduce((acc, td) => {
                                if (!columnsSet.has(td.cellIndex)) {
                                    acc.push(td);
                                    columnsSet.add(td.cellIndex);
                                }
                                return acc;
                            }, []);
                            columns.forEach(td => {
                                this.__tableModule.removeColumn(table, td.cellIndex);
                            });
                        }
                        break;
                    case 'addcolumnafter':
                    case 'addcolumnbefore':
                        this.__tableModule.appendColumn(table, cell.cellIndex, command === 'addcolumnafter');
                        break;
                    case 'addrowafter':
                    case 'addrowbefore':
                        this.__tableModule.appendRow(table, cell.parentNode, command === 'addrowafter');
                        break;
                }
            }
            return false;
        }
    }
    /**
     * Add some align after native command
     */
    onAfterCommand(command) {
        if (/^justify/.test(command)) {
            this.__tableModule
                .getAllSelectedCells()
                .forEach(elm => (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.alignElement)(command, elm));
        }
    }
    /** @override */
    beforeDestruct(jodit) {
        this.__onRemoveSelection();
        jodit.e.off('.select-cells');
    }
}
selectCells.requires = ['select'];
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.autobind
], selectCells.prototype, "onStartSelection", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.watch)(':outsideClick')
], selectCells.prototype, "onOutsideClick", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.watch)(':change')
], selectCells.prototype, "onChange", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.autobind
], selectCells.prototype, "__onRemoveSelection", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.autobind
], selectCells.prototype, "__onStopSelection", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.autobind
], selectCells.prototype, "onExecCommand", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_5__.autobind
], selectCells.prototype, "onAfterCommand", null);
jodit_core_global__WEBPACK_IMPORTED_MODULE_6__/* .pluginSystem */ .pw.add('selectCells', selectCells);


/***/ }),

/***/ 55214:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module plugins/select
 */

jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.select = {
    normalizeSelectionBeforeCutAndCopy: false
};


/***/ }),

/***/ 94895:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export select */
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_plugin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7331);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_helpers_string_camel_case__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(33683);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(14712);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(79102);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(55214);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */








/**
 * A utility plugin that allows you to subscribe to a click/mousedown/touchstart/mouseup on an element in DOM order
 *
 * @example
 * ```js
 * const editor = Jodit.make('#editor');
 * editor.e.on('clickImg', (img) => {
 *   console.log(img.src);
 * })
 * ```
 */
class select extends jodit_core_plugin__WEBPACK_IMPORTED_MODULE_0__/* .Plugin */ .S {
    constructor() {
        super(...arguments);
        this.proxyEventsList = [
            'click',
            'mousedown',
            'touchstart',
            'mouseup',
            'touchend'
        ];
    }
    afterInit(jodit) {
        this.proxyEventsList.forEach(eventName => {
            jodit.e.on(eventName + '.select', this.onStartSelection);
        });
    }
    beforeDestruct(jodit) {
        this.proxyEventsList.forEach(eventName => {
            jodit.e.on(eventName + '.select', this.onStartSelection);
        });
    }
    onStartSelection(e) {
        const { j } = this;
        let result, target = e.target;
        while (result === undefined && target && target !== j.editor) {
            result = j.e.fire((0,jodit_core_helpers_string_camel_case__WEBPACK_IMPORTED_MODULE_6__/* .camelCase */ .e)(e.type + '_' + target.nodeName.toLowerCase()), target, e);
            target = target.parentElement;
        }
        if (e.type === 'click' && result === undefined && target === j.editor) {
            j.e.fire(e.type + 'Editor', target, e);
        }
    }
    /**
     * @event outsideClick(e) - when user clicked in the outside of editor
     */
    onOutsideClick(e) {
        const node = e.target;
        if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.up(node, elm => elm === this.j.editor)) {
            return;
        }
        const box = jodit_core_ui__WEBPACK_IMPORTED_MODULE_3__/* .UIElement */ .u1.closestElement(node, jodit_core_ui__WEBPACK_IMPORTED_MODULE_3__/* .Popup */ .GI);
        if (!box) {
            this.j.e.fire('outsideClick', e);
        }
    }
    beforeCommandCut(command) {
        const { s } = this.j;
        if (!s.isCollapsed()) {
            const current = s.current();
            if (current && jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isOrContains(this.j.editor, current)) {
                this.onCopyNormalizeSelectionBound();
            }
        }
    }
    beforeCommandSelectall(command) {
        const { s } = this.j;
        s.focus();
        s.select(this.j.editor, true);
        s.expandSelection();
        return false;
    }
    onCopyNormalizeSelectionBound(e) {
        const { s, editor, o } = this.j;
        if (!o.select.normalizeSelectionBeforeCutAndCopy || s.isCollapsed()) {
            return;
        }
        if (e &&
            (!e.isTrusted ||
                !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isNode(e.target) ||
                !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isOrContains(editor, e.target))) {
            return;
        }
        this.jodit.s.expandSelection();
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.autobind
], select.prototype, "onStartSelection", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.watch)('ow:click')
], select.prototype, "onOutsideClick", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.watch)([':beforeCommandCut'])
], select.prototype, "beforeCommandCut", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.watch)([':beforeCommandSelectall'])
], select.prototype, "beforeCommandSelectall", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_7__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.watch)([':copy', ':cut'])
], select.prototype, "onCopyNormalizeSelectionBound", null);
jodit_core_global__WEBPACK_IMPORTED_MODULE_4__/* .pluginSystem */ .pw.add('select', select);


/***/ }),

/***/ 80763:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(30052);
/* harmony import */ var _source_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(61097);
/* harmony import */ var _source_svg__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_source_svg__WEBPACK_IMPORTED_MODULE_3__);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.beautifyHTML = !jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.IS_IE;
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.sourceEditor = 'ace';
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.sourceEditorNativeOptions = {
    /**
     * Show gutter
     */
    showGutter: true,
    /**
     * Default theme
     */
    theme: 'ace/theme/idle_fingers',
    /**
     * Default mode
     */
    mode: 'ace/mode/html',
    /**
     * Wrap lines. Possible values - "off", 80-100..., true, "free"
     */
    wrap: true,
    /**
     * Highlight active line
     */
    highlightActiveLine: true
};
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.sourceEditorCDNUrlsJS = [
    'https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.2/ace.js'
];
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.beautifyHTMLCDNUrlsJS = [
    'https://cdnjs.cloudflare.com/ajax/libs/js-beautify/1.14.4/beautify.min.js',
    'https://cdnjs.cloudflare.com/ajax/libs/js-beautify/1.14.4/beautify-html.min.js'
];
jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_2__/* .Icon */ .J.set('source', (_source_svg__WEBPACK_IMPORTED_MODULE_3___default()));
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.source = {
    mode: jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_SPLIT,
    exec: (editor) => {
        editor.toggleMode();
    },
    isActive: (editor) => {
        return editor.getRealMode() === jodit_core_constants__WEBPACK_IMPORTED_MODULE_1__.MODE_SOURCE;
    },
    tooltip: 'Change mode'
};


/***/ }),

/***/ 81176:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   F: function() { return /* binding */ AceEditor; }
/* harmony export */ });
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76974);
/* harmony import */ var jodit_plugins_source_editor_sourceEditor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(12025);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



class AceEditor extends jodit_plugins_source_editor_sourceEditor__WEBPACK_IMPORTED_MODULE_2__/* .SourceEditor */ .b {
    constructor() {
        super(...arguments);
        this.className = 'jodit_ace_editor';
        /**
         * Proxy Method
         */
        this.proxyOnBlur = (e) => {
            this.j.e.fire('blur', e);
        };
        this.proxyOnFocus = (e) => {
            this.j.e.fire('focus', e);
        };
        this.proxyOnMouseDown = (e) => {
            this.j.e.fire('mousedown', e);
        };
    }
    aceExists() {
        return this.j.ow.ace !== undefined;
    }
    getLastColumnIndex(row) {
        return this.instance.session.getLine(row).length;
    }
    getLastColumnIndices() {
        const rows = this.instance.session.getLength();
        const lastColumnIndices = [];
        let lastColIndex = 0;
        for (let i = 0; i < rows; i++) {
            lastColIndex += this.getLastColumnIndex(i);
            if (i > 0) {
                lastColIndex += 1;
            }
            lastColumnIndices[i] = lastColIndex;
        }
        return lastColumnIndices;
    }
    getRowColumnIndices(characterIndex) {
        const lastColumnIndices = this.getLastColumnIndices();
        if (characterIndex <= lastColumnIndices[0]) {
            return { row: 0, column: characterIndex };
        }
        let row = 1;
        for (let i = 1; i < lastColumnIndices.length; i++) {
            if (characterIndex > lastColumnIndices[i]) {
                row = i + 1;
            }
        }
        const column = characterIndex - lastColumnIndices[row - 1] - 1;
        return { row, column };
    }
    setSelectionRangeIndices(start, end) {
        const startRowColumn = this.getRowColumnIndices(start);
        const endRowColumn = this.getRowColumnIndices(end);
        this.instance.getSelection().setSelectionRange({
            start: startRowColumn,
            end: endRowColumn
        });
    }
    getIndexByRowColumn(row, column) {
        const lastColumnIndices = this.getLastColumnIndices();
        return lastColumnIndices[row] - this.getLastColumnIndex(row) + column;
    }
    init(editor) {
        const tryInitAceEditor = () => {
            if (this.instance !== undefined || !this.aceExists()) {
                return;
            }
            const fakeMirror = this.j.c.div('jodit-source__mirror-fake');
            this.container.appendChild(fakeMirror);
            const ace = editor.ow.ace;
            this.instance = ace.edit(fakeMirror);
            this.instance.setTheme(editor.o.sourceEditorNativeOptions.theme);
            this.instance.renderer.setShowGutter(editor.o.sourceEditorNativeOptions.showGutter);
            this.instance
                .getSession()
                .setMode(editor.o.sourceEditorNativeOptions.mode);
            this.instance.setHighlightActiveLine(editor.o.sourceEditorNativeOptions.highlightActiveLine);
            this.instance.getSession().setUseWrapMode(true);
            this.instance.setOption('indentedSoftWrap', false);
            this.instance.setOption('wrap', editor.o.sourceEditorNativeOptions.wrap);
            this.instance.getSession().setUseWorker(false);
            this.instance.$blockScrolling = Infinity;
            this.instance.on('change', this.toWYSIWYG);
            this.instance.on('focus', this.proxyOnFocus);
            this.instance.on('mousedown', this.proxyOnMouseDown);
            this.instance.on('blur', this.proxyOnBlur);
            if (editor.getRealMode() !== jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.MODE_WYSIWYG) {
                this.setValue(this.getValue());
            }
            const onResize = this.j.async.debounce(() => {
                if (editor.isInDestruct) {
                    return;
                }
                if (editor.o.height !== 'auto') {
                    this.instance.setOption('maxLines', editor.workplace.offsetHeight /
                        this.instance.renderer.lineHeight);
                }
                else {
                    this.instance.setOption('maxLines', Infinity);
                }
                this.instance.resize();
            }, this.j.defaultTimeout * 2);
            editor.e.on('afterResize afterSetMode', onResize);
            onResize();
            this.onReady();
        };
        editor.e.on('afterSetMode', () => {
            if (editor.getRealMode() !== jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.MODE_SOURCE &&
                editor.getMode() !== jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.MODE_SPLIT) {
                return;
            }
            this.fromWYSIWYG();
            tryInitAceEditor();
        });
        tryInitAceEditor();
        // global add ace editor in browser
        if (!this.aceExists()) {
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.loadNext)(editor, editor.o.sourceEditorCDNUrlsJS)
                .then(() => {
                if (!editor.isInDestruct) {
                    tryInitAceEditor();
                }
            })
                .catch(() => null);
        }
    }
    destruct() {
        var _a, _b;
        this.instance.off('change', this.toWYSIWYG);
        this.instance.off('focus', this.proxyOnFocus);
        this.instance.off('mousedown', this.proxyOnMouseDown);
        this.instance.destroy();
        (_b = (_a = this.j) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.off('aceInited.source');
    }
    setValue(value) {
        if (!this.j.o.editHTMLDocumentMode && this.j.o.beautifyHTML) {
            const html = this.j.e.fire('beautifyHTML', value);
            if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_1__.isString)(html)) {
                value = html;
            }
        }
        this.instance.setValue(value);
        this.instance.clearSelection();
    }
    getValue() {
        return this.instance.getValue();
    }
    setReadOnly(isReadOnly) {
        this.instance.setReadOnly(isReadOnly);
    }
    get isFocused() {
        return this.instance.isFocused();
    }
    focus() {
        this.instance.focus();
    }
    blur() {
        this.instance.blur();
    }
    getSelectionStart() {
        const range = this.instance.selection.getRange();
        return this.getIndexByRowColumn(range.start.row, range.start.column);
    }
    getSelectionEnd() {
        const range = this.instance.selection.getRange();
        return this.getIndexByRowColumn(range.end.row, range.end.column);
    }
    selectAll() {
        this.instance.selection.selectAll();
    }
    insertRaw(html) {
        const start = this.instance.selection.getCursor(), end = this.instance.session.insert(start, html);
        this.instance.selection.setRange({
            start,
            end
        }, false);
    }
    setSelectionRange(start, end) {
        this.setSelectionRangeIndices(start, end);
    }
    setPlaceHolder(title) {
        // ACE does not support placeholder
        // title
    }
    replaceUndoManager() {
        const { history } = this.jodit;
        this.instance.commands.addCommand({
            name: 'Undo',
            bindKey: { win: 'Ctrl-Z', mac: 'Command-Z' },
            exec: () => {
                history.undo();
            }
        });
        this.instance.commands.addCommand({
            name: 'Redo',
            bindKey: { win: 'Ctrl-Shift-Z', mac: 'Command-Shift-Z' },
            exec: () => {
                history.redo();
            }
        });
    }
}


/***/ }),

/***/ 40481:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Y: function() { return /* binding */ TextAreaEditor; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(71737);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_plugins_source_editor_sourceEditor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(12025);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



class TextAreaEditor extends jodit_plugins_source_editor_sourceEditor__WEBPACK_IMPORTED_MODULE_1__/* .SourceEditor */ .b {
    constructor() {
        super(...arguments);
        this.autosize = this.j.async.debounce(() => {
            this.instance.style.height = 'auto';
            this.instance.style.height = this.instance.scrollHeight + 'px';
        }, this.j.defaultTimeout);
    }
    init(editor) {
        this.instance = editor.c.element('textarea', {
            class: 'jodit-source__mirror'
        });
        this.container.appendChild(this.instance);
        editor.e
            .on(this.instance, 'mousedown keydown touchstart input', editor.async.debounce(this.toWYSIWYG, editor.defaultTimeout))
            .on('setMinHeight.source', (minHeightD) => {
            (0,jodit_core_helpers_utils_css__WEBPACK_IMPORTED_MODULE_2__/* .css */ .i)(this.instance, 'minHeight', minHeightD);
        })
            .on(this.instance, 'change keydown mousedown touchstart input', this.autosize)
            .on('afterSetMode.source', this.autosize)
            .on(this.instance, 'mousedown focus', (e) => {
            editor.e.fire(e.type, e);
        });
        this.autosize();
        this.onReady();
    }
    destruct() {
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(this.instance);
    }
    getValue() {
        return this.instance.value;
    }
    setValue(raw) {
        this.instance.value = raw;
    }
    insertRaw(raw) {
        const value = this.getValue();
        if (this.getSelectionStart() >= 0) {
            const startPos = this.getSelectionStart(), endPos = this.getSelectionEnd();
            this.setValue(value.substring(0, startPos) +
                raw +
                value.substring(endPos, value.length));
        }
        else {
            this.setValue(value + raw);
        }
    }
    getSelectionStart() {
        return this.instance.selectionStart;
    }
    getSelectionEnd() {
        return this.instance.selectionEnd;
    }
    setSelectionRange(start, end = start) {
        this.instance.setSelectionRange(start, end);
    }
    get isFocused() {
        return this.instance === this.j.od.activeElement;
    }
    focus() {
        this.instance.focus();
    }
    blur() {
        this.instance.blur();
    }
    setPlaceHolder(title) {
        this.instance.setAttribute('placeholder', title);
    }
    setReadOnly(isReadOnly) {
        if (isReadOnly) {
            this.instance.setAttribute('readonly', 'true');
        }
        else {
            this.instance.removeAttribute('readonly');
        }
    }
    selectAll() {
        this.instance.select();
    }
    replaceUndoManager() {
        const { history } = this.jodit;
        this.j.e.on(this.instance, 'keydown', (e) => {
            if ((e.ctrlKey || e.metaKey) && e.key === 'z') {
                if (e.shiftKey) {
                    history.redo();
                }
                else {
                    history.undo();
                }
                this.setSelectionRange(this.getValue().length);
                return false;
            }
        });
    }
}


/***/ }),

/***/ 91887:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   F: function() { return /* reexport safe */ _ace__WEBPACK_IMPORTED_MODULE_1__.F; },
/* harmony export */   Y: function() { return /* reexport safe */ _area__WEBPACK_IMPORTED_MODULE_0__.Y; }
/* harmony export */ });
/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(40481);
/* harmony import */ var _ace__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(81176);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module plugins/source
 */


// export * from "./custom"; // You can add here another source editor


/***/ }),

/***/ 30786:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   l: function() { return /* binding */ createSourceEditor; }
/* harmony export */ });
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76974);
/* harmony import */ var _engines__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(91887);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


function createSourceEditor(type, editor, container, toWYSIWYG, fromWYSIWYG) {
    let sourceEditor;
    if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_0__.isFunction)(type)) {
        sourceEditor = type(editor);
    }
    else {
        switch (type) {
            case 'ace':
                if (!editor.o.shadowRoot) {
                    sourceEditor = new _engines__WEBPACK_IMPORTED_MODULE_1__/* .AceEditor */ .F(editor, container, toWYSIWYG, fromWYSIWYG);
                    break;
                }
            default:
                sourceEditor = new _engines__WEBPACK_IMPORTED_MODULE_1__/* .TextAreaEditor */ .Y(editor, container, toWYSIWYG, fromWYSIWYG);
        }
    }
    sourceEditor.init(editor);
    sourceEditor.onReadyAlways(() => {
        sourceEditor.setReadOnly(editor.o.readonly);
    });
    return sourceEditor;
}


/***/ }),

/***/ 12025:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   b: function() { return /* binding */ SourceEditor; }
/* harmony export */ });
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
class SourceEditor {
    constructor(jodit, container, toWYSIWYG, fromWYSIWYG) {
        this.jodit = jodit;
        this.container = container;
        this.toWYSIWYG = toWYSIWYG;
        this.fromWYSIWYG = fromWYSIWYG;
        this.className = '';
        this.isReady = false;
    }
    /**
     * Short alias for this.jodit
     */
    get j() {
        return this.jodit;
    }
    onReady() {
        this.replaceUndoManager();
        this.isReady = true;
        this.j.e.fire(this, 'ready');
    }
    onReadyAlways(onReady) {
        var _a;
        if (!this.isReady) {
            (_a = this.j.events) === null || _a === void 0 ? void 0 : _a.on(this, 'ready', onReady);
        }
        else {
            onReady();
        }
    }
}


/***/ }),

/***/ 1759:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export source */
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_plugin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7331);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(79102);
/* harmony import */ var _editor_factory__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(30786);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(80763);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

/**
 * [[include:plugins/source/README.md]]
 * @packageDocumentation
 * @module plugins/source
 */










/**
 * Plug-in change simple textarea on CodeMirror editor in Source code mode
 */
class source extends jodit_core_plugin__WEBPACK_IMPORTED_MODULE_1__/* .Plugin */ .S {
    constructor() {
        super(...arguments);
        /** @override */
        this.buttons = [
            {
                name: 'source',
                group: 'source'
            }
        ];
        this.__lock = false;
        this.__oldMirrorValue = '';
        this.tempMarkerStart = '{start-jodit-selection}';
        this.tempMarkerStartReg = /{start-jodit-selection}/g;
        this.tempMarkerEnd = '{end-jodit-selection}';
        this.tempMarkerEndReg = /{end-jodit-selection}/g;
        // override it for ace editors
        this.getSelectionStart = () => {
            var _a, _b;
            return (_b = (_a = this.sourceEditor) === null || _a === void 0 ? void 0 : _a.getSelectionStart()) !== null && _b !== void 0 ? _b : 0;
        };
        this.getSelectionEnd = () => {
            var _a, _b;
            return (_b = (_a = this.sourceEditor) === null || _a === void 0 ? void 0 : _a.getSelectionEnd()) !== null && _b !== void 0 ? _b : 0;
        };
    }
    onInsertHTML(html) {
        var _a;
        if (!this.j.o.readonly && !this.j.isEditorMode()) {
            (_a = this.sourceEditor) === null || _a === void 0 ? void 0 : _a.insertRaw(html);
            this.toWYSIWYG();
            return false;
        }
    }
    /**
     * Update source editor from WYSIWYG area
     */
    fromWYSIWYG(force = false) {
        if (!this.__lock || force === true) {
            this.__lock = true;
            const new_value = this.j.getEditorValue(false, jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.SOURCE_CONSUMER);
            if (new_value !== this.getMirrorValue()) {
                this.setMirrorValue(new_value);
            }
            this.__lock = false;
        }
    }
    /**
     * Update WYSIWYG area from source editor
     */
    toWYSIWYG() {
        if (this.__lock) {
            return;
        }
        const value = this.getMirrorValue();
        if (value === this.__oldMirrorValue) {
            return;
        }
        this.__lock = true;
        this.j.value = value;
        this.__lock = false;
        this.__oldMirrorValue = value;
    }
    getNormalPosition(pos, str) {
        str = str.replace(/<(script|style|iframe)[^>]*>[^]*?<\/\1>/im, m => {
            let res = '';
            for (let i = 0; i < m.length; i += 1) {
                res += jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.INVISIBLE_SPACE;
            }
            return res;
        });
        while (pos > 0 && str[pos] === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.INVISIBLE_SPACE) {
            pos--;
        }
        let start = pos;
        while (start > 0) {
            start--;
            if (str[start] === '<' &&
                str[start + 1] !== undefined &&
                str[start + 1].match(/[\w/]+/i)) {
                return start;
            }
            if (str[start] === '>') {
                return pos;
            }
        }
        return pos;
    }
    clnInv(str) {
        return str.replace(jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.INVISIBLE_SPACE_REG_EXP(), '');
    }
    onSelectAll(command) {
        var _a;
        if (command.toLowerCase() === 'selectall' &&
            this.j.getRealMode() === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.MODE_SOURCE) {
            (_a = this.sourceEditor) === null || _a === void 0 ? void 0 : _a.selectAll();
            return false;
        }
    }
    getMirrorValue() {
        var _a;
        return ((_a = this.sourceEditor) === null || _a === void 0 ? void 0 : _a.getValue()) || '';
    }
    setMirrorValue(value) {
        var _a;
        (_a = this.sourceEditor) === null || _a === void 0 ? void 0 : _a.setValue(value);
    }
    setFocusToMirror() {
        var _a;
        (_a = this.sourceEditor) === null || _a === void 0 ? void 0 : _a.focus();
    }
    saveSelection() {
        if (this.j.getRealMode() === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.MODE_WYSIWYG) {
            this.j.s.save();
            this.j.synchronizeValues();
            this.fromWYSIWYG(true);
        }
        else {
            if (this.j.o.editHTMLDocumentMode) {
                return;
            }
            const value = this.getMirrorValue();
            if (this.getSelectionStart() === this.getSelectionEnd()) {
                const marker = this.j.s.marker(true);
                const selectionStart = this.getNormalPosition(this.getSelectionStart(), this.getMirrorValue());
                this.setMirrorValue(value.substring(0, selectionStart) +
                    this.clnInv(marker.outerHTML) +
                    value.substring(selectionStart));
            }
            else {
                const markerStart = this.j.s.marker(true);
                const markerEnd = this.j.s.marker(false);
                const selectionStart = this.getNormalPosition(this.getSelectionStart(), value);
                const selectionEnd = this.getNormalPosition(this.getSelectionEnd(), value);
                this.setMirrorValue(value.slice(0, selectionStart) +
                    this.clnInv(markerStart.outerHTML) +
                    value.slice(selectionStart, selectionEnd) +
                    this.clnInv(markerEnd.outerHTML) +
                    value.slice(selectionEnd));
            }
            this.toWYSIWYG();
        }
    }
    removeSelection() {
        if (this.j.getRealMode() === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.MODE_WYSIWYG) {
            this.__lock = true;
            this.j.s.restore();
            this.__lock = false;
            return;
        }
        let value = this.getMirrorValue();
        let selectionStart = 0, selectionEnd = 0;
        try {
            value = value
                .replace(/<span[^>]+data-jodit-selection_marker=(["'])start\1[^>]*>[<>]*?<\/span>/gim, this.tempMarkerStart)
                .replace(/<span[^>]+data-jodit-selection_marker=(["'])end\1[^>]*>[<>]*?<\/span>/gim, this.tempMarkerEnd);
            if (!this.j.o.editHTMLDocumentMode && this.j.o.beautifyHTML) {
                const html = this.j.e.fire('beautifyHTML', value);
                if ((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.isString)(html)) {
                    value = html;
                }
            }
            selectionStart = value.indexOf(this.tempMarkerStart);
            selectionEnd = selectionStart;
            value = value.replace(this.tempMarkerStartReg, '');
            if (selectionStart !== -1) {
                const selectionEndCursor = value.indexOf(this.tempMarkerEnd);
                if (selectionEndCursor !== -1) {
                    selectionEnd = selectionEndCursor;
                }
            }
            value = value.replace(this.tempMarkerEndReg, '');
        }
        finally {
            value = value
                .replace(this.tempMarkerEndReg, '')
                .replace(this.tempMarkerStartReg, '');
        }
        this.setMirrorValue(value);
        this.setMirrorSelectionRange(selectionStart, selectionEnd);
        this.toWYSIWYG();
        this.setFocusToMirror(); // need for setting focus after change mode
    }
    setMirrorSelectionRange(start, end) {
        var _a;
        (_a = this.sourceEditor) === null || _a === void 0 ? void 0 : _a.setSelectionRange(start, end);
    }
    onReadonlyReact() {
        var _a;
        (_a = this.sourceEditor) === null || _a === void 0 ? void 0 : _a.setReadOnly(this.j.o.readonly);
    }
    /** @override */
    afterInit(editor) {
        this.mirrorContainer = editor.c.div('jodit-source');
        editor.workplace.appendChild(this.mirrorContainer);
        editor.e.on('afterAddPlace changePlace afterInit', () => {
            editor.workplace.appendChild(this.mirrorContainer);
        });
        this.sourceEditor = (0,_editor_factory__WEBPACK_IMPORTED_MODULE_6__/* .createSourceEditor */ .l)('area', editor, this.mirrorContainer, this.toWYSIWYG, this.fromWYSIWYG);
        editor.e.on(editor.ow, 'keydown', (e) => {
            var _a;
            if (e.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_ESC && ((_a = this.sourceEditor) === null || _a === void 0 ? void 0 : _a.isFocused)) {
                this.sourceEditor.blur();
            }
        });
        this.onReadonlyReact();
        editor.e
            .on('placeholder.source', (text) => {
            var _a;
            (_a = this.sourceEditor) === null || _a === void 0 ? void 0 : _a.setPlaceHolder(text);
        })
            .on('change.source', this.syncValueFromWYSIWYG)
            .on('beautifyHTML', html => html);
        if (editor.o.beautifyHTML) {
            const addEventListener = () => {
                var _a;
                if (editor.isInDestruct) {
                    return false;
                }
                const html_beautify = editor.ow.html_beautify;
                if (html_beautify && !editor.isInDestruct) {
                    (_a = editor.events) === null || _a === void 0 ? void 0 : _a.off('beautifyHTML').on('beautifyHTML', html => html_beautify(html));
                    return true;
                }
                return false;
            };
            if (!addEventListener()) {
                (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.loadNext)(editor, editor.o.beautifyHTMLCDNUrlsJS).then(addEventListener);
            }
        }
        this.syncValueFromWYSIWYG(true);
        this.initSourceEditor(editor);
    }
    syncValueFromWYSIWYG(force = false) {
        const editor = this.j;
        if (editor.getMode() === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.MODE_SPLIT ||
            editor.getMode() === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.MODE_SOURCE) {
            this.fromWYSIWYG(force);
        }
    }
    initSourceEditor(editor) {
        var _a;
        if (editor.o.sourceEditor !== 'area') {
            const sourceEditor = (0,_editor_factory__WEBPACK_IMPORTED_MODULE_6__/* .createSourceEditor */ .l)(editor.o.sourceEditor, editor, this.mirrorContainer, this.toWYSIWYG, this.fromWYSIWYG);
            sourceEditor.onReadyAlways(() => {
                var _a, _b;
                (_a = this.sourceEditor) === null || _a === void 0 ? void 0 : _a.destruct();
                this.sourceEditor = sourceEditor;
                this.syncValueFromWYSIWYG(true);
                (_b = editor.events) === null || _b === void 0 ? void 0 : _b.fire('sourceEditorReady', editor);
            });
        }
        else {
            (_a = this.sourceEditor) === null || _a === void 0 ? void 0 : _a.onReadyAlways(() => {
                var _a;
                this.syncValueFromWYSIWYG(true);
                (_a = editor.events) === null || _a === void 0 ? void 0 : _a.fire('sourceEditorReady', editor);
            });
        }
    }
    /** @override */
    beforeDestruct() {
        if (this.sourceEditor) {
            this.sourceEditor.destruct();
            delete this.sourceEditor;
        }
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.safeRemove(this.mirrorContainer);
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__.watch)(':insertHTML.source')
], source.prototype, "onInsertHTML", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__.autobind
], source.prototype, "fromWYSIWYG", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__.autobind
], source.prototype, "toWYSIWYG", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__.autobind
], source.prototype, "getNormalPosition", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__.watch)(':beforeCommand.source')
], source.prototype, "onSelectAll", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__.watch)(':beforeSetMode.source')
], source.prototype, "saveSelection", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__.watch)(':afterSetMode.source')
], source.prototype, "removeSelection", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__.autobind
], source.prototype, "setMirrorSelectionRange", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__.watch)(':readonly.source')
], source.prototype, "onReadonlyReact", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_8__/* .__decorate */ .gn)([
    jodit_core_decorators__WEBPACK_IMPORTED_MODULE_4__.autobind
], source.prototype, "syncValueFromWYSIWYG", null);
jodit_core_global__WEBPACK_IMPORTED_MODULE_5__/* .pluginSystem */ .pw.add('source', source);


/***/ }),

/***/ 22583:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(30052);
/* harmony import */ var _symbols_svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1296);
/* harmony import */ var _symbols_svg__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_symbols_svg__WEBPACK_IMPORTED_MODULE_2__);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */



jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.usePopupForSpecialCharacters = false;
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.specialCharacters = [
    '!',
    '&quot;',
    '#',
    '$',
    '%',
    '&amp;',
    "'",
    '(',
    ')',
    '*',
    '+',
    '-',
    '.',
    '/',
    '0',
    '1',
    '2',
    '3',
    '4',
    '5',
    '6',
    '7',
    '8',
    '9',
    ':',
    ';',
    '&lt;',
    '=',
    '&gt;',
    '?',
    '@',
    'A',
    'B',
    'C',
    'D',
    'E',
    'F',
    'G',
    'H',
    'I',
    'J',
    'K',
    'L',
    'M',
    'N',
    'O',
    'P',
    'Q',
    'R',
    'S',
    'T',
    'U',
    'V',
    'W',
    'X',
    'Y',
    'Z',
    '[',
    ']',
    '^',
    '_',
    '`',
    'a',
    'b',
    'c',
    'd',
    'e',
    'f',
    'g',
    'h',
    'i',
    'j',
    'k',
    'l',
    'm',
    'n',
    'o',
    'p',
    'q',
    'r',
    's',
    't',
    'u',
    'v',
    'w',
    'x',
    'y',
    'z',
    '{',
    '|',
    '}',
    '~',
    '&euro;',
    '&lsquo;',
    '&rsquo;',
    '&ldquo;',
    '&rdquo;',
    '&ndash;',
    '&mdash;',
    '&iexcl;',
    '&cent;',
    '&pound;',
    '&curren;',
    '&yen;',
    '&brvbar;',
    '&sect;',
    '&uml;',
    '&copy;',
    '&ordf;',
    '&laquo;',
    '&raquo;',
    '&not;',
    '&reg;',
    '&macr;',
    '&deg;',
    '&sup2;',
    '&sup3;',
    '&acute;',
    '&micro;',
    '&para;',
    '&middot;',
    '&cedil;',
    '&sup1;',
    '&ordm;',
    '&frac14;',
    '&frac12;',
    '&frac34;',
    '&iquest;',
    '&Agrave;',
    '&Aacute;',
    '&Acirc;',
    '&Atilde;',
    '&Auml;',
    '&Aring;',
    '&AElig;',
    '&Ccedil;',
    '&Egrave;',
    '&Eacute;',
    '&Ecirc;',
    '&Euml;',
    '&Igrave;',
    '&Iacute;',
    '&Icirc;',
    '&Iuml;',
    '&ETH;',
    '&Ntilde;',
    '&Ograve;',
    '&Oacute;',
    '&Ocirc;',
    '&Otilde;',
    '&Ouml;',
    '&times;',
    '&Oslash;',
    '&Ugrave;',
    '&Uacute;',
    '&Ucirc;',
    '&Uuml;',
    '&Yacute;',
    '&THORN;',
    '&szlig;',
    '&agrave;',
    '&aacute;',
    '&acirc;',
    '&atilde;',
    '&auml;',
    '&aring;',
    '&aelig;',
    '&ccedil;',
    '&egrave;',
    '&eacute;',
    '&ecirc;',
    '&euml;',
    '&igrave;',
    '&iacute;',
    '&icirc;',
    '&iuml;',
    '&eth;',
    '&ntilde;',
    '&ograve;',
    '&oacute;',
    '&ocirc;',
    '&otilde;',
    '&ouml;',
    '&divide;',
    '&oslash;',
    '&ugrave;',
    '&uacute;',
    '&ucirc;',
    '&uuml;',
    '&yacute;',
    '&thorn;',
    '&yuml;',
    '&OElig;',
    '&oelig;',
    '&#372;',
    '&#374',
    '&#373',
    '&#375;',
    '&sbquo;',
    '&#8219;',
    '&bdquo;',
    '&hellip;',
    '&trade;',
    '&#9658;',
    '&bull;',
    '&rarr;',
    '&rArr;',
    '&hArr;',
    '&diams;',
    '&asymp;'
];
jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_1__/* .Icon */ .J.set('symbols', (_symbols_svg__WEBPACK_IMPORTED_MODULE_2___default()));
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.symbols = {
    hotkeys: ['ctrl+shift+i', 'cmd+shift+i'],
    tooltip: 'Insert Special Character',
    popup: (editor, current, close) => {
        const container = editor.e.fire('generateSpecialCharactersTable.symbols');
        if (container) {
            if (editor.o.usePopupForSpecialCharacters) {
                const box = editor.c.div();
                box.classList.add('jodit-symbols');
                box.appendChild(container);
                editor.e.on(container, 'close_dialog', close);
                return box;
            }
            else {
                editor
                    .alert(container, 'Select Special Character', undefined, 'jodit-symbols')
                    .bindDestruct(editor);
                const a = container.querySelector('a');
                a && a.focus();
            }
        }
    }
};


/***/ }),

/***/ 33280:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    symbols: 'symbol'
};


/***/ }),

/***/ 51063:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    symbols: 'Symbol'
};


/***/ }),

/***/ 45290:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    symbols: 'Símbolo'
};


/***/ }),

/***/ 27021:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    symbols: 'caractère'
};


/***/ }),

/***/ 49274:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    symbols: 'Szimbólum'
};


/***/ }),

/***/ 70997:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ar: function() { return /* reexport module object */ _ar_js__WEBPACK_IMPORTED_MODULE_0__; },
/* harmony export */   cs_cz: function() { return /* reexport module object */ _cs_cz_js__WEBPACK_IMPORTED_MODULE_1__; },
/* harmony export */   de: function() { return /* reexport module object */ _de_js__WEBPACK_IMPORTED_MODULE_2__; },
/* harmony export */   es: function() { return /* reexport module object */ _es_js__WEBPACK_IMPORTED_MODULE_3__; },
/* harmony export */   fa: function() { return /* reexport module object */ _ar_js__WEBPACK_IMPORTED_MODULE_0__; },
/* harmony export */   fr: function() { return /* reexport module object */ _fr_js__WEBPACK_IMPORTED_MODULE_4__; },
/* harmony export */   he: function() { return /* reexport module object */ _ar_js__WEBPACK_IMPORTED_MODULE_0__; },
/* harmony export */   hu: function() { return /* reexport module object */ _hu_js__WEBPACK_IMPORTED_MODULE_5__; },
/* harmony export */   id: function() { return /* reexport module object */ _ar_js__WEBPACK_IMPORTED_MODULE_0__; },
/* harmony export */   it: function() { return /* reexport module object */ _it_js__WEBPACK_IMPORTED_MODULE_6__; },
/* harmony export */   ja: function() { return /* reexport module object */ _ja_js__WEBPACK_IMPORTED_MODULE_7__; },
/* harmony export */   ko: function() { return /* reexport module object */ _ar_js__WEBPACK_IMPORTED_MODULE_0__; },
/* harmony export */   mn: function() { return /* reexport module object */ _ar_js__WEBPACK_IMPORTED_MODULE_0__; },
/* harmony export */   nl: function() { return /* reexport module object */ _nl_js__WEBPACK_IMPORTED_MODULE_8__; },
/* harmony export */   pl: function() { return /* reexport module object */ _pl_js__WEBPACK_IMPORTED_MODULE_9__; },
/* harmony export */   pt_br: function() { return /* reexport module object */ _pt_br_js__WEBPACK_IMPORTED_MODULE_10__; },
/* harmony export */   ru: function() { return /* reexport module object */ _ar_js__WEBPACK_IMPORTED_MODULE_0__; },
/* harmony export */   tr: function() { return /* reexport module object */ _tr_js__WEBPACK_IMPORTED_MODULE_11__; },
/* harmony export */   zh_cn: function() { return /* reexport module object */ _zh_cn_js__WEBPACK_IMPORTED_MODULE_12__; },
/* harmony export */   zh_tw: function() { return /* reexport module object */ _zh_tw_js__WEBPACK_IMPORTED_MODULE_13__; }
/* harmony export */ });
/* harmony import */ var _ar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(45143);
/* harmony import */ var _ar_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ar_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _cs_cz_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(33280);
/* harmony import */ var _cs_cz_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_cs_cz_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _de_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(51063);
/* harmony import */ var _de_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_de_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _es_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(45290);
/* harmony import */ var _es_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_es_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _fr_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(27021);
/* harmony import */ var _fr_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_fr_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _hu_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(49274);
/* harmony import */ var _hu_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_hu_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _it_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(13603);
/* harmony import */ var _it_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_it_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _ja_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(33209);
/* harmony import */ var _ja_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_ja_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _nl_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(74290);
/* harmony import */ var _nl_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_nl_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _pl_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(33197);
/* harmony import */ var _pl_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_pl_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _pt_br_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(52583);
/* harmony import */ var _pt_br_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_pt_br_js__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _tr_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(49629);
/* harmony import */ var _tr_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_tr_js__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _zh_cn_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(59693);
/* harmony import */ var _zh_cn_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_zh_cn_js__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _zh_tw_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(92086);
/* harmony import */ var _zh_tw_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_zh_tw_js__WEBPACK_IMPORTED_MODULE_13__);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */























/***/ }),

/***/ 13603:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    symbols: 'Simbolo'
};


/***/ }),

/***/ 33209:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    symbols: 'symbol'
};


/***/ }),

/***/ 74290:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    symbols: 'symbool'
};


/***/ }),

/***/ 33197:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    symbols: 'symbol'
};


/***/ }),

/***/ 52583:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    symbols: 'Símbolo'
};


/***/ }),

/***/ 49629:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    symbols: 'Sembol'
};


/***/ }),

/***/ 59693:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    symbols: '符号'
};


/***/ }),

/***/ 92086:
/***/ (function(module) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
module.exports = {
    symbols: '符號'
};


/***/ }),

/***/ 1720:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export symbols */
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_plugin_plugin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(97651);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(86284);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(79102);
/* harmony import */ var _langs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(70997);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(22583);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * [[include:plugins/symbols/README.md]]
 * @packageDocumentation
 * @module plugins/symbols
 */








/**
 * The plugin inserts characters that are not part of the standard keyboard.
 */
class symbols extends jodit_core_plugin_plugin__WEBPACK_IMPORTED_MODULE_1__/* .Plugin */ .S {
    constructor(jodit) {
        super(jodit);
        /** @override */
        this.buttons = [
            {
                name: 'symbols',
                group: 'insert'
            }
        ];
        this.countInRow = 17;
        (0,jodit_core_global__WEBPACK_IMPORTED_MODULE_4__/* .extendLang */ .xl)(_langs__WEBPACK_IMPORTED_MODULE_5__);
    }
    /** @override */
    afterInit(jodit) {
        jodit.e.on('generateSpecialCharactersTable.symbols', () => {
            const container = jodit.c.fromHTML(`<div class="jodit-symbols__container">
						<div class="jodit-symbols__container_table">
							<table class="jodit-symbols__table"><tbody></tbody></table>
						</div>
						<div class="jodit-symbols__container_preview">
							<div class="jodit-symbols__preview"></div>
						</div>
					</div>`), preview = container.querySelector('.jodit-symbols__preview'), table = container.querySelector('table'), body = table.tBodies[0], chars = [];
            for (let i = 0; i < jodit.o.specialCharacters.length;) {
                const tr = jodit.c.element('tr');
                for (let j = 0; j < this.countInRow && i < jodit.o.specialCharacters.length; j += 1, i += 1) {
                    const td = jodit.c.element('td'), a = jodit.c.fromHTML(`<a
									data-index="${i}"
									data-index-j="${j}"
									role="option"
									tabindex="-1"
							>${jodit.o.specialCharacters[i]}</a>`);
                    chars.push(a);
                    td.appendChild(a);
                    tr.appendChild(td);
                }
                body.appendChild(tr);
            }
            const self = this;
            jodit.e
                .on(chars, 'focus', function () {
                preview.innerHTML = this.innerHTML;
            })
                .on(chars, 'mousedown', function (e) {
                if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isTag(this, 'a')) {
                    jodit.s.focus();
                    jodit.s.insertHTML(this.innerHTML);
                    jodit.e.fire(this, 'close_dialog');
                    e && e.preventDefault();
                    e && e.stopImmediatePropagation();
                }
            })
                .on(chars, 'mouseenter', function () {
                if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isTag(this, 'a')) {
                    this.focus();
                }
            })
                .on(chars, 'keydown', (e) => {
                const target = e.target;
                if (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_2__/* .Dom */ .i.isTag(target, 'a')) {
                    const index = parseInt((0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_3__.attr)(target, '-index') || '0', 10), jIndex = parseInt((0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_3__.attr)(target, 'data-index-j') || '0', 10);
                    let newIndex;
                    switch (e.key) {
                        case jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_UP:
                        case jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_DOWN:
                            newIndex =
                                e.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_UP
                                    ? index - self.countInRow
                                    : index + self.countInRow;
                            if (chars[newIndex] === undefined) {
                                newIndex =
                                    e.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_UP
                                        ? Math.floor(chars.length /
                                            self.countInRow) *
                                            self.countInRow +
                                            jIndex
                                        : jIndex;
                                if (newIndex > chars.length - 1) {
                                    newIndex -= self.countInRow;
                                }
                            }
                            chars[newIndex] && chars[newIndex].focus();
                            break;
                        case jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_RIGHT:
                        case jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_LEFT:
                            newIndex =
                                e.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_LEFT ? index - 1 : index + 1;
                            if (chars[newIndex] === undefined) {
                                newIndex =
                                    e.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_LEFT
                                        ? chars.length - 1
                                        : 0;
                            }
                            chars[newIndex] && chars[newIndex].focus();
                            break;
                        case jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_ENTER:
                            jodit.e.fire(target, 'mousedown');
                            e.stopImmediatePropagation();
                            e.preventDefault();
                            break;
                    }
                }
            });
            return container;
        });
    }
    /** @override */
    beforeDestruct(jodit) {
        jodit.e.off('generateSpecialCharactersTable.symbols');
    }
}
jodit_core_global__WEBPACK_IMPORTED_MODULE_4__/* .pluginSystem */ .pw.add('symbols', symbols);


/***/ }),

/***/ 74095:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: function() { return /* reexport safe */ _on_tab_inside_li__WEBPACK_IMPORTED_MODULE_0__.a; }
/* harmony export */ });
/* harmony import */ var _on_tab_inside_li__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(95580);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module plugins/tab
 */



/***/ }),

/***/ 95580:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: function() { return /* binding */ onTabInsideLi; }
/* harmony export */ });
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9162);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(52378);
/* harmony import */ var jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jodit_core_helpers_utils_assert__WEBPACK_IMPORTED_MODULE_1__);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/**
 * Checks if the cursor is at the beginning of the LI element when tabbed.
 * If so then add an internal list
 * @private
 */
function onTabInsideLi(jodit, shift = false) {
    if (!jodit.o.tab.tabInsideLiInsertNewList) {
        return false;
    }
    const [fake, fake2] = fakeCursors(jodit);
    try {
        const li = getParentLeaf(jodit, fake, shift);
        if (!li) {
            return false;
        }
        if (!isSameLeftCursorPosition(li, jodit, fake)) {
            return false;
        }
        const list = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.closest(li, ['ol', 'ul'], jodit.editor);
        if (!list || (shift && !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.closest(list, 'li', jodit.editor))) {
            return false;
        }
        if (!shift) {
            appendNestedList(jodit, list, li);
        }
        else {
            removeNestedList(jodit, list, li);
        }
        return true;
    }
    finally {
        const range = jodit.s.createRange();
        range.setStartAfter(fake);
        range.setEndBefore(fake2);
        jodit.s.selectRange(range);
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(fake);
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(fake2);
    }
    return false;
}
function fakeCursors(jodit) {
    const fake = jodit.createInside.fake();
    const fake2 = jodit.createInside.fake();
    const r = jodit.s.range.cloneRange();
    r.collapse(true);
    r.insertNode(fake);
    const r2 = jodit.s.range.cloneRange();
    r2.collapse(false);
    r2.insertNode(fake2);
    return [fake, fake2];
}
function getParentLeaf(jodit, fake, shift) {
    const li = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.closest(fake, 'li', jodit.editor);
    if (!li) {
        return false;
    }
    if (!shift && !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isLeaf(li.previousElementSibling)) {
        return false;
    }
    if (shift && !jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.closest(li, 'li', jodit.editor)) {
        return false;
    }
    return li;
}
function isSameLeftCursorPosition(li, jodit, fake) {
    const li2 = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.closest(fake, 'li', jodit.editor);
    return !(!li2 || (li2 !== li && !li.contains(li2)));
}
function appendNestedList(jodit, list, li) {
    const previousLi = li.previousElementSibling;
    void 0;
    const lastElm = previousLi.lastElementChild;
    const newList = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isTag(lastElm, list.tagName)
        ? lastElm
        : jodit.createInside.element(list.tagName, Array.from(list.attributes).reduce((acc, attr) => {
            acc[attr.name] = attr.value;
            return acc;
        }, {}));
    newList.appendChild(li);
    lastElm !== newList && previousLi.appendChild(newList);
}
function removeNestedList(jodit, list, li) {
    const parentLi = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.closest(list, 'li', jodit.editor);
    void 0;
    const items = Array.from(list.children).filter(t => jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.isLeaf(t));
    jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.after(parentLi, li);
    const index = items.indexOf(li);
    if (index === 0 || items.length === 1) {
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.safeRemove(list);
    }
    if (index !== items.length - 1) {
        const clone = list.cloneNode();
        jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.append(li, clone);
        for (let i = index + 1; i < items.length; i += 1) {
            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_0__/* .Dom */ .i.append(clone, items[i]);
        }
    }
}


/***/ }),

/***/ 98786:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * @module plugins/tab
 */

jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.tab = {
    tabInsideLiInsertNewList: true
};


/***/ }),

/***/ 41012:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(97582);
/* harmony import */ var jodit_core_plugin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7331);
/* harmony import */ var jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(13666);
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(79102);
/* harmony import */ var _cases__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(74095);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(98786);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */







class tab extends jodit_core_plugin__WEBPACK_IMPORTED_MODULE_0__/* .Plugin */ .S {
    afterInit(jodit) { }
    __onTab(event) {
        if (event.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_2__.KEY_TAB && this.__onShift(event.shiftKey)) {
            return false;
        }
    }
    __onCommand(command) {
        if ((command === 'indent' || command === 'outdent') &&
            this.__onShift(command === 'outdent')) {
            return false;
        }
    }
    __onShift(shift) {
        const res = (0,_cases__WEBPACK_IMPORTED_MODULE_4__/* .onTabInsideLi */ .a)(this.j, shift);
        if (res) {
            this.j.e.fire('afterTab', shift);
        }
        return res;
    }
    beforeDestruct(jodit) { }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_6__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.watch)(':keydown.tab')
], tab.prototype, "__onTab", null);
(0,tslib__WEBPACK_IMPORTED_MODULE_6__/* .__decorate */ .gn)([
    (0,jodit_core_decorators__WEBPACK_IMPORTED_MODULE_1__.watch)(':beforeCommand.tab')
], tab.prototype, "__onCommand", null);
jodit_core_global__WEBPACK_IMPORTED_MODULE_3__/* .pluginSystem */ .pw.add('tab', tab);


/***/ }),

/***/ 62:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export tableKeyboardNavigation */
/* harmony import */ var jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62924);
/* harmony import */ var jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9162);
/* harmony import */ var jodit_modules_table_table__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(45979);
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(79102);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */




/**
 * Process navigate keypressing in table cell
 */
function tableKeyboardNavigation(editor) {
    editor.e
        .off('.tableKeyboardNavigation')
        .on('keydown.tableKeyboardNavigation', (event) => {
        let current, block;
        if (event.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_TAB ||
            event.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_LEFT ||
            event.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_RIGHT ||
            event.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_UP ||
            event.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_DOWN) {
            current = editor.s.current();
            block = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.up(current, jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isCell, editor.editor);
            if (!block) {
                return;
            }
            const range = editor.s.range;
            if (event.key !== jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_TAB && current !== block) {
                if (((event.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_LEFT ||
                    event.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_UP) &&
                    (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.prev(current, (elm) => event.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_UP
                        ? jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTag(elm, 'br')
                        : Boolean(elm), block) ||
                        (event.key !== jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_UP &&
                            jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(current) &&
                            range.startOffset !== 0))) ||
                    ((event.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_RIGHT ||
                        event.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_DOWN) &&
                        (jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.next(current, (elm) => event.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_DOWN
                            ? jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTag(elm, 'br')
                            : Boolean(elm), block) ||
                            (event.key !== jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_DOWN &&
                                jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isText(current) &&
                                current.nodeValue &&
                                range.startOffset !==
                                    current.nodeValue.length)))) {
                    return;
                }
            }
        }
        else {
            return;
        }
        const tableModule = editor.getInstance('Table', editor.o);
        const table = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.up(block, (elm) => elm && /^table$/i.test(elm.nodeName), editor.editor);
        let next = null;
        switch (event.key) {
            case jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_TAB:
            // case consts.KEY_RIGHT:
            case jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_LEFT: {
                const sibling = event.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_LEFT || event.shiftKey
                    ? 'prev'
                    : 'next';
                next = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i[sibling](block, (elm) => elm &&
                    /^td|th$/i.test(elm.tagName), table);
                if (!next) {
                    tableModule.appendRow(table, sibling === 'next'
                        ? false
                        : table.querySelector('tr'), sibling === 'next');
                    next = jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i[sibling](block, jodit_core_dom_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isCell, table);
                }
                break;
            }
            case jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_UP:
            case jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_DOWN:
                {
                    let i = 0, j = 0;
                    const matrix = tableModule.formalMatrix(table, (elm, _i, _j) => {
                        if (elm === block) {
                            i = _i;
                            j = _j;
                        }
                    });
                    if (event.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_UP) {
                        if (matrix[i - 1] !== undefined) {
                            next = matrix[i - 1][j];
                        }
                    }
                    else {
                        if (matrix[i + 1] !== undefined) {
                            next = matrix[i + 1][j];
                        }
                    }
                }
                break;
        }
        if (next) {
            if (!next.firstChild) {
                const first = editor.createInside.element('br');
                next.appendChild(first);
                editor.s.setCursorBefore(first);
            }
            else {
                if (event.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_TAB) {
                    editor.s.select(next, true);
                }
                else {
                    editor.s.setCursorIn(next, event.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_RIGHT ||
                        event.key === jodit_core_constants__WEBPACK_IMPORTED_MODULE_0__.KEY_DOWN);
                }
            }
            return false;
        }
    });
}
jodit_core_global__WEBPACK_IMPORTED_MODULE_3__/* .pluginSystem */ .pw.add('tableKeyboardNavigation', tableKeyboardNavigation);


/***/ }),

/***/ 27793:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(46879);
/* harmony import */ var jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(86284);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(30052);
/* harmony import */ var _table_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(18508);
/* harmony import */ var _table_svg__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_table_svg__WEBPACK_IMPORTED_MODULE_5__);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */






jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.table = {
    selectionCellStyle: 'border: 1px double #1e88e5 !important;',
    useExtraClassesOptions: false
};
jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_4__/* .Icon */ .J.set('table', (_table_svg__WEBPACK_IMPORTED_MODULE_5___default()));
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.table = {
    data: {
        cols: 10,
        rows: 10,
        classList: {
            'table table-bordered': 'Bootstrap Bordered',
            'table table-striped': 'Bootstrap Striped',
            'table table-dark': 'Bootstrap Dark'
        }
    },
    popup: (editor, current, close, button) => {
        const control = button.control;
        const default_rows_count = control.data && control.data.rows ? control.data.rows : 10, default_cols_count = control.data && control.data.cols ? control.data.cols : 10;
        const generateExtraClasses = () => {
            if (!editor.o.table.useExtraClassesOptions) {
                return '';
            }
            const out = [];
            if (control.data) {
                const classList = control.data.classList;
                Object.keys(classList).forEach((classes) => {
                    out.push(`<label class="jodit_vertical_middle"><input class="jodit-checkbox" value="${classes}" type="checkbox"/>${classList[classes]}</label>`);
                });
            }
            return out.join('');
        };
        const form = editor.c.fromHTML('<form class="jodit-form jodit-form__inserter">' +
            '<div class="jodit-form__table-creator-box">' +
            '<div class="jodit-form__container"></div>' +
            '<div class="jodit-form__options">' +
            generateExtraClasses() +
            '</div>' +
            '</div>' +
            '<label class="jodit-form__center">' +
            '<span>1</span> &times; <span>1</span>' +
            '</label>' +
            '</form>'), rows = form.querySelectorAll('span')[0], cols = form.querySelectorAll('span')[1], blocksContainer = form.querySelector('.jodit-form__container'), options = form.querySelector('.jodit-form__options'), cells = [];
        const cnt = default_rows_count * default_cols_count;
        for (let i = 0; i < cnt; i += 1) {
            if (!cells[i]) {
                cells.push(editor.c.element('span', {
                    dataIndex: i
                }));
            }
        }
        const mouseenter = (e, index) => {
            const dv = e.target;
            if (!jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTag(dv, 'span')) {
                return;
            }
            const k = index === undefined || isNaN(index)
                ? parseInt((0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_2__.attr)(dv, '-index') || '0', 10)
                : index || 0;
            const rows_count = Math.ceil((k + 1) / default_cols_count), cols_count = (k % default_cols_count) + 1;
            for (let i = 0; i < cells.length; i += 1) {
                if (cols_count >= (i % default_cols_count) + 1 &&
                    rows_count >= Math.ceil((i + 1) / default_cols_count)) {
                    cells[i].className = 'jodit_hovered';
                }
                else {
                    cells[i].className = '';
                }
            }
            cols.textContent = cols_count.toString();
            rows.textContent = rows_count.toString();
        };
        editor.e
            .on(blocksContainer, 'mousemove', mouseenter)
            .on(blocksContainer, 'touchstart mousedown', (e) => {
            const dv = e.target;
            e.preventDefault();
            e.stopImmediatePropagation();
            if (!jodit_core_dom__WEBPACK_IMPORTED_MODULE_1__/* .Dom */ .i.isTag(dv, 'span')) {
                return;
            }
            const k = parseInt((0,jodit_core_helpers_utils__WEBPACK_IMPORTED_MODULE_2__.attr)(dv, '-index') || '0', 10);
            const rows_count = Math.ceil((k + 1) / default_cols_count), cols_count = (k % default_cols_count) + 1;
            const crt = editor.createInside, tbody = crt.element('tbody'), table = crt.element('table');
            table.appendChild(tbody);
            let first_td = null, tr, td;
            for (let i = 1; i <= rows_count; i += 1) {
                tr = crt.element('tr');
                for (let j = 1; j <= cols_count; j += 1) {
                    td = crt.element('td');
                    if (!first_td) {
                        first_td = td;
                    }
                    (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.css)(td, 'width', (100 / cols_count).toFixed(4) + '%');
                    td.appendChild(crt.element('br'));
                    tr.appendChild(crt.text('\n'));
                    tr.appendChild(crt.text('\t'));
                    tr.appendChild(td);
                }
                tbody.appendChild(crt.text('\n'));
                tbody.appendChild(tr);
            }
            (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.$$)('input[type=checkbox]:checked', options).forEach((input) => {
                input.value
                    .split(/[\s]+/)
                    .forEach((className) => {
                    table.classList.add(className);
                });
            });
            if (editor.editor.firstChild) {
                editor.s.insertNode(crt.text('\n'), false, false);
            }
            editor.s.insertNode(table, false);
            if (first_td) {
                editor.s.setCursorIn(first_td);
                (0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_3__.scrollIntoViewIfNeeded)(first_td, editor.editor, editor.ed);
            }
            close();
        });
        if (button && button.parentElement) {
            for (let i = 0; i < default_rows_count; i += 1) {
                const row = editor.c.div();
                for (let j = 0; j < default_cols_count; j += 1) {
                    row.appendChild(cells[i * default_cols_count + j]);
                }
                blocksContainer.appendChild(row);
            }
            if (cells[0]) {
                cells[0].className = 'hovered';
            }
        }
        return form;
    },
    tooltip: 'Insert table'
};


/***/ }),

/***/ 98457:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export table */
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(79102);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(27793);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * [[include:plugins/table/README.md]]
 * @packageDocumentation
 * @module plugins/table
 */



function table(editor) {
    editor.registerButton({
        name: 'table',
        group: 'insert'
    });
}
jodit_core_global__WEBPACK_IMPORTED_MODULE_0__/* .pluginSystem */ .pw.add('table', table);


/***/ }),

/***/ 84901:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37446);
/* harmony import */ var jodit_modules_widget__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6658);
/* harmony import */ var jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76974);
/* harmony import */ var jodit_core_ui_form__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(79000);
/* harmony import */ var jodit_core_ui_button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(64856);
/* harmony import */ var jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(30052);
/* harmony import */ var _video_svg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(97627);
/* harmony import */ var _video_svg__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_video_svg__WEBPACK_IMPORTED_MODULE_6__);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */







jodit_core_ui_icon__WEBPACK_IMPORTED_MODULE_5__/* .Icon */ .J.set('video', (_video_svg__WEBPACK_IMPORTED_MODULE_6___default()));
jodit_config__WEBPACK_IMPORTED_MODULE_0__/* .Config */ .D.prototype.controls.video = {
    popup: (editor, current, close) => {
        const formLink = new jodit_core_ui_form__WEBPACK_IMPORTED_MODULE_3__/* .UIForm */ .x4(editor, [
            new jodit_core_ui_form__WEBPACK_IMPORTED_MODULE_3__/* .UIBlock */ .eC(editor, [
                new jodit_core_ui_form__WEBPACK_IMPORTED_MODULE_3__/* .UIInput */ .u3(editor, {
                    name: 'url',
                    required: true,
                    label: 'URL',
                    placeholder: 'https://',
                    validators: ['url']
                })
            ]),
            new jodit_core_ui_form__WEBPACK_IMPORTED_MODULE_3__/* .UIBlock */ .eC(editor, [
                (0,jodit_core_ui_button__WEBPACK_IMPORTED_MODULE_4__/* .Button */ .zx)(editor, '', 'Insert', 'primary').onAction(() => formLink.submit())
            ])
        ]), formCode = new jodit_core_ui_form__WEBPACK_IMPORTED_MODULE_3__/* .UIForm */ .x4(editor, [
            new jodit_core_ui_form__WEBPACK_IMPORTED_MODULE_3__/* .UIBlock */ .eC(editor, [
                new jodit_core_ui_form__WEBPACK_IMPORTED_MODULE_3__/* .UITextArea */ .GJ(editor, {
                    name: 'code',
                    required: true,
                    label: 'Embed code'
                })
            ]),
            new jodit_core_ui_form__WEBPACK_IMPORTED_MODULE_3__/* .UIBlock */ .eC(editor, [
                (0,jodit_core_ui_button__WEBPACK_IMPORTED_MODULE_4__/* .Button */ .zx)(editor, '', 'Insert', 'primary').onAction(() => formCode.submit())
            ])
        ]), tabs = [], insertCode = (code) => {
            editor.s.restore();
            editor.s.insertHTML(code);
            close();
        };
        editor.s.save();
        tabs.push({
            icon: 'link',
            name: 'Link',
            content: formLink.container
        }, {
            icon: 'source',
            name: 'Code',
            content: formCode.container
        });
        formLink.onSubmit(data => {
            insertCode((0,jodit_core_helpers__WEBPACK_IMPORTED_MODULE_2__.convertMediaUrlToVideoEmbed)(data.url));
        });
        formCode.onSubmit(data => {
            insertCode(data.code);
        });
        return (0,jodit_modules_widget__WEBPACK_IMPORTED_MODULE_1__/* .TabsWidget */ .IL)(editor, tabs);
    },
    tags: ['iframe'],
    tooltip: 'Insert youtube/vimeo video'
};


/***/ }),

/***/ 79745:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jodit_core_global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(79102);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(84901);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


function video(editor) {
    editor.registerButton({
        name: 'video',
        group: 'media'
    });
}
jodit_core_global__WEBPACK_IMPORTED_MODULE_0__/* .pluginSystem */ .pw.add('video', video);


/***/ }),

/***/ 20874:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   angle_down: function() { return /* reexport default from dynamic */ _angle_down_svg__WEBPACK_IMPORTED_MODULE_0___default.a; },
/* harmony export */   angle_left: function() { return /* reexport default from dynamic */ _angle_left_svg__WEBPACK_IMPORTED_MODULE_1___default.a; },
/* harmony export */   angle_right: function() { return /* reexport default from dynamic */ _angle_right_svg__WEBPACK_IMPORTED_MODULE_2___default.a; },
/* harmony export */   angle_up: function() { return /* reexport default from dynamic */ _angle_up_svg__WEBPACK_IMPORTED_MODULE_3___default.a; },
/* harmony export */   bin: function() { return /* reexport default from dynamic */ _bin_svg__WEBPACK_IMPORTED_MODULE_4___default.a; },
/* harmony export */   cancel: function() { return /* reexport default from dynamic */ _cancel_svg__WEBPACK_IMPORTED_MODULE_5___default.a; },
/* harmony export */   center: function() { return /* reexport default from dynamic */ _center_svg__WEBPACK_IMPORTED_MODULE_6___default.a; },
/* harmony export */   check: function() { return /* reexport default from dynamic */ _check_svg__WEBPACK_IMPORTED_MODULE_7___default.a; },
/* harmony export */   chevron: function() { return /* reexport default from dynamic */ _chevron_svg__WEBPACK_IMPORTED_MODULE_8___default.a; },
/* harmony export */   dots: function() { return /* reexport default from dynamic */ _dots_svg__WEBPACK_IMPORTED_MODULE_9___default.a; },
/* harmony export */   eye: function() { return /* reexport default from dynamic */ _eye_svg__WEBPACK_IMPORTED_MODULE_10___default.a; },
/* harmony export */   file: function() { return /* reexport default from dynamic */ _file_svg__WEBPACK_IMPORTED_MODULE_11___default.a; },
/* harmony export */   folder: function() { return /* reexport default from dynamic */ _folder_svg__WEBPACK_IMPORTED_MODULE_12___default.a; },
/* harmony export */   info_circle: function() { return /* reexport default from dynamic */ _info_circle_svg__WEBPACK_IMPORTED_MODULE_13___default.a; },
/* harmony export */   left: function() { return /* reexport default from dynamic */ _left_svg__WEBPACK_IMPORTED_MODULE_14___default.a; },
/* harmony export */   lock: function() { return /* reexport default from dynamic */ _lock_svg__WEBPACK_IMPORTED_MODULE_15___default.a; },
/* harmony export */   ok: function() { return /* reexport default from dynamic */ _ok_svg__WEBPACK_IMPORTED_MODULE_16___default.a; },
/* harmony export */   pencil: function() { return /* reexport default from dynamic */ _pencil_svg__WEBPACK_IMPORTED_MODULE_17___default.a; },
/* harmony export */   plus: function() { return /* reexport default from dynamic */ _plus_svg__WEBPACK_IMPORTED_MODULE_18___default.a; },
/* harmony export */   resize_handler: function() { return /* reexport default from dynamic */ _resize_handler_svg__WEBPACK_IMPORTED_MODULE_19___default.a; },
/* harmony export */   right: function() { return /* reexport default from dynamic */ _right_svg__WEBPACK_IMPORTED_MODULE_20___default.a; },
/* harmony export */   save: function() { return /* reexport default from dynamic */ _save_svg__WEBPACK_IMPORTED_MODULE_21___default.a; },
/* harmony export */   settings: function() { return /* reexport default from dynamic */ _settings_svg__WEBPACK_IMPORTED_MODULE_22___default.a; },
/* harmony export */   unlock: function() { return /* reexport default from dynamic */ _unlock_svg__WEBPACK_IMPORTED_MODULE_23___default.a; },
/* harmony export */   update: function() { return /* reexport default from dynamic */ _update_svg__WEBPACK_IMPORTED_MODULE_24___default.a; },
/* harmony export */   upload: function() { return /* reexport default from dynamic */ _upload_svg__WEBPACK_IMPORTED_MODULE_25___default.a; },
/* harmony export */   valign: function() { return /* reexport default from dynamic */ _valign_svg__WEBPACK_IMPORTED_MODULE_26___default.a; }
/* harmony export */ });
/* harmony import */ var _angle_down_svg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(39123);
/* harmony import */ var _angle_down_svg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_angle_down_svg__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _angle_left_svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76331);
/* harmony import */ var _angle_left_svg__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_angle_left_svg__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angle_right_svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(52326);
/* harmony import */ var _angle_right_svg__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_angle_right_svg__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _angle_up_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(23689);
/* harmony import */ var _angle_up_svg__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_angle_up_svg__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _bin_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(99017);
/* harmony import */ var _bin_svg__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_bin_svg__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _cancel_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(271);
/* harmony import */ var _cancel_svg__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_cancel_svg__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _center_svg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(25570);
/* harmony import */ var _center_svg__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_center_svg__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _check_svg__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(20865);
/* harmony import */ var _check_svg__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_check_svg__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _chevron_svg__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(29777);
/* harmony import */ var _chevron_svg__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_chevron_svg__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _dots_svg__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(49220);
/* harmony import */ var _dots_svg__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_dots_svg__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _eye_svg__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(32336);
/* harmony import */ var _eye_svg__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_eye_svg__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _file_svg__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(23384);
/* harmony import */ var _file_svg__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_file_svg__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _folder_svg__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(85588);
/* harmony import */ var _folder_svg__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_folder_svg__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _info_circle_svg__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(76962);
/* harmony import */ var _info_circle_svg__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_info_circle_svg__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var _left_svg__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(52614);
/* harmony import */ var _left_svg__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_left_svg__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var _lock_svg__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(78808);
/* harmony import */ var _lock_svg__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_lock_svg__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var _ok_svg__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(36553);
/* harmony import */ var _ok_svg__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_ok_svg__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var _pencil_svg__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(48103);
/* harmony import */ var _pencil_svg__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(_pencil_svg__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var _plus_svg__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(4434);
/* harmony import */ var _plus_svg__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(_plus_svg__WEBPACK_IMPORTED_MODULE_18__);
/* harmony import */ var _resize_handler_svg__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(55810);
/* harmony import */ var _resize_handler_svg__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(_resize_handler_svg__WEBPACK_IMPORTED_MODULE_19__);
/* harmony import */ var _right_svg__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(18375);
/* harmony import */ var _right_svg__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(_right_svg__WEBPACK_IMPORTED_MODULE_20__);
/* harmony import */ var _save_svg__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(60300);
/* harmony import */ var _save_svg__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(_save_svg__WEBPACK_IMPORTED_MODULE_21__);
/* harmony import */ var _settings_svg__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(71287);
/* harmony import */ var _settings_svg__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(_settings_svg__WEBPACK_IMPORTED_MODULE_22__);
/* harmony import */ var _unlock_svg__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(39428);
/* harmony import */ var _unlock_svg__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(_unlock_svg__WEBPACK_IMPORTED_MODULE_23__);
/* harmony import */ var _update_svg__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(92472);
/* harmony import */ var _update_svg__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(_update_svg__WEBPACK_IMPORTED_MODULE_24__);
/* harmony import */ var _upload_svg__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(60828);
/* harmony import */ var _upload_svg__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(_upload_svg__WEBPACK_IMPORTED_MODULE_25__);
/* harmony import */ var _valign_svg__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(86354);
/* harmony import */ var _valign_svg__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(_valign_svg__WEBPACK_IMPORTED_MODULE_26__);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * [[include:styles/icons/README.md]]
 * @packageDocumentation
 * @module icons
 */






























/***/ }),

/***/ 81958:
/***/ (function(module) {

module.exports["default"] = ["Napiš něco","O Jodit","Editor Jodit","Jodit Uživatelská příručka","obsahuje detailní nápovědu","Pro informace o licenci, prosím, přejděte na naši stránku:","Koupit plnou verzi","Copyright © XDSoft.net - Chupurnov Valeriy. Všechna práva vyhrazena.","Anchor","Otevřít v nové záložce","Otevřít v celoobrazovkovém režimu","Vyčistit formátování","Barva výplně a písma","Vpřed","Zpět","Tučné","Kurzíva","Odrážky","Číslovaný seznam","Zarovnat na střed","Zarovnat do bloku","Zarovnat vlevo","Zarovnat vpravo","Vložit horizontální linku","Vložit obrázek","Vložit soubor","Vložit video (YT/Vimeo)","Vložit odkaz","Velikost písma","Typ písma","Formátovat blok","Normální text","Nadpis 1","Nadpis 2","Nadpis 3","Nadpis 4","Citát","Kód","Vložit","Vložit tabulku","Zmenšit odsazení","Zvětšit odsazení","Vybrat speciální symbol","Vložit speciální symbol","Použít formát","Změnit mód","Okraje","horní","pravý","spodní","levý","Styly","Třídy","Zarovnání","Vpravo","Na střed","Vlevo","--nenastaveno--","src","Titulek","Alternativní text (alt)","Link","Otevřít link v nové záložce","Obrázek","soubor","Rozšířené","Vlastnosti obrázku","Zpět","Ok","Prohlížeč souborů","Chyba při načítání seznamu souborů","Chyba při načítání složek","Jste si jistý(á)?","Název složky","Vytvořit složku","název","Přetáhněte sem obrázek","Přetáhněte sem soubor","nebo klikněte","Alternativní text","Nahrát","Server","Pozadí","Text","Nahoru","Na střed","Dolu","Vložit sloupec před","Vložit sloupec za","Vložit řádek nad","Vložit řádek pod","Vymazat tabulku","Vymazat řádku","Vymazat sloupec","Vyčistit buňku","Znaky: %d","Slova: %d","Přeškrtnuto","Podtrženo","Horní index","Dolní index","Vyjmout označené","Označit vše","Zalomení","Najdi","Nahradit za","Vyměňte","Vložit","Vyber obsah pro vložení","HTML","tučně","kurzíva","štětec","odkaz","zpět","vpřed","tabulka","obrázek","guma","odstavec","velikost písma","video","písmo","о editoru","tisk","podtrženo","přeškrtnuto","zvětšit odsazení","zmenšit odsazení","celoobrazovkový režim","smrsknout","Linka","Odrážka","Číslovaný seznam","Vyjmout","Označit vše","Kód","Otevřít odkaz","Upravit odkaz","Atribut no-follow","Odstranit odkaz","Aktualizovat","Chcete-li upravit","Zobrazit","URL","Editovat","Horizontální zarovnání","Filtr","Dle poslední změny","Dle názvu","Dle velikosti","Přidat složku","Reset","Uložit","Uložit jako...","Změnit rozměr","Ořezat","Šířka","Výška","Ponechat poměr","Ano","Ne","Vyjmout","Označit","Označit %s","Vertikální zarovnání","Rozdělit","Spojit","Přidat sloupec","Přidat řádek","Licence: %s","Vymazat","Rozdělit vertikálně","Rozdělit horizontálně","Okraj","Váš text se podobá HTML. Vložit ho jako HTML?","Vložit jako HTML","Ponechat originál","Vložit jako TEXT","Vložit pouze TEXT","Můžete upravovat pouze své obrázky. Načíst obrázek?","Obrázek byl úspěšně nahrán!","paleta","V tomto adresáři nejsou žádné soubory.","přejmenovat","Zadejte nový název","náhled","Stažení","Vložit ze schránky","Váš prohlížeč nepodporuje přímý přístup do schránky.","Kopírovat výběr","kopírování","Border radius","Zobrazit všechny","Platí","Prosím, vyplňte toto pole","Prosím, zadejte webovou adresu","Výchozí","Kruh","Dot","Quadrate","Najít","Najít Předchozí","Najít Další","Obsah, který vkládáte, je pravděpodobně z Microsoft Word / Excel. Chcete ponechat formát nebo vložit pouze text?","Detekován fragment z Wordu nebo Excelu","Vyčistit","Vložte název třídy","Stiskněte Alt pro vlastní změnu velikosti"]

/***/ }),

/***/ 77143:
/***/ (function(module) {

module.exports["default"] = ["Bitte geben Sie einen Text ein","Über Jodit","Jodit Editor","Das Jodit Benutzerhandbuch","beinhaltet ausführliche Informationen wie Sie den Editor verwenden können.","Für Informationen zur Lizenz, besuchen Sie bitte unsere Web-Präsenz:","Vollversion kaufen","Copyright © XDSoft.net - Chupurnov Valeriy. Alle Rechte vorbehalten.","Anker","In neuer Registerkarte öffnen","Editor in voller Größe öffnen","Formatierung löschen","Füllfarbe oder Textfarbe ändern","Wiederholen","Rückgängig machen","Fett","Kursiv","Unsortierte Liste einfügen","Nummerierte Liste einfügen","Mittig ausrichten","Blocksatz","Links ausrichten","Rechts ausrichten","Horizontale Linie einfügen","Bild einfügen","Datei einfügen","Youtube/vimeo Video einfügen","Link einfügen","Schriftgröße","Schriftfamilie","Formatblock einfügen","Normal","Überschrift 1","Überschrift 2","Überschrift 3","Überschrift 4","Zitat","Code","Einfügen","Tabelle einfügen","Einzug verkleinern","Einzug vergrößern","Sonderzeichen auswählen","Sonderzeichen einfügen","Format kopieren","Änderungsmodus","Ränder","Oben","Rechts","Unten","Links","CSS Stil","CSS Klassen","Ausrichtung","Rechts","Zentriert","Links","Keine","Pfad","Titel","Alternativer Text","Link","Link in neuem Tab öffnen","Bild","Datei","Fortgeschritten","Bildeigenschaften","Abbrechen","OK","Dateibrowser","Fehler beim Laden der Liste","Fehler beim Laden der Ordner","Sind Sie sicher?","Geben Sie den Verzeichnisnamen ein","Verzeichnis erstellen","Typname","Bild hier hinziehen","Datei löschen","oder hier klicken","Alternativtext","Hochladen","Auswählen","Hintergrund","Text","Oben","Mittig","Unten","Spalte davor einfügen","Spalte danach einfügen","Zeile oberhalb einfügen","Zeile unterhalb einfügen","Tabelle löschen","Zeile löschen","Spalte löschen","Zelle leeren","Zeichen: %d","Wörter: %d","Durchstreichen","Unterstreichen","Hochstellen","Tiefstellen","Auswahl ausschneiden","Alles markieren","Pause","Suche nach","Ersetzen durch","Ersetzen","Einfügen","Wählen Sie den Inhalt zum Einfügen aus","HTML","Fett gedruckt","Kursiv","Bürste","Verknüpfung","Rückgängig machen","Wiederholen","Tabelle","Bild","Radiergummi","Absatz","Schriftgröße","Video","Schriftart","Über","Drucken","Unterstreichen","Durchstreichen","Einzug","Herausstellen","Vollgröße","Schrumpfen","die Linie","Liste von","Nummerierte Liste","Schneiden","Wählen Sie Alle aus","Code einbetten","Link öffnen","Link bearbeiten","Nofollow-Attribut","Link entfernen","Aktualisieren","Bearbeiten","Ansehen","URL","Bearbeiten","Horizontale Ausrichtung","Filter","Sortieren nach geändert","Nach Name sortieren","Nach Größe sortiert","Ordner hinzufügen","Wiederherstellen","Speichern","Speichern als","Größe ändern","Größe anpassen","Breite","Höhe","Seitenverhältnis beibehalten","Ja","Nein","Entfernen","Markieren","Markieren: %s","Vertikale Ausrichtung","Unterteilen","Vereinen","Spalte hinzufügen","Zeile hinzufügen",null,"Löschen","Vertikal unterteilen","Horizontal unterteilen","Rand","Ihr Text ähnelt HTML-Code. Als HTML beibehalten?","Als HTML einfügen?","Original speichern","Als Text einfügen","Nur Text einfügen","Sie können nur Ihre eigenen Bilder bearbeiten. Dieses Bild auf den Host herunterladen?","Das Bild wurde erfolgreich auf den Server hochgeladen!","Palette","In diesem Verzeichnis befinden sich keine Dateien.","Umbenennen","Geben Sie einen neuen Namen ein","Vorschau","Herunterladen","Aus Zwischenablage einfügen","Ihr Browser unterstützt keinen direkten Zugriff auf die Zwischenablage.","Auswahl kopieren","Kopieren","Radius für abgerundete Ecken","Alle anzeigen","Anwenden","Bitte füllen Sie dieses Feld aus","Bitte geben Sie eine Web-Adresse ein","Standard","Kreis","Punkte","Quadrate","Suchen","Suche vorherige","Weitersuchen","Der Inhalt, den Sie einfügen, stammt aus einem Microsoft Word / Excel-Dokument. Möchten Sie das Format erhalten oder bereinigen?","In Word formatierter Text erkannt","Säubern","className (CSS) einfügen","Drücken Sie Alt für benutzerdefinierte Größenanpassung"]

/***/ }),

/***/ 90544:
/***/ (function(module) {

module.exports["default"] = {"Type something":"Start writing...","pencil":"Edit","Quadrate":"Square"}

/***/ }),

/***/ 88347:
/***/ (function(module) {

module.exports["default"] = ["Escriba algo...","Acerca de Jodit","Jodit Editor","Guía de usuario Jodit","contiene ayuda detallada para el uso.","Para información sobre la licencia, por favor visite nuestro sitio:","Compre la versión completa","Copyright © XDSoft.net - Chupurnov Valeriy. Todos los derechos reservados.","Anclar","Abrir en nueva pestaña","Abrir editor en pantalla completa","Limpiar formato","Color de relleno o de letra","Rehacer","Deshacer","Negrita","Cursiva","Insertar lista no ordenada","Insertar lista ordenada","Alinear Centrado","Alinear Justificado","Alinear Izquierda","Alinear Derecha","Insertar línea horizontal","Insertar imagen","Insertar archivo","Insertar video de Youtube/vimeo","Insertar vínculo","Tamaño de letra","Familia de letra","Insertar bloque","Normal","Encabezado 1","Encabezado 2","Encabezado 3","Encabezado 4","Cita","Código","Insertar","Insertar tabla","Disminuir sangría","Aumentar sangría","Seleccionar caracter especial","Insertar caracter especial","Copiar formato","Cambiar modo","Márgenes","arriba","derecha","abajo","izquierda","Estilos CSS","Clases CSS","Alinear","Derecha","Centrado","Izquierda","--No Establecido--","Fuente","Título","Texto Alternativo","Vínculo","Abrir vínculo en nueva pestaña","Imagen","Archivo","Avanzado","Propiedades de imagen","Cancelar","Aceptar","Buscar archivo","Error al cargar la lista","Error al cargar las carpetas","¿Está seguro?","Entre nombre de carpeta","Crear carpeta","Entre el nombre","Soltar imagen","Soltar archivo","o click","Texto alternativo","Subir","Buscar","Fondo","Texto","Arriba","Centro","Abajo","Insertar columna antes","Interar columna después","Insertar fila arriba","Insertar fila debajo","Borrar tabla","Borrar fila","Borrar columna","Vaciar celda","Caracteres: %d","Palabras: %d","Tachado","Subrayado","superíndice","subíndice","Cortar selección","Seleccionar todo","Pausa","Buscar","Reemplazar con","Reemplazar","Pegar","Seleccionar contenido para pegar","HTML","negrita","cursiva","Brocha","Vínculo","deshacer","rehacer","Tabla","Imagen","Borrar","Párrafo","Tamaño de letra","Video","Letra","Acerca de","Imprimir","subrayar","tachar","sangría","quitar sangría","Tamaño completo","encoger","línea horizontal","lista sin ordenar","lista ordenada","Cortar","Seleccionar todo","Incluir código","Abrir vínculo","Editar vínculo","No seguir","Desvincular","Actualizar","Para editar","Ver","URL","Editar","Alineación horizontal","Filtrar","Ordenar por fecha modificación","Ordenar por nombre","Ordenar por tamaño","Agregar carpeta","Resetear","Guardar","Guardar como...","Redimensionar","Recortar","Ancho","Alto","Mantener relación de aspecto","Si","No","Quitar","Seleccionar","Seleccionar: %s","Alineación vertical","Dividir","Mezclar","Agregar columna","Agregar fila",null,"Borrar","Dividir vertical","Dividir horizontal","Borde","El código es similar a HTML. ¿Mantener como HTML?","Pegar como HTML?","Mantener","Insertar como texto","Insertar solo texto","Solo puedes editar tus propias imágenes. ¿Descargar esta imagen en el servidor?","¡La imagen se ha subido correctamente al servidor!","paleta","No hay archivos en este directorio.","renombrar","Ingresa un nuevo nombre","avance","Descargar","Pegar desde el portapapeles","Su navegador no soporta el acceso directo en el portapapeles.","Selección de copia","copia","Radio frontera","Mostrar todos los","Aplicar","Por favor, rellene este campo","Por favor, introduzca una dirección web","Predeterminado","Círculo","Punto","Cuadro","Encontrar","Buscar Anterior","Buscar Siguiente","El contenido pegado proviene de un documento de Microsoft Word/Excel. ¿Desea mantener el formato o limpiarlo?","Pegado desde Word detectado","Limpiar","Insertar nombre de clase","Presione Alt para cambiar el tamaño personalizado"]

/***/ }),

/***/ 12414:
/***/ (function(module) {

module.exports["default"] = ["Ecrivez ici","A propos de Jodit","Editeur Jodit","Guide de l'utilisateur","Aide détaillée à l'utilisation","Consulter la licence sur notre site web:","Acheter la version complète","Copyright © XDSoft.net - Chupurnov Valeriy. Tous droits réservés.","Ancre","Ouvrir dans un nouvel onglet","Ouvrir l'éditeur en pleine page","Supprimer le formattage","Modifier la couleur du fond ou du texte","Refaire","Défaire","Gras","Italique","Liste non ordonnée","Liste ordonnée","Centrer","Justifier","Aligner à gauche ","Aligner à droite","Insérer une ligne horizontale","Insérer une image","Insérer un fichier","Insérer une vidéo","Insérer un lien","Taille des caractères","Famille des caractères","Bloc formatté","Normal","Titre 1","Titre 2","Titre 3","Titre 4","Citation","Code","Insérer","Insérer un tableau","Diminuer le retrait","Retrait plus","Sélectionnez un caractère spécial","Insérer un caractère spécial","Cloner le format","Mode wysiwyg <-> code html","Marges","haut","droite","Bas","gauche","Styles","Classes","Alignement","Droite","Centre","Gauche","--Non disponible--","Source","Titre","Alternative","Lien","Ouvrir le lien dans un nouvel onglet","Image","fichier","Avancé","Propriétés de l'image","Annuler","OK","Explorateur de fichiers","Erreur de liste de chargement","Erreur de dossier de chargement","Etes-vous sûrs ?","Entrer le nom de dossier","Créer un dossier","type de fichier","Coller une image","Déposer un fichier","ou cliquer","Texte de remplacemement","Charger","Chercher","Arrière-plan","Texte","Haut","Milieu","Bas","Insérer une colonne avant","Insérer une colonne après","Insérer une ligne au dessus","Insérer une ligne en dessous","Supprimer le tableau","Supprimer la ligne","Supprimer la colonne","Vider la cellule","Symboles: %d","Mots: %d","Barrer","Souligner","exposant","indice","Couper la sélection","Tout sélectionner","Pause","Rechercher","Remplacer par","Remplacer","Coller","Choisissez le contenu à coller","la source","gras","italique","pinceau","lien","annuler","refaire","tableau","image","gomme","clause","taille de police","Video","police","à propos de l'éditeur","impression","souligné","barré","indentation","retrait","taille réelle","taille conventionnelle","la ligne","Liste","Liste numérotée","Couper","Sélectionner tout",null,"Ouvrir le lien","Modifier le lien","Attribut Nofollow","Supprimer le lien","Mettre à jour","Pour éditer","Voir","URL",null,"Alignement horizontal","Filtre","Trier par modification","Trier par nom","Trier par taille","Créer le dossier","Restaurer","Sauvegarder","Enregistrer sous","Changer la taille","Taille de garniture","Largeur","Hauteur","Garder les proportions","Oui","Non","Supprimer","Mettre en évidence","Mettre en évidence: %s","Alignement vertical","Split","aller","Ajouter une colonne","Ajouter une rangée",null,"Effacer","Split vertical","Split horizontal","Bordure","Votre texte que vous essayez de coller est similaire au HTML. Collez-le en HTML?","Coller en HTML?","Sauvegarder l'original","Coller en tant que texte","Coller le texte seulement","Vous ne pouvez éditer que vos propres images. Téléchargez cette image sur l'hôte?","L'image a été téléchargée avec succès sur le serveur!","Palette","Il n'y a aucun fichier dans ce répertoire.","renommer","Entrez un nouveau nom","Aperçu","Télécharger","Coller à partir du presse-papiers","Votre navigateur ne prend pas en charge l'accès direct au presse-papiers.","Copier la sélection","copie","Rayon des bordures","Afficher tous","Appliquer","Veuillez remplir ce champ","Veuillez entrer une adresse web","Par défaut","Cercle","Point","Quadratique","Trouver","Précédent","Suivant","Le contenu que vous insérez provient d'un document Microsoft Word / Excel. Voulez-vous enregistrer le format ou l'effacer?","C'est peut-être un fragment de Word ou Excel","Nettoyer","Insérer un nom de classe","Appuyez sur Alt pour un redimensionnement personnalisé"]

/***/ }),

/***/ 23664:
/***/ (function(module) {

module.exports["default"] = ["Írjon be valamit","Joditról","Jodit Editor","Jodit útmutató","további segítséget tartalmaz","További licence információkért látogassa meg a weboldalunkat:","Teljes verzió megvásárlása","Copyright © XDSoft.net - Chupurnov Valeriy. Minden jog fenntartva.","Horgony","Megnyitás új lapon","Megnyitás teljes méretben","Formázás törlése","Háttér/szöveg szín","Újra","Visszavon","Félkövér","Dőlt","Pontozott lista","Számozott lista","Középre zárt","Sorkizárt","Balra zárt","Jobbra zárt","Vízszintes vonal beszúrása","Kép beszúrás","Fájl beszúrás","Youtube videó beszúrása","Link beszúrás","Betűméret","Betűtípus","Formázott blokk beszúrása","Normál","Fejléc 1","Fejléc 2","Fejléc 3","Fejléc 4","Idézet","Kód","Beszúr","Táblázat beszúrása","Behúzás csökkentése","Behúzás növelése","Speciális karakter kiválasztása","Speciális karakter beszúrása","Kép formázása","Nézet váltása","Szegélyek","felső","jobb","alsó","bal","CSS stílusok","CSS osztályok","Igazítás","Jobbra","Középre","Balra","Nincs","Forrás","Cím","Helyettesítő szöveg","Link","Link megnyitása új lapon","Kép","Fájl","Haladó","Kép tulajdonságai","Mégsem","OK","Fájl tallózó","Hiba a lista betöltése közben","Hiba a mappák betöltése közben","Biztosan ezt szeretné?","Írjon be egy mappanevet","Mappa létrehozása","írjon be bevet","Húzza ide a képet","Húzza ide a fájlt","vagy kattintson","Helyettesítő szöveg","Feltölt","Tallóz","Háttér","Szöveg","Fent","Középen","Lent","Oszlop beszúrás elé","Oszlop beszúrás utána","Sor beszúrás fölé","Sor beszúrás alá","Táblázat törlése","Sor törlése","Oszlop törlése","Cella tartalmának törlése","Karakterek száma: %d","Szavak száma: %d","Áthúzott","Aláhúzott","Felső index","Alsó index","Kivágás","Összes kijelölése","Szünet","Keresés","Csere erre","Cserélje ki","Beillesztés","Válasszon tartalmat a beillesztéshez","HTML","Félkövér","Dőlt","Ecset","Link","Visszavon","Újra","Táblázat","Kép","Törlés","Paragráfus","Betűméret","Videó","Betű","Rólunk","Nyomtat","Aláhúzott","Áthúzott","Behúzás","Aussenseiter","Teljes méret","Összenyom","Egyenes vonal","Lista","Számozott lista","Kivág","Összes kijelölése","Beágyazott kód","Link megnyitása","Link szerkesztése","Nincs követés","Link leválasztása","Frissít","Szerkesztés","felülvizsgálat","URL","Szerkeszt","Vízszintes igazítás","Szűrő","Rendezés módosítás szerint","Rendezés név szerint","Rendezés méret szerint","Mappa hozzáadás","Visszaállít","Mentés","Mentés másként...","Átméretezés","Kivág","Szélesség","Magasság","Képarány megtartása","Igen","Nem","Eltávolít","Kijelöl","Kijelöl: %s","Függőleges igazítás","Felosztás","Összevonás","Oszlop hozzáadás","Sor hozzáadás",null,"Törlés","Függőleges felosztás","Vízszintes felosztás","Szegély","A beillesztett szöveg HTML-nek tűnik. Megtartsuk HTML-ként?","Beszúrás HTML-ként","Megtartás","Beszúrás szövegként","Csak szöveg beillesztése","Csak a saját képeit tudja szerkeszteni. Letölti ezt a képet?","Kép sikeresen feltöltve!","Palette","Er zijn geen bestanden in deze map.","átnevezés","Adja meg az új nevet","előnézet","Letöltés","Illessze be a vágólap","A böngésző nem támogatja a közvetlen hozzáférést biztosít a vágólapra.","Másolás kiválasztása","másolás","Határ sugár","Összes","Alkalmazni","Kérjük, töltse ki ezt a mezőt,","Kérjük, írja be a webcímet","Alapértelmezett","Kör","Pont","Quadrate","Találni","Megtalálja Előző","Következő Keresése","A beillesztett tartalom Microsoft Word/Excel dokumentumból származik. Meg szeretné tartani a formátumát?","Word-ből másolt szöveg","Elvetés","Helyezze be az osztály nevét","Nyomja meg az Alt egyéni átméretezés"]

/***/ }),

/***/ 94174:
/***/ (function(module) {

module.exports["default"] = ["Scrivi qualcosa...","A proposito di Jodit","Jodit Editor","Guida utente di Jodit","contiene una guida dettagliata per l'uso.","Per informazioni sulla licenza, si prega di visitare il nostro sito web:","Acquista la versione completa","Copyright © XDSoft.net - Chupurnov Valeriy. Tutti i diritti riservati.","Link","Apri in una nuova scheda","Apri l'editor a schermo intero","Pulisci Formattazione","Colore di sfondo o del testo","Ripristina","Annulla","Grassetto","Corsivo","Inserisci lista non ordinata","Inserisci lista ordinata","Allinea al centro","Allineamento Giustificato","Allinea a Sinistra","Allinea a Destra","Inserisci una linea orizzontale","Inserisci immagine","Inserisci un file","Inserisci video Youtube/Vimeo","Inserisci link","Dimensione carattere","Tipo di font","Inserisci blocco","Normale","Intestazione 1","Intestazione 2","Intestazione 3","Intestazione 4","Citazione","Codice","Inserisci","Inserisci tabella","Riduci il rientro","Aumenta il rientro","Seleziona un carattere speciale","Inserisci un carattere speciale","Copia formato","Cambia modalita'","Margini","su","destra","giù","sinistra","Stili CSS","Classi CSS","Allinea","Destra","Centro","Sinistra","--Non Impostato--","Fonte","Titolo","Testo Alternativo","Link","Apri il link in una nuova scheda","Immagine","Archivio","Avanzato","Proprietà dell'immagine","Annulla","Accetta","Cerca file","Errore durante il caricamento dell'elenco","Errore durante il caricamento delle cartelle","Sei sicuro?","Inserisci il nome della cartella","Crea cartella","Digita il nome","Cancella immagine","Cancella file","o clicca","Testo alternativo","Carica","Sfoglia","Sfondo","Testo","Su","Centro","Sotto","Inserisci la colonna prima","Inserisci la colonna dopo","Inserisci la riga sopra","Inserisci la riga sotto","Elimina tabella","Elimina riga","Elimina colonna","Cella vuota","Caratteri: %d","Parole: %d","Barrato","Sottolineato","indice","pedice","Taglia selezione","Seleziona tutto","Pausa","Cerca per","Sostituisci con","Sostituisci","Incolla","Seleziona il contenuto da incollare","risorsa","Grassetto","Corsivo","Pennello","Link","Annulla","Ripristina","Tabella","Immagine","Gomma","Paragrafo","Dimensione del carattere","Video","Font","Approposito di","Stampa","Sottolineato","Barrato","aumenta rientro","riduci rientro","espandi","comprimi","linea orizzontale","lista non ordinata","lista ordinata","Taglia","Seleziona tutto","Includi codice","Apri link","Modifica link","Non seguire","Rimuovi link","Aggiorna","Per modificare","Recensione"," URL","Modifica","Allineamento orizzontale","Filtro","Ordina per data di modifica","Ordina per nome","Ordina per dimensione","Aggiungi cartella","Reset","Salva","Salva con nome...","Ridimensiona","Ritaglia","Larghezza","Altezza","Mantieni le proporzioni","Si","No","Rimuovi","Seleziona","Seleziona: %s","Allineamento verticala","Dividi","Fondi","Aggiungi colonna","Aggiungi riga",null,"Cancella","Dividi verticalmente","Dividi orizzontale","Bordo","Il codice è simile all'HTML. Mantieni come HTML?","Incolla come HTML","Mantieni","Inserisci come testo","Inserisci solo il testo","Puoi modificare solo le tue immagini. Vuoi scaricare questa immagine dal server?","L'immagine è stata caricata correttamente sul server!","tavolozza","Non ci sono file in questa directory.","Rinomina","Inserisci un nuovo nome","anteprima","Scarica","Incolla dagli appunti","Il tuo browser non supporta l'accesso diretto agli appunti.","Copia selezione","copia","Border radius","Mostra tutti","Applica","Si prega di compilare questo campo","Si prega di inserire un indirizzo web","Default","Cerchio","Punto","Quadrato","Trova","Trova Precedente","Trova Successivo","Il contenuto incollato proviene da un documento Microsoft Word / Excel. Vuoi mantenere il formato o pulirlo?","Incolla testo da Word rilevato","Pulisci","Inserisci il nome della classe","Premere Alt per il ridimensionamento personalizzato"]

/***/ }),

/***/ 39356:
/***/ (function(module) {

module.exports["default"] = ["なにかタイプしてください","Joditについて","Jodit Editor","Jodit ユーザーズ・ガイド","詳しい使い方","ライセンス詳細についてはJodit Webサイトを確認ください：","フルバージョンを購入","Copyright © XDSoft.net - Chupurnov Valeriy. All rights reserved.","Anchor","新しいタブで開く","エディターのサイズ（フル/ノーマル）","書式をクリア","テキストの色","やり直し","元に戻す","太字","斜体","箇条書き","番号付きリスト","中央揃え","両端揃え","左揃え","右揃え","区切り線を挿入","画像を挿入","ファイルを挿入","Youtube/Vimeo 動画","リンクを挿入","フォントサイズ","フォント","テキストのスタイル","指定なし","タイトル1","タイトル2","タイトル3","タイトル4","引用","コード","挿入","表を挿入","インデント減","インデント増","特殊文字を選択","特殊文字を挿入","書式を貼付け","編集モード切替え","マージン","上","右","下","左","スタイル","クラス","配置","右寄せ","中央寄せ","左寄せ","指定なし","ソース","タイトル","代替テキスト","リンク","新しいタブで開く","画像","ファイル","高度な設定","画像のプロパティー","キャンセル","確定","File Browser","Error on load list","Error on load folders","Are you sure?","Enter Directory name","Create directory","type name","ここに画像をドロップ","ここにファイルをドロップ","or クリック","代替テキスト","アップロード","ブラウズ","背景","文字","上","中央","下","左に列を挿入","右に列を挿入","上に行を挿入","下に行を挿入","表を削除","行を削除","列を削除","セルを空にする","文字数: %d","単語数: %d","取り消し線","下線","上付き文字","下付き文字","切り取り","すべて選択","Pause","検索","置換","交換","貼付け","選択した内容を貼付け","source","bold","italic","brush","link","undo","redo","table","image","eraser","paragraph","fontsize","video","font","about","print","underline","strikethrough","indent","outdent","fullsize","shrink","分割線","箇条書き","番号付きリスト","切り取り","すべて選択","埋め込みコード","リンクを開く","リンクを編集","No follow","リンク解除","更新","鉛筆","サイトを確認","URL","編集","水平方向の配置","Filter","Sort by changed","Sort by name","Sort by size","Add folder","リセット","保存","Save as ...","リサイズ","Crop","幅","高さ","縦横比を保持","はい","いいえ","移除","選択","選択: %s","垂直方向の配置","分割","セルの結合","列を追加","行を追加",null,"削除","セルの分割（垂直方向）","セルの分割（水平方向）","境界線","HTMLコードを保持しますか？","HTMLで貼付け","HTMLを保持","HTMLをテキストにする","テキストだけ","You can only edit your own images. Download this image on the host?","The image has been successfully uploaded to the host!","パレット","There are no files","Rename","Enter new name","プレビュー","ダウンロード","貼り付け","お使いのブラウザはクリップボードを使用できません","コピー","copy","角の丸み","全て表示","適用","まだこの分野","を入力してくださいウェブアドレス","デフォルト","白丸","黒丸","四角","見","探前","由来","The pasted content is coming from a Microsoft Word/Excel document. Do you want to keep the format or clean it up?","Word Paste Detected","Clean","クラス名を挿入","カスタムサイズ変更のためのAltキーを押します"]

/***/ }),

/***/ 75125:
/***/ (function(module) {

module.exports["default"] = ["Type something","About Jodit","Jodit Editor","Jodit User's Guide","contains detailed help for using","For information about the license, please go to our website:","Buy full version","Copyright © XDSoft.net - Chupurnov Valeriy. All rights reserved.","Anchor","Open in new tab","Open in fullsize","Clear Formatting","Fill color or set the text color","Redo","Undo","Bold","Italic","Insert Unordered List","Insert Ordered List","Align Center","Align Justify","Align Left","Align Right","Insert Horizontal Line","Insert Image","Insert file","Insert youtube/vimeo video","Insert link","Font size","Font family","Insert format block","Normal","Heading 1","Heading 2","Heading 3","Heading 4","Quote","Code","Insert","Insert table","Decrease Indent","Increase Indent","Select Special Character","Insert Special Character","Paint format","Change mode","Margins","top","right","bottom","left","Styles","Classes","Align","Right","Center","Left","--Not Set--","Src","Title","Alternative","Link","Open link in new tab","Image","file","Advanced","Image properties","Cancel","Ok","File Browser","Error on load list","Error on load folders","Are you sure?","Enter Directory name","Create directory","type name","Drop image","Drop file","or click","Alternative text","Upload","Browse","Background","Text","Top","Middle","Bottom","Insert column before","Insert column after","Insert row above","Insert row below","Delete table","Delete row","Delete column","Empty cell","Chars: %d","Words: %d","Strike through","Underline","superscript","subscript","Cut selection","Select all","Break","Search for","Replace with","Replace","Paste","Choose Content to Paste","source","bold","italic","brush","link","undo","redo","table","image","eraser","paragraph","fontsize","video","font","about","print","underline","strikethrough","indent","outdent","fullsize","shrink","hr","ul","ol","cut","selectall","Embed code","Open link","Edit link","No follow","Unlink","Update","pencil","Eye"," URL","Edit","Horizontal align","Filter","Sort by changed","Sort by name","Sort by size","Add folder","Reset","Save","Save as ...","Resize","Crop","Width","Height","Keep Aspect Ratio","Yes","No","Remove","Select","Select %s","Vertical align","Split","Merge","Add column","Add row","License: %s","Delete","Split vertical","Split horizontal","Border","Your code is similar to HTML. Keep as HTML?","Paste as HTML","Keep","Insert as Text","Insert only Text","You can only edit your own images. Download this image on the host?","The image has been successfully uploaded to the host!","palette","There are no files","Rename","Enter new name","preview","download","Paste from clipboard","Your browser doesn't support direct access to the clipboard.","Copy selection","copy","Border radius","Show all","Apply","Please fill out this field","Please enter a web address","Default","Circle","Dot","Quadrate","Find","Find Previous","Find Next","The pasted content is coming from a Microsoft Word/Excel document. Do you want to keep the format or clean it up?","Word Paste Detected","Clean","Insert className","Press Alt for custom resizing"]

/***/ }),

/***/ 66604:
/***/ (function(module) {

module.exports["default"] = ["Begin met typen..","Over Jodit","Jodit Editor","Jodit gebruikershandleiding","bevat gedetailleerde informatie voor gebruik.","Voor informatie over de licentie, ga naar onze website:","Volledige versie kopen","Copyright © XDSoft.net - Chupurnov Valeriy. Alle rechten voorbehouden.","Anker","Open in nieuwe tab","Editor in volledig scherm openen","Opmaak verwijderen","Vulkleur of tekstkleur aanpassen","Opnieuw","Ongedaan maken","Vet","Cursief","Geordende list invoegen","Ongeordende lijst invoegen","Centreren","Uitlijnen op volledige breedte","Links uitlijnen","Rechts uitlijnen","Horizontale lijn invoegen","Afbeelding invoegen","Bestand invoegen","Youtube/Vimeo video invoegen","Link toevoegen","Tekstgrootte","Lettertype","Format blok invoegen","Normaal","Koptekst 1","Koptekst 2","Koptekst 3","Koptekst 4","Citaat","Code","Invoegen","Tabel invoegen","Inspringing verkleinen","Inspringing vergroten","Symbool selecteren","Symbool invoegen","Opmaak kopieren","Modus veranderen","Marges","Boven","Rechts","Onder","Links","CSS styles","CSS classes","Uitlijning","Rechts","Gecentreerd","Links","--Leeg--","Src","Titel","Alternatieve tekst","Link","Link in nieuwe tab openen","Afbeelding","Bestand","Geavanceerd","Afbeeldingseigenschappen","Annuleren","OK","Bestandsbrowser","Fout bij het laden van de lijst","Fout bij het laden van de mappenlijst","Weet je het zeker?","Geef de map een naam","Map aanmaken","Type naam","Sleep hier een afbeelding naartoe","Sleep hier een bestand naartoe","of klik","Alternatieve tekst","Uploaden","Bladeren","Achtergrond","Tekst","Boven","Midden","Onder","Kolom invoegen (voor)","Kolom invoegen (na)","Rij invoegen (boven)","Rij invoegen (onder)","Tabel verwijderen","Rij verwijderen","Kolom verwijderen","Cel leegmaken","Tekens: %d","Woorden: %d","Doorstrepen","Onderstrepen","Superscript","Subscript","Selectie knippen","Selecteer alles","Enter","Zoek naar","Vervangen door","Vervangen","Plakken","Kies content om te plakken","Broncode","vet","cursief","kwast","link","ongedaan maken","opnieuw","tabel","afbeelding","gum","paragraaf","lettergrootte","video","lettertype","over","afdrukken","onderstreept","doorgestreept","inspringen","minder inspringen","volledige grootte","kleiner maken","horizontale lijn","lijst","genummerde lijst","knip","alles selecteren","Embed code","Link openen","Link aanpassen","Niet volgen","link verwijderen","Updaten","Om te bewerken","Recensie"," URL","Bewerken","Horizontaal uitlijnen","Filteren","Sorteren op wijzigingsdatum","Sorteren op naam","Sorteren op grootte","Map toevoegen","Herstellen","Opslaan","Opslaan als ...","Grootte aanpassen","Bijknippen","Breedte","Hoogte","Verhouding behouden","Ja","Nee","Verwijderen","Selecteren","Selecteer: %s","Verticaal uitlijnen","Splitsen","Samenvoegen","Kolom toevoegen","Rij toevoegen",null,"Verwijderen","Verticaal splitsen","Horizontaal splitsen","Rand","Deze code lijkt op HTML. Als HTML behouden?","Invoegen als HTML","Origineel behouden","Als tekst invoegen","Als onopgemaakte tekst invoegen","Je kunt alleen je eigen afbeeldingen aanpassen. Deze afbeelding downloaden?","De afbeelding is succesvol geüploadet!","Palette","Er zijn geen bestanden in deze map.","Hernoemen","Voer een nieuwe naam in","Voorvertoning","Download","Plakken van klembord","Uw browser ondersteunt geen directe toegang tot het klembord.","Selectie kopiëren","kopiëren","Border radius","Toon alle","Toepassen","Vul dit veld in","Voer een webadres in","Standaard","Cirkel","Punt","Kwadraat","Zoeken","Vorige Zoeken","Volgende Zoeken","De geplakte tekst is afkomstig van een Microsoft Word/Excel document. Wil je de opmaak behouden of opschonen?","Word-tekst gedetecteerd","Opschonen","Voeg de klassenaam in","Druk op Alt voor aangepaste grootte"]

/***/ }),

/***/ 79940:
/***/ (function(module) {

module.exports["default"] = ["Napisz coś","O Jodit","Edytor Jodit","Instrukcja Jodit","zawiera szczegółowe informacje dotyczące użytkowania.","Odwiedź naszą stronę, aby uzyskać więcej informacji na temat licencji:","Zakup pełnej wersji","Copyright © XDSoft.net - Chupurnov Valeriy. Wszystkie prawa zastrzeżone.","Kotwica","Otwórz w nowej zakładce","Otwórz edytor w pełnym rozmiarze","Wyczyść formatowanie","Kolor wypełnienia lub ustaw kolor tekstu","Ponów","Cofnij","Pogrubienie","Kursywa","Wstaw listę wypunktowaną","Wstaw listę numeryczną","Wyśrodkuj","Wyjustuj","Wyrównaj do lewej","Wyrównaj do prawej","Wstaw linię poziomą","Wstaw grafikę","Wstaw plik","Wstaw film Youtube/vimeo","Wstaw link","Rozmiar tekstu","Krój czcionki","Wstaw formatowanie","Normalne","Nagłówek 1","Nagłówek 2","Nagłówek 3","Nagłówek 4","Cytat","Kod","Wstaw","Wstaw tabelę","Zmniejsz wcięcie","Zwiększ wcięcie","Wybierz znak specjalny","Wstaw znak specjalny","Malarz formatów","Zmień tryb","Marginesy","Górny","Prawy","Dolny","Levy","Style CSS","Klasy CSS","Wyrównanie","Prawa","środek","Lewa","brak","Źródło","Tytuł","Tekst alternatywny","Link","Otwórz w nowej zakładce","Grafika","Plik","Zaawansowane","Właściwości grafiki","Anuluj","OK","Przeglądarka plików","Błąd ładowania listy plików","Błąd ładowania folderów","Czy jesteś pewien?","Wprowadź nazwę folderu","Utwórz folder","wprowadź nazwę","Upuść plik graficzny","Upuść plik","lub kliknij tu","Tekst alternatywny","Wczytaj","Przeglądaj","Tło","Treść","Góra","Środek","Dół","Wstaw kolumnę przed","Wstaw kolumnę po","Wstaw wiersz przed","Wstaw wiersz po","Usuń tabelę","Usuń wiersz","Usuń kolumnę","Wyczyść komórkę","Znaki: %d","Słowa: %d","Przekreślenie","Podkreślenie","indeks górny","index dolny","Wytnij zaznaczenie","Wybierz wszystko","Przerwa","Szukaj","Zamień na","Wymienić","Wklej","Wybierz zawartość do wklejenia","HTML","pogrubienie","kursywa","pędzel","link","cofnij","ponów","tabela","grafika","wyczyść","akapit","rozmiar czcionki","wideo","czcionka","O programie","drukuj","podkreślenie","przekreślenie","wcięcie","wycięcie","pełen rozmiar","przytnij","linia pozioma","lista","lista numerowana","wytnij","zaznacz wszystko","Wstaw kod","otwórz link","edytuj link","Atrybut no-follow","Usuń link","Aktualizuj","edytuj","szukaj","URL","Edytuj","Wyrównywanie w poziomie","Filtruj","Sortuj wg zmiany","Sortuj wg nazwy","Sortuj wg rozmiaru","Dodaj folder","wyczyść","zapisz","zapisz jako","Zmień rozmiar","Przytnij","Szerokość","Wysokość","Zachowaj proporcje","Tak","Nie","Usuń","Wybierz","Wybierz: %s","Wyrównywanie w pionie","Podziel","Scal","Dodaj kolumnę","Dodaj wiersz",null,"Usuń","Podziel w pionie","Podziel w poziomie","Obramowanie","Twój kod wygląda jak HTML. Zachować HTML?","Wkleić jako HTML?","Oryginalny tekst","Wstaw jako tekst","Wstaw tylko treść","Możesz edytować tylko swoje grafiki. Czy chcesz pobrać tą grafikę?","Grafika została pomyślnienie dodana na serwer","Paleta","Brak plików.","zmień nazwę","Wprowadź nową nazwę","podgląd","pobierz","Wklej ze schowka","Twoja przeglądarka nie obsługuje schowka","Kopiuj zaznaczenie","kopiuj","Zaokrąglenie krawędzi","Pokaż wszystkie","Zastosuj","Proszę wypełnić to pole","Proszę, wpisz adres sieci web","Domyślnie","Koło","Punkt","Kwadrat","Znaleźć","Znaleźć Poprzednie","Znajdź Dalej","Wklejany tekst pochodzi z dokumentu Microsoft Word/Excel. Chcesz zachować ten format czy wyczyścić go? ","Wykryto tekst w formacie Word","Wyczyść","Wstaw nazwę zajęć","Naciśnij Alt, aby zmienić rozmiar"]

/***/ }),

/***/ 6412:
/***/ (function(module) {

module.exports["default"] = ["Escreva algo...","Sobre o Jodit","Editor Jodit","Guia de usuário Jodit","contém ajuda detalhada para o uso.","Para informação sobre a licença, por favor visite nosso site:","Compre a versão completa","Copyright © XDSoft.net - Chupurnov Valeriy. Todos os direitos reservados.","Link","Abrir em nova aba","Abrir editor em tela cheia","Limpar formatação","Cor de preenchimento ou cor do texto","Refazer","Desfazer","Negrito","Itálico","Inserir lista não ordenada","Inserir lista ordenada","Centralizar","Justificar","Alinhar à Esquerda","Alinhar à Direita","Inserir linha horizontal","Inserir imagem","Inserir arquivo","Inserir vídeo do Youtube/vimeo","Inserir link","Tamanho da letra","Fonte","Inserir bloco","Normal","Cabeçalho 1","Cabeçalho 2","Cabeçalho 3","Cabeçalho 4","Citação","Código","Inserir","Inserir tabela","Diminuir recuo","Aumentar recuo","Selecionar caractere especial","Inserir caractere especial","Copiar formato","Mudar modo","Margens","cima","direta","baixo","esquerda","Estilos CSS","Classes CSS","Alinhamento","Direita","Centro","Esquerda","--Não Estabelecido--","Fonte","Título","Texto Alternativo","Link","Abrir link em nova aba","Imagem","Arquivo","Avançado","Propriedades da imagem","Cancelar","Ok","Procurar arquivo","Erro ao carregar a lista","Erro ao carregar as pastas","Você tem certeza?","Escreva o nome da pasta","Criar pasta","Escreva seu nome","Soltar imagem","Soltar arquivo","ou clique","Texto alternativo","Upload","Explorar","Fundo","Texto","Cima","Meio","Baixo","Inserir coluna antes","Inserir coluna depois","Inserir linha acima","Inserir linha abaixo","Excluir tabela","Excluir linha","Excluir coluna","Limpar célula","Caracteres: %d","Palavras: %d","Tachado","Sublinhar","sobrescrito","subscrito","Cortar seleção","Selecionar tudo","Pausa","Procurar por","Substituir com","Substituir","Colar","Escolher conteúdo para colar","HTML","negrito","itálico","pincel","link","desfazer","refazer","tabela","imagem","apagar","parágrafo","tamanho da letra","vídeo","fonte","Sobre de","Imprimir","sublinhar","tachado","recuar","diminuir recuo","Tamanho completo","diminuir","linha horizontal","lista não ordenada","lista ordenada","Cortar","Selecionar tudo","Incluir código","Abrir link","Editar link","Não siga","Remover link","Atualizar","Editar","Visualizar","URL","Editar","Alinhamento horizontal","filtrar","Ordenar por modificação","Ordenar por nome","Ordenar por tamanho","Adicionar pasta","Resetar","Salvar","Salvar como...","Redimensionar","Recortar","Largura","Altura","Manter a proporção","Sim","Não","Remover","Selecionar","Selecionar: %s","Alinhamento vertical","Dividir","Mesclar","Adicionar coluna","Adicionar linha",null,"Excluir","Dividir vertical","Dividir horizontal","Borda","Seu código é similar ao HTML. Manter como HTML?","Colar como HTML?","Manter","Inserir como Texto","Inserir somente o Texto","Você só pode editar suas próprias imagens. Baixar essa imagem pro servidor?","A imagem foi enviada com sucesso para o servidor!","Palette","Não há arquivos nesse diretório.","Húngara","Digite um novo nome","preview","Baixar","Colar da área de transferência","O seu navegador não oferece suporte a acesso direto para a área de transferência.","Selecção de cópia","cópia","Border radius","Mostrar todos os","Aplicar","Por favor, preencha este campo","Por favor introduza um endereço web","Padrão","Círculo","Ponto","Quadro","Encontrar","Encontrar Anteriores","Localizar Próxima","O conteúdo colado veio de um documento Microsoft Word/Excel. Você deseja manter o formato ou limpa-lo?","Colado do Word Detectado","Limpar","Insira o nome da classe","Pressione Alt para redimensionamento personalizado"]

/***/ }),

/***/ 51344:
/***/ (function(module) {

module.exports["default"] = ["Bir şeyler yaz","Jodit Hakkında","Jodit Editor","Jodit Kullanım Kılavuzu","kullanım için detaylı bilgiler içerir","Lisans hakkında bilgi için lütfen web sitemize gidin:","Tam versiyonunu satın al","Copyright © XDSoft.net - Chupurnov Valeriy. Tüm hakları saklıdır.","Bağlantı","Yeni sekmede aç","Editörü tam ekranda aç","Stili temizle","Renk doldur veya yazı rengi seç","Yinele","Geri Al","Kalın","İtalik","Sırasız Liste Ekle","Sıralı Liste Ekle","Ortala","Kenarlara Yasla","Sola Yasla","Sağa Yasla","Yatay Çizgi Ekle","Resim Ekle","Dosya Ekle","Youtube/Vimeo Videosu Ekle","Bağlantı Ekle","Font Boyutu","Font Ailesi","Blok Ekle","Normal","Başlık 1","Başlık 2","Başlık 3","Başlık 4","Alıntı","Kod","Ekle","Tablo Ekle","Girintiyi Azalt","Girintiyi Arttır","Özel Karakter Seç","Özel Karakter Ekle","Resim Biçimi","Mod Değiştir","Boşluklar","Üst","Sağ","Alt","Sol","CSS Stilleri","CSS Sınıfları","Hizalama","Sağ","Ortalı","Sol","Belirsiz","Kaynak","Başlık","Alternatif Yazı","Link","Bağlantıyı yeni sekmede aç","Resim","Dosya","Gelişmiş","Resim özellikleri","İptal","Tamam","Dosya Listeleyici","Liste yüklenirken hata oluştu","Klasörler yüklenirken hata oluştur","Emin misiniz?","Dizin yolu giriniz","Dizin oluştur","İsim yaz","Resim bırak","Dosya bırak","veya tıkla","Alternatif yazı","Yükle","Gözat","Arka plan","Yazı","Üst","Orta","Aşağı","Öncesine kolon ekle","Sonrasına kolon ekle","Üstüne satır ekle","Altına satır ekle","Tabloyu sil","Satırı sil","Kolonu sil","Hücreyi temizle","Harfler: %d","Kelimeler: %d","Üstü çizili","Alt çizgi","Üst yazı","Alt yazı","Seçilimi kes","Tümünü seç","Satır sonu","Ara","Şununla değiştir","Değiştir","Yapıştır","Yapıştırılacak içerik seç","Kaynak","Kalın","italik","Fırça","Bağlantı","Geri al","Yinele","Tablo","Resim","Silgi","Paragraf","Font boyutu","Video","Font","Hakkında","Yazdır","Alt çizgi","Üstü çizili","Girinti","Çıkıntı","Tam ekran","Küçült","Ayraç","Sırasız liste","Sıralı liste","Kes","Tümünü seç","Kod ekle","Bağlantıyı aç","Bağlantıyı düzenle","Nofollow özelliği","Bağlantıyı kaldır","Güncelle","Düzenlemek için","Yorumu","URL","Düzenle","Yatay hizala","Filtre","Değişime göre sırala","İsme göre sırala","Boyuta göre sırala","Klasör ekle","Sıfırla","Kaydet","Farklı kaydet","Boyutlandır","Kırp","Genişlik","Yükseklik","En boy oranını koru","Evet","Hayır","Sil","Seç","Seç: %s","Dikey hizala","Ayır","Birleştir","Kolon ekle","Satır ekle",null,"Sil","Dikey ayır","Yatay ayır","Kenarlık","Kodunuz HTML koduna benziyor. HTML olarak devam etmek ister misiniz?","HTML olarak yapıştır","Sakla","Yazı olarak ekle","Sadece yazıyı ekle","Sadece kendi resimlerinizi düzenleyebilirsiniz. Bu görseli kendi hostunuza indirmek ister misiniz?","Görsel başarıyla hostunuza yüklendi","Palet","Bu dizinde dosya yok","Yeniden isimlendir","Yeni isim girin","Ön izleme","İndir","Panodan yapıştır ","Tarayıcınız panoya doğrudan erişimi desteklemiyor.","Seçimi kopyala","Kopyala","Sınır yarıçapı","Tümünü Göster","Uygula","Lütfen bu alanı doldurun","Lütfen bir web adresi girin","Varsayılan","Daire","Nokta","Kare","Bul","Öncekini Bul","Sonrakini Bul","Der Inhalt, den Sie einfügen, stammt aus einem Microsoft Word / Excel-Dokument. Möchten Sie das Format erhalten oder löschen?","Word biçiminde yapıştırma algılandı","Temizle","Sınıf adı girin","Özel yeniden boyutlandırma için Alt tuşuna basın"]

/***/ }),

/***/ 2308:
/***/ (function(module) {

module.exports["default"] = ["输入一些内容","关于Jodit","Jodit Editor","开发者指南","使用帮助","有关许可证的信息，请访问我们的网站：","购买完整版本","Copyright © XDSoft.net - Chupurnov Valeriy. 版权所有","Anchor","在新窗口打开","全屏编辑","清除样式","颜色","重做","撤销","粗体","斜体","符号列表","编号","居中","对齐文本","左对齐","右对齐","分割线","图片","文件","视频","链接","字号","字体","格式块","默认","标题1","标题2","标题3","标题4","引用","代码","插入","表格","减少缩进","增加缩进","选择特殊符号","特殊符号","格式复制","改变模式","外边距（Margins）","top","right","bottom","left","样式","Classes","对齐方式","居右","居中","居左","无","Src","Title","Alternative","Link","在新窗口打开链接","图片","file","高级","图片属性","取消","确定","文件管理","加载list错误","加载folders错误","你确定吗？","输入路径","创建路径","type name","拖动图片到此","拖动文件到此","或点击","Alternative text","上传","浏览","背景色","文字","顶部","中间","底部","在之前插入列","在之后插入列","在之前插入行","在之后插入行","删除表格","删除行","删除列","清除内容","字符数: %d","单词数: %d","删除线","下划线","上标","下标","剪切","全选","Break","查找","替换为","替换","粘贴","选择内容并粘贴","源码","粗体","斜体","颜色","链接","撤销","重做","表格","图片","橡皮擦","段落","字号","视频","字体","关于","打印","下划线","上出现","增加缩进","减少缩进","全屏","收缩","分割线","无序列表","顺序列表","剪切","全选","嵌入代码","打开链接","编辑链接","No follow","取消链接","更新","铅笔","预览","URL","编辑","水平对齐","筛选","修改时间排序","名称排序","大小排序","新建文件夹","重置","保存","保存为","调整大小","剪切","宽","高","保持长宽比","是","不","移除","选择","选择: %s","垂直对齐","拆分","合并","添加列","添加行",null,"删除","垂直拆分","水平拆分","边框","你粘贴的文本是一段html代码，是否保留源格式","html粘贴","保留源格式","把html代码视为普通文本","只保留文本","你只能编辑你自己的图片。Download this image on the host?","图片上传成功","调色板","此目录中沒有文件。","重命名","输入新名称","预览","下载","粘贴从剪贴板","你浏览器不支持直接访问的剪贴板。","复制选中内容","复制","边界半径","显示所有","应用","请填写这个字段","请输入一个网址","默认","圆圈","点","方形","搜索","查找上一个","查找下一个","正在粘贴 Word/Excel 的文本，是否保留源格式？","文本粘贴","匹配目标格式","插入班级名称","按Alt自定义调整大小"]

/***/ }),

/***/ 51597:
/***/ (function(module) {

module.exports["default"] = ["輸入一些內容","關於Jodit","Jodit Editor","開發者指南","使用幫助","相關授權條款資訊，請造訪我們的網站：","購買完整版本","Copyright © XDSoft.net - Chupurnov Valeriy. All rights reserved.","錨點","在新分頁開啟","全螢幕編輯","清除樣式","顏色","取消復原","復原","粗體","斜體","項目符號清單","編號清單","置中","文字對齊","靠左","靠右","分割線","圖片","檔案","插入 youtube/vimeo 影片","插入連結","文字大小","字型","格式化區塊","內文","標題1","標題2","標題3","標題4","引文","程式碼","插入","表格","減少縮排","增加縮排","選擇特殊符號","特殊符號","格式複製","檢視原始碼","邊距","上","右","下","左","樣式","Classes","對齊方式","靠右","置中","靠左","無","Src","Title","替代","Link","在新分頁開啟連結","圖片","檔案","進階","圖片屬性","取消","確定","檔案瀏覽","清單載入錯誤","資料夾載入錯誤","您確定嗎？","輸入路徑","創建路徑","type name","拖曳圖片至此","拖曳檔案至此","或點擊","替代文字","上傳","瀏覽","背景色","文字","頂部","中間","底部","插入左方欄","插入右方欄","插入上方列","插入下方列","刪除表格","刪除整列","刪除整欄","清除內容","字元數: %d","單字數: %d","刪除線","底線","上標","下標","剪下","全選","斷行","尋找","取代為","取代","貼上","選擇內容並貼上","原始碼","粗體","斜體","顏色","連結","復原","取消復原","表格","圖片","橡皮擦","段落","文字大小","影片","字型","關於","列印","底線","刪除線","增加縮排","減少縮排","全螢幕","縮減","分隔線","項目符號清單","編號清單","剪下","全選","嵌入程式碼","打開連結","編輯連結","No follow","取消連結","更新","鉛筆","查看","URL",null,"水平對齊","篩選","修改時間排序","名稱排序","大小排序","新增資料夾","重設","儲存","另存為...","調整大小","裁切","寬","高","維持長寬比","是","否","移除","選擇","選擇: %s","垂直對齊","分割","合併","新增欄","新增列",null,"刪除","垂直分割","水平分割","邊框","您的程式碼與 HTML 類似，是否貼上 HTML 格式？","貼上 HTML","保留原始格式","以純文字貼上","僅貼上內文","您只能編輯您自己的圖片。是否下載此圖片?","圖片上傳成功","調色盤","沒有檔案","重新命名","輸入新名稱","預覽","下載","從剪貼簿貼上","瀏覽器無法存取剪貼簿。","複製已選取項目","複製","邊框圓角","顯示全部","應用","請輸入此欄位","請輸入網址","預設","圓圈","點","方形","尋找","尋找上一個","尋找下一個","正在貼上 Word/Excel 文件的內容，是否保留原始格式？","貼上 Word 格式","清除格式","插入 class 名稱","按住 Alt 以調整自訂大小"]

/***/ }),

/***/ 3125:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M621 1280h595v-595zm-45-45l595-595h-595v595zm1152 77v192q0 14-9 23t-23 9h-224v224q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-224h-864q-14 0-23-9t-9-23v-864h-224q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h224v-224q0-14 9-23t23-9h192q14 0 23 9t9 23v224h851l246-247q10-9 23-9t23 9q9 10 9 23t-9 23l-247 246v851h224q14 0 23 9t9 23z\"/> </svg>"

/***/ }),

/***/ 54209:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 24 24\"> <g transform=\"translate(-251.000000, -443.000000)\"> <g transform=\"translate(215.000000, 119.000000)\"/> <path d=\"M252,448 L256,448 L256,444 L252,444 L252,448 Z M257,448 L269,448 L269,446 L257,446 L257,448 Z M257,464 L269,464 L269,462 L257,462 L257,464 Z M270,444 L270,448 L274,448 L274,444 L270,444 Z M252,462 L252,466 L256,466 L256,462 L252,462 Z M270,462 L270,466 L274,466 L274,462 L270,462 Z M254,461 L256,461 L256,449 L254,449 L254,461 Z M270,461 L272,461 L272,449 L270,449 L270,461 Z\"/> </g> </svg>"

/***/ }),

/***/ 45394:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' x=\"0px\" y=\"0px\" viewBox=\"0 0 459 459\"> <g> <path d=\"M229.5,0C102,0,0,102,0,229.5S102,459,229.5,459c20.4,0,38.25-17.85,38.25-38.25c0-10.2-2.55-17.85-10.2-25.5 c-5.1-7.65-10.2-15.3-10.2-25.5c0-20.4,17.851-38.25,38.25-38.25h45.9c71.4,0,127.5-56.1,127.5-127.5C459,91.8,357,0,229.5,0z M89.25,229.5c-20.4,0-38.25-17.85-38.25-38.25S68.85,153,89.25,153s38.25,17.85,38.25,38.25S109.65,229.5,89.25,229.5z M165.75,127.5c-20.4,0-38.25-17.85-38.25-38.25S145.35,51,165.75,51S204,68.85,204,89.25S186.15,127.5,165.75,127.5z M293.25,127.5c-20.4,0-38.25-17.85-38.25-38.25S272.85,51,293.25,51s38.25,17.85,38.25,38.25S313.65,127.5,293.25,127.5z M369.75,229.5c-20.4,0-38.25-17.85-38.25-38.25S349.35,153,369.75,153S408,170.85,408,191.25S390.15,229.5,369.75,229.5z\" /> </g> </svg>"

/***/ }),

/***/ 53315:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M747 1521q74 32 140 32 376 0 376-335 0-114-41-180-27-44-61.5-74t-67.5-46.5-80.5-25-84-10.5-94.5-2q-73 0-101 10 0 53-.5 159t-.5 158q0 8-1 67.5t-.5 96.5 4.5 83.5 12 66.5zm-14-746q42 7 109 7 82 0 143-13t110-44.5 74.5-89.5 25.5-142q0-70-29-122.5t-79-82-108-43.5-124-14q-50 0-130 13 0 50 4 151t4 152q0 27-.5 80t-.5 79q0 46 1 69zm-541 889l2-94q15-4 85-16t106-27q7-12 12.5-27t8.5-33.5 5.5-32.5 3-37.5.5-34v-65.5q0-982-22-1025-4-8-22-14.5t-44.5-11-49.5-7-48.5-4.5-30.5-3l-4-83q98-2 340-11.5t373-9.5q23 0 68.5.5t67.5.5q70 0 136.5 13t128.5 42 108 71 74 104.5 28 137.5q0 52-16.5 95.5t-39 72-64.5 57.5-73 45-84 40q154 35 256.5 134t102.5 248q0 100-35 179.5t-93.5 130.5-138 85.5-163.5 48.5-176 14q-44 0-132-3t-132-3q-106 0-307 11t-231 12z\"/> </svg>"

/***/ }),

/***/ 70600:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M384 1662l17-85q6-2 81.5-21.5t111.5-37.5q28-35 41-101 1-7 62-289t114-543.5 52-296.5v-25q-24-13-54.5-18.5t-69.5-8-58-5.5l19-103q33 2 120 6.5t149.5 7 120.5 2.5q48 0 98.5-2.5t121-7 98.5-6.5q-5 39-19 89-30 10-101.5 28.5t-108.5 33.5q-8 19-14 42.5t-9 40-7.5 45.5-6.5 42q-27 148-87.5 419.5t-77.5 355.5q-2 9-13 58t-20 90-16 83.5-6 57.5l1 18q17 4 185 31-3 44-16 99-11 0-32.5 1.5t-32.5 1.5q-29 0-87-10t-86-10q-138-2-206-2-51 0-143 9t-121 11z\"/> </svg>"

/***/ }),

/***/ 53523:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1760 896q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1728q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1728zm-1277-64q-28-35-51-80-48-97-48-188 0-181 134-309 133-127 393-127 50 0 167 19 66 12 177 48 10 38 21 118 14 123 14 183 0 18-5 45l-12 3-84-6-14-2q-50-149-103-205-88-91-210-91-114 0-182 59-67 58-67 146 0 73 66 140t279 129q69 20 173 66 58 28 95 52h-743zm507 256h411q7 39 7 92 0 111-41 212-23 55-71 104-37 35-109 81-80 48-153 66-80 21-203 21-114 0-195-23l-140-40q-57-16-72-28-8-8-8-22v-13q0-108-2-156-1-30 0-68l2-37v-44l102-2q15 34 30 71t22.5 56 12.5 27q35 57 80 94 43 36 105 57 59 22 132 22 64 0 139-27 77-26 122-86 47-61 47-129 0-84-81-157-34-29-137-71z\"/> </svg>"

/***/ }),

/***/ 6582:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1025 1369v167h-248l-159-252-24-42q-8-9-11-21h-3l-9 21q-10 20-25 44l-155 250h-258v-167h128l197-291-185-272h-137v-168h276l139 228q2 4 23 42 8 9 11 21h3q3-9 11-21l25-42 140-228h257v168h-125l-184 267 204 296h109zm639 217v206h-514l-4-27q-3-45-3-46 0-64 26-117t65-86.5 84-65 84-54.5 65-54 26-64q0-38-29.5-62.5t-70.5-24.5q-51 0-97 39-14 11-36 38l-105-92q26-37 63-66 80-65 188-65 110 0 178 59.5t68 158.5q0 66-34.5 118.5t-84 86-99.5 62.5-87 63-41 73h232v-80h126z\"/> </svg>"

/***/ }),

/***/ 30770:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1025 1369v167h-248l-159-252-24-42q-8-9-11-21h-3l-9 21q-10 20-25 44l-155 250h-258v-167h128l197-291-185-272h-137v-168h276l139 228q2 4 23 42 8 9 11 21h3q3-9 11-21l25-42 140-228h257v168h-125l-184 267 204 296h109zm637-679v206h-514l-3-27q-4-28-4-46 0-64 26-117t65-86.5 84-65 84-54.5 65-54 26-64q0-38-29.5-62.5t-70.5-24.5q-51 0-97 39-14 11-36 38l-105-92q26-37 63-66 83-65 188-65 110 0 178 59.5t68 158.5q0 56-24.5 103t-62 76.5-81.5 58.5-82 50.5-65.5 51.5-30.5 63h232v-80h126z\"/> </svg>"

/***/ }),

/***/ 96181:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M176 223q-37-2-45-4l-3-88q13-1 40-1 60 0 112 4 132 7 166 7 86 0 168-3 116-4 146-5 56 0 86-2l-1 14 2 64v9q-60 9-124 9-60 0-79 25-13 14-13 132 0 13 .5 32.5t.5 25.5l1 229 14 280q6 124 51 202 35 59 96 92 88 47 177 47 104 0 191-28 56-18 99-51 48-36 65-64 36-56 53-114 21-73 21-229 0-79-3.5-128t-11-122.5-13.5-159.5l-4-59q-5-67-24-88-34-35-77-34l-100 2-14-3 2-86h84l205 10q76 3 196-10l18 2q6 38 6 51 0 7-4 31-45 12-84 13-73 11-79 17-15 15-15 41 0 7 1.5 27t1.5 31q8 19 22 396 6 195-15 304-15 76-41 122-38 65-112 123-75 57-182 89-109 33-255 33-167 0-284-46-119-47-179-122-61-76-83-195-16-80-16-237v-333q0-188-17-213-25-36-147-39zm1488 1409v-64q0-14-9-23t-23-9h-1472q-14 0-23 9t-9 23v64q0 14 9 23t23 9h1472q14 0 23-9t9-23z\"/> </svg>"

/***/ }),

/***/ 28218:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M832 1408l336-384h-768l-336 384h768zm1013-1077q15 34 9.5 71.5t-30.5 65.5l-896 1024q-38 44-96 44h-768q-38 0-69.5-20.5t-47.5-54.5q-15-34-9.5-71.5t30.5-65.5l896-1024q38-44 96-44h768q38 0 69.5 20.5t47.5 54.5z\"/> </svg>"

/***/ }),

/***/ 89371:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M896 1152q0-36-20-69-1-1-15.5-22.5t-25.5-38-25-44-21-50.5q-4-16-21-16t-21 16q-7 23-21 50.5t-25 44-25.5 38-15.5 22.5q-20 33-20 69 0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5zm512-128q0 212-150 362t-362 150-362-150-150-362q0-145 81-275 6-9 62.5-90.5t101-151 99.5-178 83-201.5q9-30 34-47t51-17 51.5 17 33.5 47q28 93 83 201.5t99.5 178 101 151 62.5 90.5q81 127 81 275z\"/> </svg>"

/***/ }),

/***/ 79031:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 16 16\"> <path stroke-width=\"0\" d=\"M16 9v-6h-3v-1c0-0.55-0.45-1-1-1h-11c-0.55 0-1 0.45-1 1v3c0 0.55 0.45 1 1 1h11c0.55 0 1-0.45 1-1v-1h2v4h-9v2h-0.5c-0.276 0-0.5 0.224-0.5 0.5v5c0 0.276 0.224 0.5 0.5 0.5h2c0.276 0 0.5-0.224 0.5-0.5v-5c0-0.276-0.224-0.5-0.5-0.5h-0.5v-1h9zM12 3h-11v-1h11v1z\"/> </svg>"

/***/ }),

/***/ 84209:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M789 559l-170 450q33 0 136.5 2t160.5 2q19 0 57-2-87-253-184-452zm-725 1105l2-79q23-7 56-12.5t57-10.5 49.5-14.5 44.5-29 31-50.5l237-616 280-724h128q8 14 11 21l205 480q33 78 106 257.5t114 274.5q15 34 58 144.5t72 168.5q20 45 35 57 19 15 88 29.5t84 20.5q6 38 6 57 0 4-.5 13t-.5 13q-63 0-190-8t-191-8q-76 0-215 7t-178 8q0-43 4-78l131-28q1 0 12.5-2.5t15.5-3.5 14.5-4.5 15-6.5 11-8 9-11 2.5-14q0-16-31-96.5t-72-177.5-42-100l-450-2q-26 58-76.5 195.5t-50.5 162.5q0 22 14 37.5t43.5 24.5 48.5 13.5 57 8.5 41 4q1 19 1 58 0 9-2 27-58 0-174.5-10t-174.5-10q-8 0-26.5 4t-21.5 4q-80 14-188 14z\"/> </svg>"

/***/ }),

/***/ 51416:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1744 1408q33 0 42 18.5t-11 44.5l-126 162q-20 26-49 26t-49-26l-126-162q-20-26-11-44.5t42-18.5h80v-1024h-80q-33 0-42-18.5t11-44.5l126-162q20-26 49-26t49 26l126 162q20 26 11 44.5t-42 18.5h-80v1024h80zm-1663-1279l54 27q12 5 211 5 44 0 132-2t132-2q36 0 107.5.5t107.5.5h293q6 0 21 .5t20.5 0 16-3 17.5-9 15-17.5l42-1q4 0 14 .5t14 .5q2 112 2 336 0 80-5 109-39 14-68 18-25-44-54-128-3-9-11-48t-14.5-73.5-7.5-35.5q-6-8-12-12.5t-15.5-6-13-2.5-18-.5-16.5.5q-17 0-66.5-.5t-74.5-.5-64 2-71 6q-9 81-8 136 0 94 2 388t2 455q0 16-2.5 71.5t0 91.5 12.5 69q40 21 124 42.5t120 37.5q5 40 5 50 0 14-3 29l-34 1q-76 2-218-8t-207-10q-50 0-151 9t-152 9q-3-51-3-52v-9q17-27 61.5-43t98.5-29 78-27q19-42 19-383 0-101-3-303t-3-303v-117q0-2 .5-15.5t.5-25-1-25.5-3-24-5-14q-11-12-162-12-33 0-93 12t-80 26q-19 13-34 72.5t-31.5 111-42.5 53.5q-42-26-56-44v-383z\"/> </svg>"

/***/ }),

/***/ 59940:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"><path d=\"M1534 189v73q0 29-18.5 61t-42.5 32q-50 0-54 1-26 6-32 31-3 11-3 64v1152q0 25-18 43t-43 18h-108q-25 0-43-18t-18-43v-1218h-143v1218q0 25-17.5 43t-43.5 18h-108q-26 0-43.5-18t-17.5-43v-496q-147-12-245-59-126-58-192-179-64-117-64-259 0-166 88-286 88-118 209-159 111-37 417-37h479q25 0 43 18t18 43z\"/></svg>"

/***/ }),

/***/ 7764:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 24 24\"> <path stroke-width=\"0\" d=\"M22,20.6L3.4,2H8V0H0v8h2V3.4L20.6,22H16v2h8v-8h-2V20.6z M16,0v2h4.7l-6.3,6.3l1.4,1.4L22,3.5V8h2V0H16z M8.3,14.3L2,20.6V16H0v8h8v-2H3.5l6.3-6.3L8.3,14.3z\"/> </svg>"

/***/ }),

/***/ 32108:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M896 960v448q0 26-19 45t-45 19-45-19l-144-144-332 332q-10 10-23 10t-23-10l-114-114q-10-10-10-23t10-23l332-332-144-144q-19-19-19-45t19-45 45-19h448q26 0 45 19t19 45zm755-672q0 13-10 23l-332 332 144 144q19 19 19 45t-19 45-45 19h-448q-26 0-45-19t-19-45v-448q0-26 19-45t45-19 45 19l144 144 332-332q10-10 23-10t23 10l114 114q10 10 10 23z\"/> </svg>"

/***/ }),

/***/ 8223:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1600 736v192q0 40-28 68t-68 28h-1216q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h1216q40 0 68 28t28 68z\"/> </svg>"

/***/ }),

/***/ 51382:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M576 576q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm1024 384v448h-1408v-192l320-320 160 160 512-512zm96-704h-1600q-13 0-22.5 9.5t-9.5 22.5v1216q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5v-1216q0-13-9.5-22.5t-22.5-9.5zm160 32v1216q0 66-47 113t-113 47h-1600q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1600q66 0 113 47t47 113z\"/> </svg>"

/***/ }),

/***/ 30863:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M352 832q0 14-9 23l-288 288q-9 9-23 9-13 0-22.5-9.5t-9.5-22.5v-576q0-13 9.5-22.5t22.5-9.5q14 0 23 9l288 288q9 9 9 23zm1440 480v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5zm0-384v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zm0-384v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zm0-384v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5z\"/> </svg>"

/***/ }),

/***/ 89721:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M384 544v576q0 13-9.5 22.5t-22.5 9.5q-14 0-23-9l-288-288q-9-9-9-23t9-23l288-288q9-9 23-9 13 0 22.5 9.5t9.5 22.5zm1408 768v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5zm0-384v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zm0-384v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zm0-384v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5z\"/> </svg>"

/***/ }),

/***/ 10147:
/***/ (function(module) {

module.exports = "<svg viewBox=\"0 0 18.151 18.151\" xmlns=\"http://www.w3.org/2000/svg\"> <g> <path stroke-width=\"0\" d=\"M6.237,16.546H3.649V1.604h5.916v5.728c0.474-0.122,0.968-0.194,1.479-0.194 c0.042,0,0.083,0.006,0.125,0.006V0H2.044v18.15h5.934C7.295,17.736,6.704,17.19,6.237,16.546z\"/> <path stroke-width=\"0\" d=\"M11.169,8.275c-2.723,0-4.938,2.215-4.938,4.938s2.215,4.938,4.938,4.938s4.938-2.215,4.938-4.938 S13.892,8.275,11.169,8.275z M11.169,16.81c-1.983,0-3.598-1.612-3.598-3.598c0-1.983,1.614-3.597,3.598-3.597 s3.597,1.613,3.597,3.597C14.766,15.198,13.153,16.81,11.169,16.81z\"/> <polygon stroke-width=\"0\" points=\"11.792,11.073 10.502,11.073 10.502,12.578 9.03,12.578 9.03,13.868 10.502,13.868 10.502,15.352 11.792,15.352 11.792,13.868 13.309,13.868 13.309,12.578 11.792,12.578 \"/> </g> </svg>"

/***/ }),

/***/ 14165:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 432 432\"> <g> <polygon points=\"203.688,96 0,96 0,144 155.688,144 \"/> <polygon points=\"155.719,288 0,288 0,336 203.719,336 \"/> <path d=\"M97.844,230.125c-3.701-3.703-5.856-8.906-5.856-14.141s2.154-10.438,5.856-14.141l9.844-9.844H0v48h107.719 L97.844,230.125z\"/> <polygon points=\"232,176 232,96 112,216 232,336 232,256 432,256 432,176\"/> </g> </svg>"

/***/ }),

/***/ 42516:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 312 312\"> <g transform=\"translate(0.000000,312.000000) scale(0.100000,-0.100000)\" stroke=\"none\"> <path d=\"M50 3109 c0 -7 -11 -22 -25 -35 l-25 -23 0 -961 0 -961 32 -29 32 -30 501 -2 500 -3 3 -502 2 -502 31 -30 31 -31 958 0 958 0 23 25 c13 13 30 25 37 25 9 0 12 199 12 960 0 686 -3 960 -11 960 -6 0 -24 12 -40 28 l-29 27 -503 5 -502 5 -5 502 -5 503 -28 29 c-15 16 -27 34 -27 40 0 8 -274 11 -960 11 -710 0 -960 -3 -960 -11z m1738 -698 l2 -453 -40 -40 c-22 -22 -40 -43 -40 -47 0 -4 36 -42 79 -85 88 -87 82 -87 141 -23 l26 27 455 -2 454 -3 0 -775 0 -775 -775 0 -775 0 -3 450 -2 449 47 48 47 48 -82 80 c-44 44 -84 80 -87 80 -3 0 -25 -18 -48 -40 l-41 -40 -456 2 -455 3 -3 765 c-1 421 0 771 3 778 3 10 164 12 777 10 l773 -3 3 -454z\"/> <path d=\"M607 2492 c-42 -42 -77 -82 -77 -87 0 -6 86 -96 190 -200 105 -104 190 -197 190 -205 0 -8 -41 -56 -92 -107 -65 -65 -87 -94 -77 -98 8 -3 138 -4 289 -3 l275 3 3 275 c1 151 0 281 -3 289 -4 10 -35 -14 -103 -82 -54 -53 -103 -97 -109 -97 -7 0 -99 88 -206 195 -107 107 -196 195 -198 195 -3 0 -39 -35 -82 -78z\"/> <path d=\"M1470 1639 c-47 -49 -87 -91 -89 -94 -5 -6 149 -165 160 -165 9 0 189 179 189 188 0 12 -154 162 -165 161 -6 0 -48 -41 -95 -90z\"/> <path d=\"M1797 1303 c-9 -8 -9 -568 0 -576 4 -4 50 36 103 88 54 52 101 95 106 95 5 0 95 -85 199 -190 104 -104 194 -190 200 -190 6 0 46 36 90 80 l79 79 -197 196 c-108 108 -197 199 -197 203 0 4 45 52 99 106 55 55 98 103 95 108 -6 10 -568 11 -577 1z\"/> </g> </svg>"

/***/ }),

/***/ 80554:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 48 48\"> <path d=\"M6 42h4v-4h-4v4zm4-28h-4v4h4v-4zm-4 20h4v-4h-4v4zm8 8h4v-4h-4v4zm-4-36h-4v4h4v-4zm8 0h-4v4h4v-4zm16 0h-4v4h4v-4zm-8 8h-4v4h4v-4zm0-8h-4v4h4v-4zm12 28h4v-4h-4v4zm-16 8h4v-4h-4v4zm-16-16h36v-4h-36v4zm32-20v4h4v-4h-4zm0 12h4v-4h-4v4zm-16 16h4v-4h-4v4zm8 8h4v-4h-4v4zm8 0h4v-4h-4v4z\"/> <path d=\"M0 0h48v48h-48z\" fill=\"none\"/> </svg>"

/***/ }),

/***/ 10328:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 48 48\"> <path d=\"M6 18h4v-4h-4v4zm0-8h4v-4h-4v4zm8 32h4v-4h-4v4zm0-16h4v-4h-4v4zm-8 0h4v-4h-4v4zm0 16h4v-4h-4v4zm0-8h4v-4h-4v4zm8-24h4v-4h-4v4zm24 24h4v-4h-4v4zm-16 8h4v-36h-4v36zm16 0h4v-4h-4v4zm0-16h4v-4h-4v4zm0-20v4h4v-4h-4zm0 12h4v-4h-4v4zm-8-8h4v-4h-4v4zm0 32h4v-4h-4v4zm0-16h4v-4h-4v4z\"/> <path d=\"M0 0h48v48h-48z\" fill=\"none\"/> </svg>"

/***/ }),

/***/ 69187:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M512 1248v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm0-512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm1280 512v192q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h960q40 0 68 28t28 68zm-1280-1024v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm1280 512v192q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h960q40 0 68 28t28 68zm0-512v192q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h960q40 0 68 28t28 68z\"/> </svg>"

/***/ }),

/***/ 68315:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M512 1248v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm0-512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm640 512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm-640-1024v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm640 512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm640 512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm-640-1024v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm640 512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm0-512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68z\"/> </svg>"

/***/ }),

/***/ 94484:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45z\"/> </svg>"

/***/ }),

/***/ 10530:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1520 1216q0-40-28-68l-208-208q-28-28-68-28-42 0-72 32 3 3 19 18.5t21.5 21.5 15 19 13 25.5 3.5 27.5q0 40-28 68t-68 28q-15 0-27.5-3.5t-25.5-13-19-15-21.5-21.5-18.5-19q-33 31-33 73 0 40 28 68l206 207q27 27 68 27 40 0 68-26l147-146q28-28 28-67zm-703-705q0-40-28-68l-206-207q-28-28-68-28-39 0-68 27l-147 146q-28 28-28 67 0 40 28 68l208 208q27 27 68 27 42 0 72-31-3-3-19-18.5t-21.5-21.5-15-19-13-25.5-3.5-27.5q0-40 28-68t68-28q15 0 27.5 3.5t25.5 13 19 15 21.5 21.5 18.5 19q33-31 33-73zm895 705q0 120-85 203l-147 146q-83 83-203 83-121 0-204-85l-206-207q-83-83-83-203 0-123 88-209l-88-88q-86 88-208 88-120 0-204-84l-208-208q-84-84-84-204t85-203l147-146q83-83 203-83 121 0 204 85l206 207q83 83 83 203 0 123-88 209l88 88q86-88 208-88 120 0 204 84l208 208q84 84 84 204z\"/> </svg>"

/***/ }),

/***/ 52401:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M503 1271l-256 256q-10 9-23 9-12 0-23-9-9-10-9-23t9-23l256-256q10-9 23-9t23 9q9 10 9 23t-9 23zm169 41v320q0 14-9 23t-23 9-23-9-9-23v-320q0-14 9-23t23-9 23 9 9 23zm-224-224q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23 9-23 23-9h320q14 0 23 9t9 23zm1264 128q0 120-85 203l-147 146q-83 83-203 83-121 0-204-85l-334-335q-21-21-42-56l239-18 273 274q27 27 68 27.5t68-26.5l147-146q28-28 28-67 0-40-28-68l-274-275 18-239q35 21 56 42l336 336q84 86 84 204zm-617-724l-239 18-273-274q-28-28-68-28-39 0-68 27l-147 146q-28 28-28 67 0 40 28 68l274 274-18 240q-35-21-56-42l-336-336q-84-86-84-204 0-120 85-203l147-146q83-83 203-83 121 0 204 85l334 335q21 21 42 56zm633 84q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23 9-23 23-9h320q14 0 23 9t9 23zm-544-544v320q0 14-9 23t-23 9-23-9-9-23v-320q0-14 9-23t23-9 23 9 9 23zm407 151l-256 256q-11 9-23 9t-23-9q-9-10-9-23t9-23l256-256q10-9 23-9t23 9q9 10 9 23t-9 23z\"/> </svg>"

/***/ }),

/***/ 44931:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path stroke-width=\"0\" d=\"M381 1620q0 80-54.5 126t-135.5 46q-106 0-172-66l57-88q49 45 106 45 29 0 50.5-14.5t21.5-42.5q0-64-105-56l-26-56q8-10 32.5-43.5t42.5-54 37-38.5v-1q-16 0-48.5 1t-48.5 1v53h-106v-152h333v88l-95 115q51 12 81 49t30 88zm2-627v159h-362q-6-36-6-54 0-51 23.5-93t56.5-68 66-47.5 56.5-43.5 23.5-45q0-25-14.5-38.5t-39.5-13.5q-46 0-81 58l-85-59q24-51 71.5-79.5t105.5-28.5q73 0 123 41.5t50 112.5q0 50-34 91.5t-75 64.5-75.5 50.5-35.5 52.5h127v-60h105zm1409 319v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-14 9-23t23-9h1216q13 0 22.5 9.5t9.5 22.5zm-1408-899v99h-335v-99h107q0-41 .5-122t.5-121v-12h-2q-8 17-50 54l-71-76 136-127h106v404h108zm1408 387v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-14 9-23t23-9h1216q13 0 22.5 9.5t9.5 22.5zm0-512v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5z\"/> </svg>"

/***/ }),

/***/ 29845:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path stroke-width=\"0\" d=\"M384 1408q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm0-512q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm1408 416v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5zm-1408-928q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm1408 416v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5zm0-512v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5z\"/> </svg>"

/***/ }),

/***/ 52390:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1664 256v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39 14-69l138-138q-148-137-349-137-104 0-198.5 40.5t-163.5 109.5-109.5 163.5-40.5 198.5 40.5 198.5 109.5 163.5 163.5 109.5 198.5 40.5q119 0 225-52t179-147q7-10 23-12 14 0 25 9l137 138q9 8 9.5 20.5t-7.5 22.5q-109 132-264 204.5t-327 72.5q-156 0-298-61t-245-164-164-245-61-298 61-298 164-245 245-164 298-61q147 0 284.5 55.5t244.5 156.5l130-129q29-31 70-14 39 17 39 59z\"/> </svg>"

/***/ }),

/***/ 28825:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1664 896q0 156-61 298t-164 245-245 164-298 61q-172 0-327-72.5t-264-204.5q-7-10-6.5-22.5t8.5-20.5l137-138q10-9 25-9 16 2 23 12 73 95 179 147t225 52q104 0 198.5-40.5t163.5-109.5 109.5-163.5 40.5-198.5-40.5-198.5-109.5-163.5-163.5-109.5-198.5-40.5q-98 0-188 35.5t-160 101.5l137 138q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59 39-17 69 14l130 129q107-101 244.5-156.5t284.5-55.5q156 0 298 61t245 164 164 245 61 298z\"/> </svg>"

/***/ }),

/***/ 61097:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M553 1399l-50 50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l50 50q10 10 10 23t-10 23l-393 393 393 393q10 10 10 23t-10 23zm591-1067l-373 1291q-4 13-15.5 19.5t-23.5 2.5l-62-17q-13-4-19.5-15.5t-2.5-24.5l373-1291q4-13 15.5-19.5t23.5-2.5l62 17q13 4 19.5 15.5t2.5 24.5zm657 651l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23t-10 23z\"/> </svg>"

/***/ }),

/***/ 1296:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 270 270\"> <path d=\"m240.443652,220.45085l-47.410809,0l0,-10.342138c13.89973,-8.43655 25.752896,-19.844464 34.686646,-33.469923c11.445525,-17.455846 17.496072,-37.709239 17.496072,-58.570077c0,-59.589197 -49.208516,-108.068714 -109.693558,-108.068714s-109.69263,48.479517 -109.69263,108.069628c0,20.860839 6.050547,41.113316 17.497001,58.570077c8.93375,13.625459 20.787845,25.032458 34.686646,33.469008l0,10.342138l-47.412666,0c-10.256959,0 -18.571354,8.191376 -18.571354,18.296574c0,10.105198 8.314395,18.296574 18.571354,18.296574l65.98402,0c10.256959,0 18.571354,-8.191376 18.571354,-18.296574l0,-39.496814c0,-7.073455 -4.137698,-13.51202 -10.626529,-16.537358c-25.24497,-11.772016 -41.557118,-37.145704 -41.557118,-64.643625c0,-39.411735 32.545369,-71.476481 72.549922,-71.476481c40.004553,0 72.550851,32.064746 72.550851,71.476481c0,27.497006 -16.312149,52.87161 -41.557118,64.643625c-6.487902,3.026253 -10.6256,9.464818 -10.6256,16.537358l0,39.496814c0,10.105198 8.314395,18.296574 18.571354,18.296574l65.982163,0c10.256959,0 18.571354,-8.191376 18.571354,-18.296574c0,-10.105198 -8.314395,-18.296574 -18.571354,-18.296574z\"/> </svg>"

/***/ }),

/***/ 18508:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M576 1376v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm0-384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm512 384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm-512-768v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm512 384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm512 384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm-512-768v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm512 384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm0-384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm128-320v1088q0 66-47 113t-113 47h-1344q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1344q66 0 113 47t47 113z\"/> </svg>"

/***/ }),

/***/ 97627:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1792 352v1088q0 42-39 59-13 5-25 5-27 0-45-19l-403-403v166q0 119-84.5 203.5t-203.5 84.5h-704q-119 0-203.5-84.5t-84.5-203.5v-704q0-119 84.5-203.5t203.5-84.5h704q119 0 203.5 84.5t84.5 203.5v165l403-402q18-19 45-19 12 0 25 5 39 17 39 59z\"/> </svg>"

/***/ }),

/***/ 39123:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1395 736q0 13-10 23l-466 466q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l393 393 393-393q10-10 23-10t23 10l50 50q10 10 10 23z\"/> </svg>"

/***/ }),

/***/ 76331:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1203 544q0 13-10 23l-393 393 393 393q10 10 10 23t-10 23l-50 50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l50 50q10 10 10 23z\"/> </svg>"

/***/ }),

/***/ 52326:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1171 960q0 13-10 23l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23z\"/> </svg>"

/***/ }),

/***/ 23689:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1395 1184q0 13-10 23l-50 50q-10 10-23 10t-23-10l-393-393-393 393q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l466 466q10 10 10 23z\"/> </svg>"

/***/ }),

/***/ 99017:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M704 1376v-704q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v704q0 14 9 23t23 9h64q14 0 23-9t9-23zm256 0v-704q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v704q0 14 9 23t23 9h64q14 0 23-9t9-23zm256 0v-704q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v704q0 14 9 23t23 9h64q14 0 23-9t9-23zm-544-992h448l-48-117q-7-9-17-11h-317q-10 2-17 11zm928 32v64q0 14-9 23t-23 9h-96v948q0 83-47 143.5t-113 60.5h-832q-66 0-113-58.5t-47-141.5v-952h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h309l70-167q15-37 54-63t79-26h320q40 0 79 26t54 63l70 167h309q14 0 23 9t9 23z\"/> </svg>"

/***/ }),

/***/ 271:
/***/ (function(module) {

module.exports = "<svg viewBox=\"0 0 14 14\" xmlns=\"http://www.w3.org/2000/svg\"> <g stroke=\"none\" stroke-width=\"1\"> <path d=\"M14,1.4 L12.6,0 L7,5.6 L1.4,0 L0,1.4 L5.6,7 L0,12.6 L1.4,14 L7,8.4 L12.6,14 L14,12.6 L8.4,7 L14,1.4 Z\"/> </g> </svg>"

/***/ }),

/***/ 25570:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm-384-384v128q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h896q26 0 45 19t19 45zm256-384v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zm-384-384v128q0 26-19 45t-45 19h-640q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h640q26 0 45 19t19 45z\"/> </svg>"

/***/ }),

/***/ 20865:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1472 930v318q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q63 0 117 25 15 7 18 23 3 17-9 29l-49 49q-10 10-23 10-3 0-9-2-23-6-45-6h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113v-254q0-13 9-22l64-64q10-10 23-10 6 0 12 3 20 8 20 29zm231-489l-814 814q-24 24-57 24t-57-24l-430-430q-24-24-24-57t24-57l110-110q24-24 57-24t57 24l263 263 647-647q24-24 57-24t57 24l110 110q24 24 24 57t-24 57z\"/> </svg>"

/***/ }),

/***/ 29777:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 10 10\"> <path d=\"M.941 4.523a.75.75 0 1 1 1.06-1.06l3.006 3.005 3.005-3.005a.75.75 0 1 1 1.06 1.06l-3.549 3.55a.75.75 0 0 1-1.168-.136L.941 4.523z\"/> </svg>"

/***/ }),

/***/ 49220:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 24 24\" > <circle cx=\"12\" cy=\"12\" r=\"2.2\"/> <circle cx=\"12\" cy=\"5\" r=\"2.2\"/> <circle cx=\"12\" cy=\"19\" r=\"2.2\"/> </svg>"

/***/ }),

/***/ 32336:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1664 960q-152-236-381-353 61 104 61 225 0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-121 61-225-229 117-381 353 133 205 333.5 326.5t434.5 121.5 434.5-121.5 333.5-326.5zm-720-384q0-20-14-34t-34-14q-125 0-214.5 89.5t-89.5 214.5q0 20 14 34t34 14 34-14 14-34q0-86 61-147t147-61q20 0 34-14t14-34zm848 384q0 34-20 69-140 230-376.5 368.5t-499.5 138.5-499.5-139-376.5-368q-20-35-20-69t20-69q140-229 376.5-368t499.5-139 499.5 139 376.5 368q20 35 20 69z\"/> </svg>"

/***/ }),

/***/ 23384:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1152 512v-472q22 14 36 28l408 408q14 14 28 36h-472zm-128 32q0 40 28 68t68 28h544v1056q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h800v544z\"/> </svg>"

/***/ }),

/***/ 85588:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1728 608v704q0 92-66 158t-158 66h-1216q-92 0-158-66t-66-158v-960q0-92 66-158t158-66h320q92 0 158 66t66 158v32h672q92 0 158 66t66 158z\"/> </svg>"

/***/ }),

/***/ 76962:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1152 1376v-160q0-14-9-23t-23-9h-96v-512q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v160q0 14 9 23t23 9h96v320h-96q-14 0-23 9t-9 23v160q0 14 9 23t23 9h448q14 0 23-9t9-23zm-128-896v-160q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v160q0 14 9 23t23 9h192q14 0 23-9t9-23zm640 416q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"/> </svg>"

/***/ }),

/***/ 52614:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm-384-384v128q0 26-19 45t-45 19h-1280q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1280q26 0 45 19t19 45zm256-384v128q0 26-19 45t-45 19h-1536q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1536q26 0 45 19t19 45zm-384-384v128q0 26-19 45t-45 19h-1152q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1152q26 0 45 19t19 45z\"/> </svg>"

/***/ }),

/***/ 78808:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"><path d=\"M640 768h512v-192q0-106-75-181t-181-75-181 75-75 181v192zm832 96v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-192q0-184 132-316t316-132 316 132 132 316v192h32q40 0 68 28t28 68z\"/></svg>"

/***/ }),

/***/ 36553:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 32 32\"> <path d=\"M27 4l-15 15-7-7-5 5 12 12 20-20z\"/> </svg>"

/***/ }),

/***/ 48103:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"><path d=\"M491 1536l91-91-235-235-91 91v107h128v128h107zm523-928q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zm-54-192l416 416-832 832h-416v-416zm683 96q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z\"/></svg>"

/***/ }),

/***/ 4434:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"><path d=\"M1600 736v192q0 40-28 68t-68 28h-416v416q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-416h-416q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h416v-416q0-40 28-68t68-28h192q40 0 68 28t28 68v416h416q40 0 68 28t28 68z\"/></svg>"

/***/ }),

/***/ 55810:
/***/ (function(module) {

module.exports = "<svg viewBox=\"0 0 13 13\" xmlns=\"http://www.w3.org/2000/svg\"> <path d=\"M5.9814 11.8049C5.59087 11.4144 5.59087 10.7812 5.9814 10.3907L10.224 6.14806C10.6146 5.75754 11.2477 5.75754 11.6383 6.14806C12.0288 6.53859 12.0288 7.17175 11.6383 7.56228L7.39561 11.8049C7.00509 12.1954 6.37192 12.1954 5.9814 11.8049Z\"/> <path d=\"M0.707107 12.0208C0.316582 11.6303 0.316582 10.9971 0.707107 10.6066L10.6066 0.707121C10.9971 0.316597 11.6303 0.316596 12.0208 0.707121C12.4113 1.09764 12.4113 1.73081 12.0208 2.12133L2.12132 12.0208C1.7308 12.4114 1.09763 12.4114 0.707107 12.0208Z\"/> </svg>"

/***/ }),

/***/ 18375:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19h-1280q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1280q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19h-1536q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1536q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19h-1152q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1152q26 0 45 19t19 45z\"/> </svg>"

/***/ }),

/***/ 60300:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M512 1536h768v-384h-768v384zm896 0h128v-896q0-14-10-38.5t-20-34.5l-281-281q-10-10-34-20t-39-10v416q0 40-28 68t-68 28h-576q-40 0-68-28t-28-68v-416h-128v1280h128v-416q0-40 28-68t68-28h832q40 0 68 28t28 68v416zm-384-928v-320q0-13-9.5-22.5t-22.5-9.5h-192q-13 0-22.5 9.5t-9.5 22.5v320q0 13 9.5 22.5t22.5 9.5h192q13 0 22.5-9.5t9.5-22.5zm640 32v928q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1344q0-40 28-68t68-28h928q40 0 88 20t76 48l280 280q28 28 48 76t20 88z\"/> </svg>"

/***/ }),

/***/ 71287:
/***/ (function(module) {

module.exports = "<svg viewBox=\"0 0 48 48\" xmlns=\"http://www.w3.org/2000/svg\"> <path stroke=\"null\" d=\"m42.276011,26.302547c0.098397,-0.76605 0.172194,-1.54407 0.172194,-2.33406s-0.073797,-1.56801 -0.172194,-2.33406l5.202718,-3.961917c0.467384,-0.359086 0.602679,-1.005441 0.29519,-1.532101l-4.919828,-8.29489c-0.307489,-0.51469 -0.947067,-0.730142 -1.500548,-0.51469l-6.125186,2.405877c-1.266856,-0.945594 -2.656707,-1.747553 -4.157255,-2.357999l-0.922468,-6.343855c-0.110696,-0.562568 -0.614979,-1.005441 -1.229957,-1.005441l-9.839656,0c-0.614979,0 -1.119261,0.442873 -1.217657,1.005441l-0.922468,6.343855c-1.500548,0.610446 -2.890399,1.400436 -4.157255,2.357999l-6.125186,-2.405877c-0.553481,-0.203482 -1.193058,0 -1.500548,0.51469l-4.919828,8.29489c-0.307489,0.51469 -0.172194,1.161045 0.29519,1.532101l5.190419,3.961917c-0.098397,0.76605 -0.172194,1.54407 -0.172194,2.33406s0.073797,1.56801 0.172194,2.33406l-5.190419,3.961917c-0.467384,0.359086 -0.602679,1.005441 -0.29519,1.532101l4.919828,8.29489c0.307489,0.51469 0.947067,0.730142 1.500548,0.51469l6.125186,-2.405877c1.266856,0.945594 2.656707,1.747553 4.157255,2.357999l0.922468,6.343855c0.098397,0.562568 0.602679,1.005441 1.217657,1.005441l9.839656,0c0.614979,0 1.119261,-0.442873 1.217657,-1.005441l0.922468,-6.343855c1.500548,-0.610446 2.890399,-1.400436 4.157255,-2.357999l6.125186,2.405877c0.553481,0.203482 1.193058,0 1.500548,-0.51469l4.919828,-8.29489c0.307489,-0.51469 0.172194,-1.161045 -0.29519,-1.532101l-5.190419,-3.961917zm-18.277162,6.044617c-4.759934,0 -8.609699,-3.746465 -8.609699,-8.378677s3.849766,-8.378677 8.609699,-8.378677s8.609699,3.746465 8.609699,8.378677s-3.849766,8.378677 -8.609699,8.378677z\"/> </svg>"

/***/ }),

/***/ 39428:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1728 576v256q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45v-256q0-106-75-181t-181-75-181 75-75 181v192h96q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h672v-192q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5z\"/> </svg>"

/***/ }),

/***/ 92472:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1639 1056q0 5-1 7-64 268-268 434.5t-478 166.5q-146 0-282.5-55t-243.5-157l-129 129q-19 19-45 19t-45-19-19-45v-448q0-26 19-45t45-19h448q26 0 45 19t19 45-19 45l-137 137q71 66 161 102t187 36q134 0 250-65t186-179q11-17 53-117 8-23 30-23h192q13 0 22.5 9.5t9.5 22.5zm25-800v448q0 26-19 45t-45 19h-448q-26 0-45-19t-19-45 19-45l138-138q-148-137-349-137-134 0-250 65t-186 179q-11 17-53 117-8 23-30 23h-199q-13 0-22.5-9.5t-9.5-22.5v-7q65-268 270-434.5t480-166.5q146 0 284 55.5t245 156.5l130-129q19-19 45-19t45 19 19 45z\"/> </svg>"

/***/ }),

/***/ 60828:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1344 1472q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zm256 0q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zm128-224v320q0 40-28 68t-68 28h-1472q-40 0-68-28t-28-68v-320q0-40 28-68t68-28h427q21 56 70.5 92t110.5 36h256q61 0 110.5-36t70.5-92h427q40 0 68 28t28 68zm-325-648q-17 40-59 40h-256v448q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-448h-256q-42 0-59-40-17-39 14-69l448-448q18-19 45-19t45 19l448 448q31 30 14 69z\"/> </svg>"

/***/ }),

/***/ 86354:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1216 320q0 26-19 45t-45 19h-128v1024h128q26 0 45 19t19 45-19 45l-256 256q-19 19-45 19t-45-19l-256-256q-19-19-19-45t19-45 45-19h128v-1024h-128q-26 0-45-19t-19-45 19-45l256-256q19-19 45-19t45 19l256 256q19 19 19 45z\"/> </svg>"

/***/ }),

/***/ 52378:
/***/ (function(module) {

"use strict";
module.exports = {assert(){}};;

/***/ }),

/***/ 45143:
/***/ (function(module) {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE__45143__;

/***/ }),

/***/ 97582:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   gn: function() { return /* binding */ __decorate; },
/* harmony export */   mG: function() { return /* binding */ __awaiter; }
/* harmony export */ });
/* unused harmony exports __extends, __assign, __rest, __param, __esDecorate, __runInitializers, __propKey, __setFunctionName, __metadata, __generator, __createBinding, __exportStar, __values, __read, __spread, __spreadArrays, __spreadArray, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault, __classPrivateFieldGet, __classPrivateFieldSet, __classPrivateFieldIn, __addDisposableResource, __disposeResources */
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise, SuppressedError, Symbol */

var extendStatics = function(d, b) {
  extendStatics = Object.setPrototypeOf ||
      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
  return extendStatics(d, b);
};

function __extends(d, b) {
  if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
  extendStatics(d, b);
  function __() { this.constructor = d; }
  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
  __assign = Object.assign || function __assign(t) {
      for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
      return t;
  }
  return __assign.apply(this, arguments);
}

function __rest(s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
              t[p[i]] = s[p[i]];
      }
  return t;
}

function __decorate(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
  return function (target, key) { decorator(target, key, paramIndex); }
}

function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
  function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
  var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
  var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
  var _, done = false;
  for (var i = decorators.length - 1; i >= 0; i--) {
      var context = {};
      for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
      for (var p in contextIn.access) context.access[p] = contextIn.access[p];
      context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
      var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
      if (kind === "accessor") {
          if (result === void 0) continue;
          if (result === null || typeof result !== "object") throw new TypeError("Object expected");
          if (_ = accept(result.get)) descriptor.get = _;
          if (_ = accept(result.set)) descriptor.set = _;
          if (_ = accept(result.init)) initializers.unshift(_);
      }
      else if (_ = accept(result)) {
          if (kind === "field") initializers.unshift(_);
          else descriptor[key] = _;
      }
  }
  if (target) Object.defineProperty(target, contextIn.name, descriptor);
  done = true;
};

function __runInitializers(thisArg, initializers, value) {
  var useValue = arguments.length > 2;
  for (var i = 0; i < initializers.length; i++) {
      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
  }
  return useValue ? value : void 0;
};

function __propKey(x) {
  return typeof x === "symbol" ? x : "".concat(x);
};

function __setFunctionName(f, name, prefix) {
  if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
  return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};

function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
  return new (P || (P = Promise))(function (resolve, reject) {
      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
      function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}

function __generator(thisArg, body) {
  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
  function verb(n) { return function (v) { return step([n, v]); }; }
  function step(op) {
      if (f) throw new TypeError("Generator is already executing.");
      while (g && (g = 0, op[0] && (_ = 0)), _) try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];
          switch (op[0]) {
              case 0: case 1: t = op; break;
              case 4: _.label++; return { value: op[1], done: false };
              case 5: _.label++; y = op[1]; op = [0]; continue;
              case 7: op = _.ops.pop(); _.trys.pop(); continue;
              default:
                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                  if (t[2]) _.ops.pop();
                  _.trys.pop(); continue;
          }
          op = body.call(thisArg, _);
      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
  }
}

var __createBinding = Object.create ? (function(o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  var desc = Object.getOwnPropertyDescriptor(m, k);
  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
  }
  Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

function __exportStar(m, o) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}

function __values(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
      next: function () {
          if (o && i >= o.length) o = void 0;
          return { value: o && o[i++], done: !o };
      }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o), r, ar = [], e;
  try {
      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
  }
  catch (error) { e = { error: error }; }
  finally {
      try {
          if (r && !r.done && (m = i["return"])) m.call(i);
      }
      finally { if (e) throw e.error; }
  }
  return ar;
}

/** @deprecated */
function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++)
      ar = ar.concat(__read(arguments[i]));
  return ar;
}

/** @deprecated */
function __spreadArrays() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
  for (var r = Array(s), k = 0, i = 0; i < il; i++)
      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
          r[k] = a[j];
  return r;
}

function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
          if (!ar) ar = Array.prototype.slice.call(from, 0, i);
          ar[i] = from[i];
      }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
}

function __await(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []), i, q = [];
  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
  function fulfill(value) { resume("next", value); }
  function reject(value) { resume("throw", value); }
  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
  var i, p;
  return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator], i;
  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
  return cooked;
};

var __setModuleDefault = Object.create ? (function(o, v) {
  Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
  o["default"] = v;
};

function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  __setModuleDefault(result, mod);
  return result;
}

function __importDefault(mod) {
  return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, state, kind, f) {
  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
  return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}

function __classPrivateFieldSet(receiver, state, value, kind, f) {
  if (kind === "m") throw new TypeError("Private method is not writable");
  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
  return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
}

function __classPrivateFieldIn(state, receiver) {
  if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
  return typeof state === "function" ? receiver === state : state.has(receiver);
}

function __addDisposableResource(env, value, async) {
  if (value !== null && value !== void 0) {
    if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
    var dispose;
    if (async) {
        if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
        dispose = value[Symbol.asyncDispose];
    }
    if (dispose === void 0) {
        if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
        dispose = value[Symbol.dispose];
    }
    if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
    env.stack.push({ value: value, dispose: dispose, async: async });
  }
  else if (async) {
    env.stack.push({ async: true });
  }
  return value;
}

var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
  var e = new Error(message);
  return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};

function __disposeResources(env) {
  function fail(e) {
    env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
    env.hasError = true;
  }
  function next() {
    while (env.stack.length) {
      var rec = env.stack.pop();
      try {
        var result = rec.dispose && rec.dispose.call(rec.value);
        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
      }
      catch (e) {
          fail(e);
      }
    }
    if (env.hasError) throw env.error;
  }
  return next();
}

/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ({
  __extends,
  __assign,
  __rest,
  __decorate,
  __param,
  __metadata,
  __awaiter,
  __generator,
  __createBinding,
  __exportStar,
  __values,
  __read,
  __spread,
  __spreadArrays,
  __spreadArray,
  __await,
  __asyncGenerator,
  __asyncDelegator,
  __asyncValues,
  __makeTemplateObject,
  __importStar,
  __importDefault,
  __classPrivateFieldGet,
  __classPrivateFieldSet,
  __classPrivateFieldIn,
  __addDisposableResource,
  __disposeResources,
});


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	!function() {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = function(result, chunkIds, fn, priority) {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var chunkIds = deferred[i][0];
/******/ 				var fn = deferred[i][1];
/******/ 				var priority = deferred[i][2];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	!function() {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			670: 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = function(parentChunkLoadingFunction, data) {
/******/ 			var chunkIds = data[0];
/******/ 			var moreModules = data[1];
/******/ 			var runtime = data[2];
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkjodit"] = self["webpackChunkjodit"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	}();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
!function() {
"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CommitMode: function() { return /* binding */ CommitMode; },
/* harmony export */   Jodit: function() { return /* reexport safe */ _jodit__WEBPACK_IMPORTED_MODULE_1__.h; }
/* harmony export */ });
/* harmony import */ var _core_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62924);
/* harmony import */ var _jodit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(44380);
/* harmony import */ var _languages__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(10602);
/* harmony import */ var jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(78157);
/* harmony import */ var _core_decorators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(13666);
/* harmony import */ var _modules___WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(27801);
/* harmony import */ var _styles_icons___WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(20874);
/* harmony import */ var jodit_plugins_index__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(14219);
/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2024 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * [[include:README.md]]
 * @packageDocumentation
 * @module jodit
 */










// copy constants in Jodit
Object.keys(_core_constants__WEBPACK_IMPORTED_MODULE_0__).forEach((key) => {
    _jodit__WEBPACK_IMPORTED_MODULE_1__/* .Jodit */ .h[key] = _core_constants__WEBPACK_IMPORTED_MODULE_0__[key];
});
const esFilter = (key) => key !== '__esModule';
// Icons
Object.keys(_styles_icons___WEBPACK_IMPORTED_MODULE_6__)
    .filter(esFilter)
    .forEach((key) => {
    _modules___WEBPACK_IMPORTED_MODULE_5__.Icon.set(key.replace('_', '-'), _styles_icons___WEBPACK_IMPORTED_MODULE_6__[key]);
});
// Modules
Object.keys(_modules___WEBPACK_IMPORTED_MODULE_5__)
    .filter(esFilter)
    .forEach((key) => {
    var _a;
    // @ts-ignore
    const module = _modules___WEBPACK_IMPORTED_MODULE_5__[key];
    const name = (0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_3__/* .isFunction */ .mf)((_a = module.prototype) === null || _a === void 0 ? void 0 : _a.className)
        ? module.prototype.className()
        : key;
    if (!(0,jodit_core_helpers_checker__WEBPACK_IMPORTED_MODULE_3__/* .isString */ .HD)(name)) {
        console.warn('Module name must be a string', key);
        return;
    }
    // @ts-ignore
    _jodit__WEBPACK_IMPORTED_MODULE_1__/* .Jodit */ .h.modules[name] = module;
});
// Decorators
Object.keys(_core_decorators__WEBPACK_IMPORTED_MODULE_4__)
    .filter(esFilter)
    .forEach((key) => {
    // @ts-ignore
    _jodit__WEBPACK_IMPORTED_MODULE_1__/* .Jodit */ .h.decorators[key] = _core_decorators__WEBPACK_IMPORTED_MODULE_4__[key];
});
['Confirm', 'Alert', 'Prompt'].forEach((key) => {
    // @ts-ignore
    _jodit__WEBPACK_IMPORTED_MODULE_1__/* .Jodit */ .h[key] = _modules___WEBPACK_IMPORTED_MODULE_5__[key];
});
// Languages
Object.keys(_languages__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)
    .filter(esFilter)
    .forEach((key) => {
    _jodit__WEBPACK_IMPORTED_MODULE_1__/* .Jodit */ .h.lang[key] = _languages__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z[key];
});

class CommitMode {
}

}();
__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	return __webpack_exports__;
/******/ })()
;
});